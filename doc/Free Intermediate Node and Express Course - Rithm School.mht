From: <Saved by Blink>
Snapshot-Content-Location: https://www.rithmschool.com/courses/intermediate-node-express/api-tests-with-jest
Subject: Free Intermediate Node and Express Course | Rithm School
Date: Fri, 10 Jun 2022 16:01:29 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--xuw2UVmZ3Veg0bio4EzmkENqo26lwNH9MTx2EuvV0n----"


------MultipartBoundary--xuw2UVmZ3Veg0bio4EzmkENqo26lwNH9MTx2EuvV0n----
Content-Type: text/html
Content-ID: <frame-B70E6592BA79FB7B31CEB9DB111EBEB4@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.rithmschool.com/courses/intermediate-node-express/api-tests-with-jest

<!DOCTYPE html><html lang=3D"en" class=3D" js flexbox flexboxlegacy canvas =
canvastext webgl no-touch geolocation postmessage websqldatabase indexeddb =
hashchange history draganddrop websockets rgba hsla multiplebgs backgrounds=
ize borderimage borderradius boxshadow textshadow opacity cssanimations css=
columns cssgradients cssreflections csstransforms csstransforms3d csstransi=
tions fontface generatedcontent video audio localstorage sessionstorage web=
workers no-applicationcache svg inlinesvg smil svgclippaths" style=3D""><he=
ad><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3DUTF-8"=
><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-2c7734aa-d5ff-4=
8a8-bf16-06996aa73242@mhtml.blink" />

  <meta property=3D"og:image" content=3D"https://www.rithmschool.com/assets=
/logos/rithm_logo-f188d2545d88917c033e407f4f87b02e2a3f5cf5dfb60e626787785fa=
9c13774.svg">
 =20
  <meta http-equiv=3D"X-UA-Compatible" content=3D"IE=3Dedge">
  <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D=
1">
  <meta name=3D"description" content=3D"Learn intermediate Node.js and Expr=
ess.js including password hashing with bcrypt, using cookies and sessions f=
or authentication, OAuth with passport.js, building and securing JSON APIs =
and much more">
  <meta name=3D"author" content=3D"Rithm School">


  <title>Free Intermediate Node and Express Course | Rithm School</title>



  <link rel=3D"stylesheet" media=3D"all" href=3D"https://www.rithmschool.co=
m/assets/application-5513cce246a238f41feaf57cd039a69018992d3dc114a2508d07c0=
076f30ce98.css">

  <!-- Add a stylesheet tag for the name of the action -->
  <link rel=3D"stylesheet" media=3D"screen" href=3D"https://www.rithmschool=
.com/assets/main-69beda904921e3c333ed21f2aed0c331bf01b1bd1cf64ee9df327720a9=
ef7e99.css">
  <link rel=3D"stylesheet" media=3D"screen" href=3D"https://www.rithmschool=
.com/assets/online_courses-5f5aa0adc079da6096414274ea95cbf5010c9f66e0b55e0e=
221f2ab002773ba1.css">


  <link rel=3D"shortcut icon" type=3D"image/x-icon" href=3D"https://www.rit=
hmschool.com/assets/favicon-b8a8b6e18aa3c4ab274a51634adf4cc0603d04a13cfac11=
d5de1bcfc42cc82e7.ico">
  <meta name=3D"csrf-param" content=3D"authenticity_token">
<meta name=3D"csrf-token" content=3D"BKAgNimkdsQz1puizTSze95PWV4S9GunNj547K=
aEfA5FPUIOmgzON0wXW5z9j6TCEkqtkB3huw7oPwiTvmUMtg=3D=3D">

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media =
queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// =
-->
    <!--[if lt IE 9]>
        <script src=3D"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shi=
v.js"></script>
        <script src=3D"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond=
.min.js"></script>
    <![endif]-->

<!-- Google Tag Manager -->

<!-- End Google Tag Manager -->

<!-- Facebook Pixel Code -->


<!-- End Facebook Pixel Code -->

<!-- Fullstory script -->






 =20
 =20

<!-- start Mixpanel --><!-- end Mixpanel -->



<!-- Global site tag (gtag.js) - Google Analytics -->





</head>
<body data-new-gr-c-s-check-loaded=3D"14.1063.0" data-gr-ext-installed=3D""=
>

<!-- Google Tag Manager (noscript) -->

<!-- End Google Tag Manager (noscript) -->


  <a id=3D"banner-alert" target=3D"_blank" href=3D"https://www.udemy.com/th=
e-advanced-web-developer-bootcamp/?couponCode=3DLAUNCH-CODE" style=3D"displ=
ay: inline-block;">
<div data-event-name=3D"click_cta" data-label=3D"location" data-event-label=
=3D"banner" class=3D"container">
    <p type=3D"button" class=3D"close">=C3=97</p>
    <span class=3D"banner-text"><span class=3D"banner-text">Interested in 2=
5 hours of screencasts and over 100+ exercises? <u>Check out our new Udemy =
Course</u></span></span>
  </div>
</a>

    <nav data-event-name=3D"click_cta" data-label=3D"location" data-event-l=
abel=3D"navbar" id=3D"mainNav" class=3D"navbar navbar-default navbar-custom=
 ">
    <div class=3D"container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class=3D"navbar-header">
            <button type=3D"button" class=3D"navbar-toggle" data-toggle=3D"=
collapse" data-target=3D"#bs-example-navbar-collapse-1">
                <span class=3D"sr-only">Toggle navigation</span><i class=3D=
"fa fa-2x fa-bars"></i>
            </button>

            <div class=3D"navbar-button">
              <a class=3D"navbar-brand" data-event-name=3D"click_cta" data-=
label=3D"page" data-event-label=3D"homepage" href=3D"https://www.rithmschoo=
l.com/">
                  <img height=3D"45" alt=3D"rithm school company logo" titl=
e=3D"Rithm School Logo" src=3D"https://www.rithmschool.com/assets/logos/rit=
hm_logo-f188d2545d88917c033e407f4f87b02e2a3f5cf5dfb60e626787785fa9c13774.sv=
g">
</a>            </div>
        </div>

        <div class=3D"collapse navbar-collapse" id=3D"bs-example-navbar-col=
lapse-1">
            <ul class=3D"nav navbar-nav">
              <li class=3D"dropdown">
                <a>
                  Learn Full Time&nbsp;<span class=3D"caret"></span>
</a>                <ul class=3D"dropdown-menu dropdown-menu-left">
                    <li data-event-name=3D"click_cta" data-label=3D"page" d=
ata-event-label=3D"covid"><a id=3D"#covid" href=3D"https://www.rithmschool.=
com/covid">Coronavirus Response</a>
                    </li><li data-event-name=3D"click_cta" data-label=3D"pa=
ge" data-event-label=3D"program"><a id=3D"#details" href=3D"https://www.rit=
hmschool.com/program">Program Details</a>
                    </li><li data-event-name=3D"click_cta" data-label=3D"pa=
ge" data-event-label=3D"admissions"><a id=3D"#admissions" href=3D"https://w=
ww.rithmschool.com/admissions">Admissions and Course Dates</a></li>
                    <li data-event-name=3D"click_cta" data-label=3D"page" d=
ata-event-label=3D"program"><a id=3D"#tuition" href=3D"https://www.rithmsch=
ool.com/tuition">Tuition</a>
                    </li><li data-event-name=3D"click_cta" data-label=3D"pa=
ge" data-event-label=3D"curriculum"><a id=3D"#curriculum" href=3D"https://w=
ww.rithmschool.com/curriculum">Curriculum</a></li>
                    <li data-event-name=3D"click_cta" data-label=3D"page" d=
ata-event-label=3D"company-projects"><a id=3D"#company_projects" href=3D"ht=
tps://www.rithmschool.com/company-projects">Company Projects</a></li>
                    <li data-event-name=3D"click_cta" data-label=3D"page" d=
ata-event-label=3D"outcomes"><a id=3D"#outcomes" href=3D"https://www.rithms=
chool.com/outcomes">Outcomes + Job Support</a></li>
                    <li data-event-name=3D"click_cta" data-label=3D"page" d=
ata-event-label=3D"faq"><a id=3D"#faq" href=3D"https://www.rithmschool.com/=
faq">FAQs</a></li>
                    <li data-event-name=3D"click_cta" data-label=3D"page" d=
ata-event-label=3D"apply"><a id=3D"#apply" href=3D"https://www.rithmschool.=
com/apply">Apply Now</a></li>
                  </ul>
              </li>
              <li class=3D"dropdown">
                <a>
                  Workshops + Events&nbsp;<span class=3D"caret"></span>
</a>                <ul class=3D"dropdown-menu dropdown-menu-left">

                      <li><a id=3D"#private_prep" href=3D"https://www.rithm=
school.com/private-prep">Private Prep</a>
                    </li><li><a id=3D"#workshops" href=3D"https://www.rithm=
school.com/events">All Events</a></li>
                  </ul>
              </li>
                <li data-event-name=3D"free-online-courses">
                  <a id=3D"#online-courses" href=3D"https://www.rithmschool=
.com/courses">Free Online Courses</a>
                </li>
                  <li class=3D"dropdown">
                    <a>
                      For Companies&nbsp;<span class=3D"caret"></span>
</a>                  <ul class=3D"dropdown-menu dropdown-menu-left">
                      <li data-event-name=3D"click_cta" data-label=3D"page"=
 data-event-label=3D"hire">
                        <a id=3D"#hire" href=3D"https://www.rithmschool.com=
/hire-a-grad">Hire a Rithm Grad</a>
                      </li>
                    <li>
                      <a id=3D"#curriculum-licensing" href=3D"https://www.r=
ithmschool.com/curriculum-licensing">Curriculum Licensing</a>
                    </li>
                    </ul>
                </li>
                <li>
                    <a id=3D"#team" href=3D"https://www.rithmschool.com/tea=
m">Our Team</a>
                </li>
                <li>
                  <a id=3D"#blog" href=3D"https://www.rithmschool.com/blog"=
>Blog</a>
                </li>
                <li>
                    <a class=3D"apply-now btn" id=3D"apply" data-event-name=
=3D"apply_button_clicked" href=3D"https://www.rithmschool.com/apply">Apply =
Now</a>
                </li>
            </ul>
        </div>
        <!-- /.navbar-collapse -->
    </div>
</nav>


<div class=3D"container">
 =20
  <link rel=3D"stylesheet" media=3D"screen" href=3D"https://www.rithmschool=
.com/assets/sidebar-d2287389bf5271229e2383f0a7a65ef5461aa71513ea74923fba3c9=
2c2a7c01b.css">

<div id=3D"wrapper">

  <div id=3D"sidebar-wrapper">
      <ul class=3D"sidebar-nav">
                  <div class=3D"course-unit">
  <h4>
    <span class=3D"unit-title">1 Building, Securing, and Testing JSON APIs<=
/span>
    <small>
      <i class=3D"fa fa-clock-o"></i>
      6 sections, 2 - 3 hours
    </small>
    <i class=3D"fa fa-2x fa-angle-right"></i>
  </h4>
  <ul>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/password-hashing-bcrypt">Password Hashing with bcrypt</a>
      </li>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/authentication-with-jwts">Authentication with JWTs</a>
      </li>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/validation-with-json-schema">Input Validation with JSONSchema</a>
      </li>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/environment-variables-node">Environment Variables</a>
      </li>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/api-tests-with-jest">Writing API Tests with Jest</a>
      </li>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/api-security-exercises">API Exercise</a>
      </li>
  </ul>
</div>

                  <div class=3D"course-unit">
  <h4>
    <span class=3D"unit-title">2 Preparing Node APIs for Production</span>
    <small>
      <i class=3D"fa fa-clock-o"></i>
      4 sections, 1 - 2 hours
    </small>
    <i class=3D"fa fa-2x fa-angle-right"></i>
  </h4>
  <ul>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/production-directory-structure">Production Directory Structure</a>
      </li>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/node-process-managers">Node Process Managers</a>
      </li>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/introduction-to-heroku">Introduction to Heroku</a>
      </li>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/heroku-postgres">Adding a Postgres Database to Heroku</a>
      </li>
  </ul>
</div>

                  <div class=3D"course-unit">
  <h4>
    <span class=3D"unit-title">3 Other Tech Stacks with Node/Express</span>
    <small>
      <i class=3D"fa fa-clock-o"></i>
      4 sections, 2 - 3 hours
    </small>
    <i class=3D"fa fa-2x fa-angle-right"></i>
  </h4>
  <ul>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/pug">Server-side Templating with Pug</a>
      </li>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/redis">Lightweight Storage with Redis</a>
      </li>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/passport-local">Authentication with Passport Local </a>
      </li>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/passport-oauth">OAuth with Passport.js</a>
      </li>
  </ul>
</div>

                  <div class=3D"course-unit">
  <h4>
    <span class=3D"unit-title">4 MongoDB and Mongoose</span>
    <small>
      <i class=3D"fa fa-clock-o"></i>
      4 sections, 2 - 3 hours
    </small>
    <i class=3D"fa fa-2x fa-angle-right"></i>
  </h4>
  <ul>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/introduction-to-mongodb">Introduction to NoSQL</a>
      </li>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/introduction-to-mongoose">MongoDB with Mongoose</a>
      </li>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/mongoose-crud">CRUD with Mongoose</a>
      </li>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/mongoose-associations">Mongoose Associations</a>
      </li>
  </ul>
</div>

                  <div class=3D"course-unit">
  <h4>
    <span class=3D"unit-title">5 Real Time Applications, Mailers and Scrapi=
ng</span>
    <small>
      <i class=3D"fa fa-clock-o"></i>
      4 sections, 2 - 3 hours
    </small>
    <i class=3D"fa fa-2x fa-angle-right"></i>
  </h4>
  <ul>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/real-time-applications">Real Time Applications with Socket.io</a>
      </li>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/node-email-nodemailer">Sending Email with Nodemailer</a>
      </li>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/node-web-scraping">Web Scraping with Node.js</a>
      </li>
      <li>
        <a href=3D"https://www.rithmschool.com/courses/intermediate-node-ex=
press/background-jobs-kue">Background Jobs with Kue</a>
      </li>
  </ul>
</div>

  </ul></div>

  <div data-event-name=3D"course_continue" id=3D"page-content-wrapper">
    <div class=3D"nav-links text-center">
        <a id=3D"next-link" href=3D"https://www.rithmschool.com/courses/int=
ermediate-node-express/environment-variables-node">Previous</a> |
      <a href=3D"https://www.rithmschool.com/courses/intermediate-node-expr=
ess">Table of Contents</a>
        | <a id=3D"next-link" href=3D"https://www.rithmschool.com/courses/i=
ntermediate-node-express/api-security-exercises">Next</a>
    </div>
    <h1 class=3D"begin-text heading">{&nbsp;Writing API Tests with Jest.&nb=
sp;}</h1>

    <button id=3D"show-courses">
      <i class=3D"fa fa-angle-double-right fa-2x"></i>
    </button>

    <div data-unit=3D"1" id=3D"course-content">
      <h3>Objectives:</h3>

<p>By the end of this chapter, you should be able to:</p>

<ul>
<li>Write code to test API endpoints</li>
<li>Use <code>jest</code> and <code>supertest</code> to write unit and inte=
gration tests</li>
</ul>

<h3>Jest Introduction</h3>

<p><a target=3D"_blank" href=3D"https://facebook.github.io/jest/" rel=3D"no=
opener noreferrer">Jest</a> is a wonderful testing library created by Faceb=
ook to help test JavaScript code, React components, and much more. What's g=
reat about Jest is it not only has a similar syntax to other testing/assert=
ion libraries like Jasmine and Chai, but with Jest your tests run in parall=
el so they are executed much faster than other testing frameworks.</p>

<p>To use <code>jest</code> globally we can install it with <code>npm insta=
ll -g jest</code>. If you are getting errors with this installation you can=
 use <code>sudo npm install -g jest</code>. Since installing with sudo is n=
ot the best option, you can read more about how to fix permissions <a targe=
t=3D"_blank" href=3D"https://stackoverflow.com/questions/16151018/npm-throw=
s-error-without-sudo" rel=3D"noopener noreferrer">here</a> if you would lik=
e to install without <code>sudo</code> going forward.</p>

<p>Since we are using testing libraries, these are not dependencies that wi=
ll be using in production. Therefore, when we install these using <code>npm=
</code> we want to make sure to run <code>npm install --save-dev</code> rat=
her than <code>npm install</code>, so that we do save them to our <code>pac=
kage.json</code>, but do not install them in production. When you do this, =
you should see that your <code>package.json</code> consists of two sets of =
dependencies: <code>dependencies</code> and <code>devDependencies</code>.</=
p>

<h3>Unit Tests</h3>

<p>To start, we're going to use <code>jest</code> to write a few simple uni=
t tests. Let's run the following in Terminal.</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre>mkdir learn-jest
cd learn-jest
npm init -y
mkdir __tests__
touch __tests__/first.test.js
touch index.js
</pre></div>
</div>

<p>Notice here that we have placed our tests inside of a <code>__tests__</c=
ode> folder, which is important for <code>jest</code> to</p>

<p>Let's now run <code>jest</code> (make sure you have installed it globall=
y using <code>npm install -g jest</code>) and we should see the following:<=
/p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre> FAIL  __tests__/first.test.js
  =E2=97=8F Test suite failed to run

    Your test suite must contain at least one test.

      at node_modules/jest/node_modules/jest-cli/build/test_scheduler.js:24=
6:22

Test Suites: 1 failed, 1 total
Tests:       0 total
Snapshots:   0 total
Time:        1.488s
Ran all test suites.
</pre></div>
</div>

<p>So let's go add a simple test in our <code>first.test.js</code> file! In=
side of there let's write:</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre>test(<span class=3D"string"><span class=3D"delim=
iter">"</span><span class=3D"content">It adds two numbers</span><span class=
=3D"delimiter">"</span></span>, () =3D&gt; {
  expect(<span class=3D"integer">1</span> + <span class=3D"integer">1</span=
>).toBe(<span class=3D"integer">2</span>);
});
</pre></div>
</div>

<p>When we run <code>jest</code> again, we should see the following:</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre> PASS  __tests__/first.test.js
  <span class=3D"error">=E2=9C=93</span> it adds two numbers (<span class=
=3D"integer">4</span>ms)

Test Suites: <span class=3D"integer">1</span> passed, <span class=3D"intege=
r">1</span> total
Tests:       <span class=3D"integer">1</span> passed, <span class=3D"intege=
r">1</span> total
Snapshots:   <span class=3D"integer">0</span> total
Time:        <span class=3D"float">2.018</span>s
Ran all test suites.
</pre></div>
</div>

<p>Looks good! Let's now run <code>jest --watchAll</code> and we should see=
 the following:</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre> PASS  __tests__/first.test.js
  <span class=3D"error">=E2=9C=93</span> it adds two numbers (<span class=
=3D"integer">4</span>ms)

Test Suites: <span class=3D"integer">1</span> passed, <span class=3D"intege=
r">1</span> total
Tests:       <span class=3D"integer">1</span> passed, <span class=3D"intege=
r">1</span> total
Snapshots:   <span class=3D"integer">0</span> total
Time:        <span class=3D"float">0.991</span>s, estimated <span class=3D"=
integer">1</span>s
Ran all test suites.

Watch Usage
 <span class=3D"error">=E2=80=BA</span> Press f to run only failed tests.
 <span class=3D"error">=E2=80=BA</span> Press o to only run tests related t=
o changed files.
 <span class=3D"error">=E2=80=BA</span> Press p to filter by a filename reg=
ex pattern.
 <span class=3D"error">=E2=80=BA</span> Press t to filter by a test name re=
gex pattern.
 <span class=3D"error">=E2=80=BA</span> Press q to quit watch mode.
 <span class=3D"error">=E2=80=BA</span> Press Enter to trigger a test run.
</pre></div>
</div>

<p>What we're looking at here is the ability for Jest to constantly watch f=
or changes to our tests! This is a wonderful way to not have to run <code>j=
est</code> every time we want to see if our tests pass and makes Test Drive=
n Development even easier!</p>

<p>Let's try testing a simple function in our <code>index.js</code> file. L=
et's write a function called letterCount which accepts a character and a st=
ring and returns the number of times that character appears. We can do this=
 from a TDD perspective so let's write some failing tests first! In our <co=
de>first.test.js</code> file let's add:</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre>const letterCount =3D require(<span class=3D"str=
ing"><span class=3D"delimiter">"</span><span class=3D"content">../</span><s=
pan class=3D"delimiter">"</span></span>); <span class=3D"comment">// same a=
s ../index.js</span>

test(<span class=3D"string"><span class=3D"delimiter">"</span><span class=
=3D"content">letterCount works with regular strings</span><span class=3D"de=
limiter">"</span></span>, () =3D&gt; {
  expect(letterCount(<span class=3D"string"><span class=3D"delimiter">"</sp=
an><span class=3D"content">awesome</span><span class=3D"delimiter">"</span>=
</span>, <span class=3D"string"><span class=3D"delimiter">"</span><span cla=
ss=3D"content">e</span><span class=3D"delimiter">"</span></span>)).toBe(<sp=
an class=3D"integer">2</span>);
});
</pre></div>
</div>

<p>Right away we should see:</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre> FAIL  __tests__/first.test.js
  =E2=9C=95 letterCount works with regular strings (5ms)

  =E2=97=8F letterCount works with regular strings

    TypeError: letterCount is not a function

      2 |
      3 | test("letterCount works with regular strings", () =3D&gt; {
    &gt; 4 |   expect(letterCount("awesome", "e")).toBe(2);
        |          ^
      5 | });
      6 |

      at Object.&lt;anonymous&gt;.test (__tests__/first.test.js:4:10)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 1 total
Snapshots:   0 total
Time:        0.475s, estimated 1s
Ran all test suites.
</pre></div>
</div>

<p>In our index.js let's go make sure we have a function!</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre><span class=3D"keyword">function</span> <span cl=
ass=3D"function">letterCount</span>(str, <span class=3D"reserved">char</spa=
n>) {}

module.exports =3D letterCount;
</pre></div>
</div>

<p>Back in Terminal - we should now see the following output:</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre> FAIL  __tests__/first.test.js
  =E2=9C=95 letterCount works with regular strings (5ms)

  =E2=97=8F letterCount works with regular strings

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: undefined

    Difference:

      Comparing two different types of values. Expected number but received=
 undefined.

      2 |
      3 | test("letterCount works with regular strings", () =3D&gt; {
    &gt; 4 |   expect(letterCount("awesome", "e")).toBe(2);
        |                                       ^
      5 | });
      6 |

      at Object.&lt;anonymous&gt;.test (__tests__/first.test.js:4:39)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 1 total
Snapshots:   0 total
Time:        0.548s
Ran all test suites.
</pre></div>
</div>

<p>Our tests are still failing because we didnt implement the function, so =
let's do that! In our <code>index.js</code>, let's add:</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre><span class=3D"keyword">function</span> <span cl=
ass=3D"function">letterCount</span>(str, <span class=3D"reserved">char</spa=
n>) {
  let count =3D <span class=3D"integer">0</span>;
  <span class=3D"keyword">for</span> (let letter of str) {
    <span class=3D"keyword">if</span> (letter =3D=3D=3D <span class=3D"rese=
rved">char</span>) {
      count++;
    }
  }
  <span class=3D"keyword">return</span> count;
}

module.exports =3D letterCount;
</pre></div>
</div>

<p>We should now see the following in the Terminal:</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre> PASS  __tests__/first.test.js
  =E2=9C=93 letterCount works with regular strings (3ms)

Test Suites: 1 passed, 1 total
Tests:       1 passed, 1 total
Snapshots:   0 total
Time:        0.746s, estimated 1s
Ran all test suites.
</pre></div>
</div>

<h3>Your Turn</h3>

<p>Try adding some more tests to watch for edge cases (capital vs lowercase=
 letters, invalid input, etc)!</p>

<h3>Matchers</h3>

<p>Jest has quite a few functions used for assertions/expectations. You can=
 see a full list <a target=3D"_blank" href=3D"https://facebook.github.io/je=
st/docs/en/expect.html" rel=3D"noopener noreferrer">here</a>, but here are =
some common ones.</p>

<ul>
<li><code>toBeDefined</code></li>
<li><code>toBeGreaterThan / toBeLessThan</code></li>
<li><code>toBe</code> (uses =3D=3D=3D to compare)</li>
<li><code>toEqual</code> (for deep object comparison)</li>
<li><code>toContain</code> (see if a value is inside of a collection)</li>
</ul>

<p>Let's try out a few more examples of the syntax in <code>learn.test.js</=
code>:</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre>test(<span class=3D"string"><span class=3D"delim=
iter">"</span><span class=3D"content">arithmetic</span><span class=3D"delim=
iter">"</span></span>, <span class=3D"keyword">function</span>() {
  expect(<span class=3D"integer">4</span> + <span class=3D"integer">4</span=
>).toBeGreaterThan(<span class=3D"integer">7</span>);
  expect(<span class=3D"integer">4</span> + <span class=3D"integer">4</span=
>).toBeLessThan(<span class=3D"integer">9</span>);
});

test(<span class=3D"string"><span class=3D"delimiter">"</span><span class=
=3D"content">references</span><span class=3D"delimiter">"</span></span>, <s=
pan class=3D"keyword">function</span>() {
  <span class=3D"keyword">var</span> arr =3D [<span class=3D"integer">1</sp=
an>, <span class=3D"integer">2</span>, <span class=3D"integer">3</span>];
  expect(arr).toEqual([<span class=3D"integer">1</span>, <span class=3D"int=
eger">2</span>, <span class=3D"integer">3</span>]);
  expect(arr).not.toBe([<span class=3D"integer">1</span>, <span class=3D"in=
teger">2</span>, <span class=3D"integer">3</span>]); <span class=3D"comment=
">// since =3D=3D=3D doesn't do deep comparison!</span>
  expect(arr).toContain(<span class=3D"integer">1</span>);
});
</pre></div>
</div>

<h3>Integration Tests</h3>

<p>So far we've been writing pretty simple unit tests, which is a good star=
t, but when we're building APIs we'll most likely want to test how these un=
its work together or how the integrate. To do that, we'll need to write som=
e integration tests where we'll test that an HTTP request to our API yields=
 the response we expect. To perform integration tests in our express applic=
ation we'll be using a module called <code>supertest</code>.</p>

<h3>Testing a simple API using jest and supertest</h3>

<p>You can find the code for this entire example <a target=3D"_blank" href=
=3D"https://github.com/rithmschool/express-pg-jest-supertest" rel=3D"noopen=
er noreferrer">here</a></p>

<p>Let's start off building a very simple application - we'll add a databas=
e and more routes later, let's just focus on the syntax for now.</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre>mkdir testing-with-express
cd testing-with-express
touch app.js
npm init -y
npm install --save-dev supertest
npm install express body-parser
mkdir __tests__
touch __tests__/students.test.js
</pre></div>
</div>

<p>Let's set up a very simple <code>app.js</code></p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre>const express =3D require(<span class=3D"string"=
><span class=3D"delimiter">"</span><span class=3D"content">express</span><s=
pan class=3D"delimiter">"</span></span>);
const app =3D express();
const bodyParser =3D require(<span class=3D"string"><span class=3D"delimite=
r">"</span><span class=3D"content">body-parser</span><span class=3D"delimit=
er">"</span></span>);

app.use(bodyParser.json());

const students =3D [<span class=3D"string"><span class=3D"delimiter">"</spa=
n><span class=3D"content">Elie</span><span class=3D"delimiter">"</span></sp=
an>, <span class=3D"string"><span class=3D"delimiter">"</span><span class=
=3D"content">Matt</span><span class=3D"delimiter">"</span></span>, <span cl=
ass=3D"string"><span class=3D"delimiter">"</span><span class=3D"content">Jo=
el</span><span class=3D"delimiter">"</span></span>, <span class=3D"string">=
<span class=3D"delimiter">"</span><span class=3D"content">Michael</span><sp=
an class=3D"delimiter">"</span></span>];

app.get(<span class=3D"string"><span class=3D"delimiter">"</span><span clas=
s=3D"content">/</span><span class=3D"delimiter">"</span></span>, (req, res)=
 =3D&gt; {
  <span class=3D"keyword">return</span> res.json(students);
});

app.listen(() =3D&gt; {
  console.log(<span class=3D"string"><span class=3D"delimiter">"</span><spa=
n class=3D"content">Server starting on port 3000</span><span class=3D"delim=
iter">"</span></span>);
});
</pre></div>
</div>

<p>Now there's actually a problem here when we want to start testing! In ou=
r test file we are going to include the <code>app</code> variable from our =
<code>app.js</code> so that we can tell <code>supertest</code> which expres=
s application we are referring to. However, we are not currently exporting =
anything from our <code>app.js</code>. At the same time, if we <code>requir=
e</code> our <code>app.js</code> we will actually start the server using <c=
ode>app.listen</code>. So what we are going to do is make another file call=
ed <code>server.js</code> which will just contain our <code>app.listen</cod=
e> code and we will export out the <code>app</code> variable from our <code=
>app.js</code> - here's what our <code>app.js</code> should look like now:<=
/p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre>const express =3D require(<span class=3D"string"=
><span class=3D"delimiter">"</span><span class=3D"content">express</span><s=
pan class=3D"delimiter">"</span></span>);
const app =3D express();
const bodyParser =3D require(<span class=3D"string"><span class=3D"delimite=
r">"</span><span class=3D"content">body-parser</span><span class=3D"delimit=
er">"</span></span>);

app.use(bodyParser.json());

const students =3D [<span class=3D"string"><span class=3D"delimiter">"</spa=
n><span class=3D"content">Elie</span><span class=3D"delimiter">"</span></sp=
an>, <span class=3D"string"><span class=3D"delimiter">"</span><span class=
=3D"content">Matt</span><span class=3D"delimiter">"</span></span>, <span cl=
ass=3D"string"><span class=3D"delimiter">"</span><span class=3D"content">Jo=
el</span><span class=3D"delimiter">"</span></span>, <span class=3D"string">=
<span class=3D"delimiter">"</span><span class=3D"content">Michael</span><sp=
an class=3D"delimiter">"</span></span>];

app.get(<span class=3D"string"><span class=3D"delimiter">"</span><span clas=
s=3D"content">/</span><span class=3D"delimiter">"</span></span>, (req, res)=
 =3D&gt; {
  <span class=3D"keyword">return</span> res.json(students);
});

module.exports =3D app;
</pre></div>
</div>

<p>And here is what our <code>server.js</code> should look like:</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre>const app =3D require(<span class=3D"string"><sp=
an class=3D"delimiter">"</span><span class=3D"content">./app</span><span cl=
ass=3D"delimiter">"</span></span>);

app.listen(<span class=3D"integer">3000</span>, () =3D&gt; console.log(<spa=
n class=3D"string"><span class=3D"delimiter">"</span><span class=3D"content=
">server starting on port 3000!</span><span class=3D"delimiter">"</span></s=
pan>));
</pre></div>
</div>

<p>If we want to start our server we can run <code>nodemon server.js</code>=
 and when we export our <code>app</code> variable we will not be starting t=
he server! Now that we have this setup out of the way, let's write our firs=
t test with supertest!</p>

<h3>Testing with Jest and Supertest</h3>

<p>To get started with <code>supertest</code>, we need to include a bit of =
information in our <code>students.test.js</code>:</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre><span class=3D"comment">// we will use supertest=
 to test HTTP requests/responses</span>
const request =3D require(<span class=3D"string"><span class=3D"delimiter">=
"</span><span class=3D"content">supertest</span><span class=3D"delimiter">"=
</span></span>);
<span class=3D"comment">// we also need our app for the correct routes!</sp=
an>
const app =3D require(<span class=3D"string"><span class=3D"delimiter">"</s=
pan><span class=3D"content">../app</span><span class=3D"delimiter">"</span>=
</span>);
</pre></div>
</div>

<p>Now that we have that set up, let's write our first test to see what hap=
pens when we go to the root route. We're going to expect that we get back t=
he response which is an array of strings (as defined in our <code>app.js</c=
ode>).</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre>describe(<span class=3D"string"><span class=3D"d=
elimiter">"</span><span class=3D"content">GET / </span><span class=3D"delim=
iter">"</span></span>, () =3D&gt; {
  test(<span class=3D"string"><span class=3D"delimiter">"</span><span class=
=3D"content">It should respond with an array of students</span><span class=
=3D"delimiter">"</span></span>, async () =3D&gt; {
    const response =3D await request(app).get(<span class=3D"string"><span =
class=3D"delimiter">"</span><span class=3D"content">/</span><span class=3D"=
delimiter">"</span></span>);
    expect(response.body).toEqual([<span class=3D"string"><span class=3D"de=
limiter">"</span><span class=3D"content">Elie</span><span class=3D"delimite=
r">"</span></span>, <span class=3D"string"><span class=3D"delimiter">"</spa=
n><span class=3D"content">Matt</span><span class=3D"delimiter">"</span></sp=
an>, <span class=3D"string"><span class=3D"delimiter">"</span><span class=
=3D"content">Joel</span><span class=3D"delimiter">"</span></span>, <span cl=
ass=3D"string"><span class=3D"delimiter">"</span><span class=3D"content">Mi=
chael</span><span class=3D"delimiter">"</span></span>]);
    expect(response.statusCode).toBe(<span class=3D"integer">200</span>);
  });
});
</pre></div>
</div>

<p>If we run <code>jest</code> in the Terminal, we should see one test pass=
ing! Notice here that we are using <code>supertest</code> to make the HTTP =
request and getting a <code>response</code> from that request. In our <code=
>app.js</code> we simply were sending back an array of strings so we're jus=
t testing to see that we get that expected response as well as a 200 status=
 code. This is working well, but as our application grows, we are going to =
include a database as well, so how do we go about testing data backed by a =
database? It's not too bad, it just requires a little bit of configuration!=
</p>

<h3>Adding a test database</h3>

<p>Now that we have an idea of how to test simple routes, let's include a d=
atabase to store our students and test that we can do full CRUD on students=
! The first thing we need to do is a bit of file/folder setup, so in the ro=
ot of our application, let's do the following in Terminal:</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre>createdb students # this will be our development=
 database
createdb students-test # this will be our test database
mkdir db
touch db/index.js
mkdir routes
touch routes/students.js
</pre></div>
</div>

<p>Now that we have our development and test databases, we need a way of te=
lling our application that we are running tests or starting the development=
 server. To do this, we'll use environment variables!</p>

<p>Fortunately, you don't have to worry about setting anything in a <code>.=
env</code> file as there is nothing sensitive here. Let's start in our <cod=
e>db/index.js</code></p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre>const { Client } =3D require(<span class=3D"stri=
ng"><span class=3D"delimiter">"</span><span class=3D"content">pg</span><spa=
n class=3D"delimiter">"</span></span>);
const db =3D process.env.NODE_ENV =3D=3D=3D <span class=3D"string"><span cl=
ass=3D"delimiter">"</span><span class=3D"content">test</span><span class=3D=
"delimiter">"</span></span> ? <span class=3D"string"><span class=3D"delimit=
er">"</span><span class=3D"content">students-test</span><span class=3D"deli=
miter">"</span></span> : <span class=3D"string"><span class=3D"delimiter">"=
</span><span class=3D"content">students</span><span class=3D"delimiter">"</=
span></span>;

client =3D <span class=3D"keyword">new</span> Client({
  <span class=3D"key">connectionString</span>: <span class=3D"">`</span>pos=
tgresql:<span class=3D"comment">//localhost/${db}`</span>
});

client.connect();

module.exports =3D client;
</pre></div>
</div>

<p>Notice here we are first checking to see what the value of the <code>NOD=
E_ENV</code> environment variable is. If it is <code>"test"</code>, we will=
 use the <code>students-test</code> database, otherwise we will use the <co=
de>students</code> database. The rest of this code is what we have seen bef=
ore, all we are doing now is determining if we should use the test or devel=
opment database. When testing applications, you almost always will remove a=
ny data you start with so that your tests can be consistent, whereas in dev=
elopment you will want to remember certain data as you develop and manually=
 test your application. So where do we set this <code>NODE_ENV</code> varia=
ble? Let's do that in our <code>__tests__/students.test.js</code> file!</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre>process.env.NODE_ENV =3D <span class=3D"string">=
<span class=3D"delimiter">"</span><span class=3D"content">test</span><span =
class=3D"delimiter">"</span></span>;
const db =3D require(<span class=3D"string"><span class=3D"delimiter">"</sp=
an><span class=3D"content">../db</span><span class=3D"delimiter">"</span></=
span>);

const request =3D require(<span class=3D"string"><span class=3D"delimiter">=
"</span><span class=3D"content">supertest</span><span class=3D"delimiter">"=
</span></span>);
const app =3D require(<span class=3D"string"><span class=3D"delimiter">"</s=
pan><span class=3D"content">../app</span><span class=3D"delimiter">"</span>=
</span>);
</pre></div>
</div>

<p>These first two lines ensure that we are setting the <code>NODE_ENV</cod=
e> to test, and that we are brining in the export from <code>db/index.js</c=
ode>.</p>

<h3>Setting Up and Tearing Down the test suite</h3>

<p>Now that we are able to connect to the right database, we need to think =
about how to handle some data in our application. Here are some things we m=
ight want to do</p>

<ul>
<li>Before all the tests run, create a table called students.</li>
<li>Before each test, seed the database with a couple rows of data.</li>
<li>After each test, delete all the rows in the students table (so we can b=
e consistent).</li>
<li>After all the tests run, drop the table called students and close the d=
atabase connection.</li>
</ul>

<p>This process of "setup" and "teardown" are very common when testing appl=
ications. In Jest, these are done using four different functions:</p>

<ol>
<li> <code>beforeAll</code> - called <strong>once</strong> before all tests=
.</li>
<li> <code>beforeEach</code> - called before each of these tests (before ev=
ery <code>test</code> function).</li>
<li> <code>afterEach</code> - called after each of these tests (after every=
 <code>test</code> function).</li>
<li> <code>afterAll</code> - called <strong>once</strong> after all tests.<=
/li>
</ol>

<p>Now that you have an idea of what they look like, let's add the followin=
g to our <code>__tests__/students.test.js</code></p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre>process.env.NODE_ENV =3D <span class=3D"string">=
<span class=3D"delimiter">"</span><span class=3D"content">test</span><span =
class=3D"delimiter">"</span></span>;
const db =3D require(<span class=3D"string"><span class=3D"delimiter">"</sp=
an><span class=3D"content">../db</span><span class=3D"delimiter">"</span></=
span>);
const request =3D require(<span class=3D"string"><span class=3D"delimiter">=
"</span><span class=3D"content">supertest</span><span class=3D"delimiter">"=
</span></span>);
const app =3D require(<span class=3D"string"><span class=3D"delimiter">"</s=
pan><span class=3D"content">../app</span><span class=3D"delimiter">"</span>=
</span>);

beforeAll(async () =3D&gt; {
  await db.query(<span class=3D"string"><span class=3D"delimiter">"</span><=
span class=3D"content">CREATE TABLE students (id SERIAL PRIMARY KEY, name T=
EXT)</span><span class=3D"delimiter">"</span></span>);
});

beforeEach(async () =3D&gt; {
  <span class=3D"comment">// seed with some data</span>
  await db.query(<span class=3D"string"><span class=3D"delimiter">"</span><=
span class=3D"content">INSERT INTO students (name) VALUES ('Elie'), ('Matt'=
)</span><span class=3D"delimiter">"</span></span>);
});

afterEach(async () =3D&gt; {
  await db.query(<span class=3D"string"><span class=3D"delimiter">"</span><=
span class=3D"content">DELETE FROM students</span><span class=3D"delimiter"=
>"</span></span>);
});

afterAll(async () =3D&gt; {
  await db.query(<span class=3D"string"><span class=3D"delimiter">"</span><=
span class=3D"content">DROP TABLE students</span><span class=3D"delimiter">=
"</span></span>);
  db.end();
});
</pre></div>
</div>

<p>Now that we have this initial setup working, let's go back to our <code>=
routes/students.js</code> file and add four simple routes for CRUD function=
ality. We're not going to worry about error handling, let's keep this examp=
le simple.</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre>const express =3D require(<span class=3D"string"=
><span class=3D"delimiter">"</span><span class=3D"content">express</span><s=
pan class=3D"delimiter">"</span></span>);
const router =3D express.Router();
const db =3D require(<span class=3D"string"><span class=3D"delimiter">"</sp=
an><span class=3D"content">../db</span><span class=3D"delimiter">"</span></=
span>);

router.get(<span class=3D"string"><span class=3D"delimiter">"</span><span c=
lass=3D"content">/</span><span class=3D"delimiter">"</span></span>, async (=
req, res) =3D&gt; {
  const data =3D await db.query(<span class=3D"string"><span class=3D"delim=
iter">"</span><span class=3D"content">SELECT * FROM students</span><span cl=
ass=3D"delimiter">"</span></span>);
  <span class=3D"keyword">return</span> res.json(data.rows);
});

router.post(<span class=3D"string"><span class=3D"delimiter">"</span><span =
class=3D"content">/</span><span class=3D"delimiter">"</span></span>, async =
(req, res) =3D&gt; {
  const data =3D await db.query(
    <span class=3D"string"><span class=3D"delimiter">"</span><span class=3D=
"content">INSERT INTO students (name) VALUES ($1) RETURNING *</span><span c=
lass=3D"delimiter">"</span></span>,
    [req.body.name]
  );
  <span class=3D"keyword">return</span> res.json(data.rows[<span class=3D"i=
nteger">0</span>]);
});

router.patch(<span class=3D"string"><span class=3D"delimiter">"</span><span=
 class=3D"content">/:id</span><span class=3D"delimiter">"</span></span>, as=
ync (req, res) =3D&gt; {
  const data =3D await db.query(
    <span class=3D"string"><span class=3D"delimiter">"</span><span class=3D=
"content">UPDATE students SET name=3D$1 WHERE id=3D$2 RETURNING *</span><sp=
an class=3D"delimiter">"</span></span>,
    [req.body.name, req.params.id]
  );
  <span class=3D"keyword">return</span> res.json(data.rows[<span class=3D"i=
nteger">0</span>]);
});

router.<span class=3D"keyword">delete</span>(<span class=3D"string"><span c=
lass=3D"delimiter">"</span><span class=3D"content">/:id</span><span class=
=3D"delimiter">"</span></span>, async (req, res) =3D&gt; {
  const data =3D await db.query(<span class=3D"string"><span class=3D"delim=
iter">"</span><span class=3D"content">DELETE FROM students WHERE id=3D$1</s=
pan><span class=3D"delimiter">"</span></span>, [
    req.params.id
  ]);
  <span class=3D"keyword">return</span> res.json({ <span class=3D"key">mess=
age</span>: <span class=3D"string"><span class=3D"delimiter">"</span><span =
class=3D"content">Deleted</span><span class=3D"delimiter">"</span></span> }=
);
});

module.exports =3D router;
</pre></div>
</div>

<p>And now in our <code>app.js</code>, let's make sure to include these rou=
tes:</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre>const express =3D require(<span class=3D"string"=
><span class=3D"delimiter">"</span><span class=3D"content">express</span><s=
pan class=3D"delimiter">"</span></span>);
const app =3D express();
const db =3D require(<span class=3D"string"><span class=3D"delimiter">"</sp=
an><span class=3D"content">./db</span><span class=3D"delimiter">"</span></s=
pan>);
const students =3D [<span class=3D"string"><span class=3D"delimiter">"</spa=
n><span class=3D"content">Elie</span><span class=3D"delimiter">"</span></sp=
an>, <span class=3D"string"><span class=3D"delimiter">"</span><span class=
=3D"content">Matt</span><span class=3D"delimiter">"</span></span>, <span cl=
ass=3D"string"><span class=3D"delimiter">"</span><span class=3D"content">Jo=
el</span><span class=3D"delimiter">"</span></span>, <span class=3D"string">=
<span class=3D"delimiter">"</span><span class=3D"content">Michael</span><sp=
an class=3D"delimiter">"</span></span>];
const bodyParser =3D require(<span class=3D"string"><span class=3D"delimite=
r">"</span><span class=3D"content">body-parser</span><span class=3D"delimit=
er">"</span></span>);
const studentRoutes =3D require(<span class=3D"string"><span class=3D"delim=
iter">"</span><span class=3D"content">./routes/students</span><span class=
=3D"delimiter">"</span></span>);

app.use(bodyParser.json());
app.use(<span class=3D"string"><span class=3D"delimiter">"</span><span clas=
s=3D"content">/students</span><span class=3D"delimiter">"</span></span>, st=
udentRoutes);

app.get(<span class=3D"string"><span class=3D"delimiter">"</span><span clas=
s=3D"content">/</span><span class=3D"delimiter">"</span></span>, (req, res)=
 =3D&gt; {
  <span class=3D"keyword">return</span> res.json(students);
});

module.exports =3D app;
</pre></div>
</div>

<p>Now that we have this functionality in place, let's write some tests for=
 each of these endpoints!</p>

<h3>Integration Testing with Supertest</h3>

<p>We previously saw how to test a simple route using supertest. Fortunatel=
y, we don't need to do too much more to test our <code>GET /students</code>=
 route. Here is what that might look like:</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre>describe(<span class=3D"string"><span class=3D"d=
elimiter">"</span><span class=3D"content">GET /students</span><span class=
=3D"delimiter">"</span></span>, () =3D&gt; {
  test(<span class=3D"string"><span class=3D"delimiter">"</span><span class=
=3D"content">It responds with an array of students</span><span class=3D"del=
imiter">"</span></span>, async () =3D&gt; {
    const response =3D await request(app).get(<span class=3D"string"><span =
class=3D"delimiter">"</span><span class=3D"content">/students</span><span c=
lass=3D"delimiter">"</span></span>);
    expect(response.body.length).toBe(<span class=3D"integer">2</span>);
    expect(response.body[<span class=3D"integer">0</span>]).toHaveProperty(=
<span class=3D"string"><span class=3D"delimiter">"</span><span class=3D"con=
tent">id</span><span class=3D"delimiter">"</span></span>);
    expect(response.body[<span class=3D"integer">0</span>]).toHaveProperty(=
<span class=3D"string"><span class=3D"delimiter">"</span><span class=3D"con=
tent">name</span><span class=3D"delimiter">"</span></span>);
    expect(response.statusCode).toBe(<span class=3D"integer">200</span>);
  });
});
</pre></div>
</div>

<p>Notice here we are expecting 2 records back, because in our <code>before=
Each</code> we seeded the database with two records. We're also expecting e=
ach record to have an <code>id</code> and <code>name</code> property. Now t=
hat we have read working, how would we test creating? Similar to the test a=
bove, we just need to send some data in this HTTP request.</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre>describe(<span class=3D"string"><span class=3D"d=
elimiter">"</span><span class=3D"content">POST /students</span><span class=
=3D"delimiter">"</span></span>, () =3D&gt; {
  test(<span class=3D"string"><span class=3D"delimiter">"</span><span class=
=3D"content">It responds with the newly created student</span><span class=
=3D"delimiter">"</span></span>, async () =3D&gt; {
    const newStudent =3D await request(app)
      .post(<span class=3D"string"><span class=3D"delimiter">"</span><span =
class=3D"content">/students</span><span class=3D"delimiter">"</span></span>=
)
      .send({
        <span class=3D"key">name</span>: <span class=3D"string"><span class=
=3D"delimiter">"</span><span class=3D"content">New Student</span><span clas=
s=3D"delimiter">"</span></span>
      });

    <span class=3D"comment">// make sure we add it correctly</span>
    expect(newStudent.body).toHaveProperty(<span class=3D"string"><span cla=
ss=3D"delimiter">"</span><span class=3D"content">id</span><span class=3D"de=
limiter">"</span></span>);
    expect(newStudent.body.name).toBe(<span class=3D"string"><span class=3D=
"delimiter">"</span><span class=3D"content">New Student</span><span class=
=3D"delimiter">"</span></span>);
    expect(newStudent.statusCode).toBe(<span class=3D"integer">200</span>);

    <span class=3D"comment">// make sure we have 3 students now</span>
    const response =3D await request(app).get(<span class=3D"string"><span =
class=3D"delimiter">"</span><span class=3D"content">/students</span><span c=
lass=3D"delimiter">"</span></span>);
    expect(response.body.length).toBe(<span class=3D"integer">3</span>);
  });
});
</pre></div>
</div>

<p>Notice here we are using the <code>send</code> method to populate <code>=
req.body</code> so that we can create a new record. Here we are expecting t=
hat our new student has a name and id that are correct and that we now have=
 3 students in our table.</p>

<h3>Testing Update</h3>

<p>Let's move onto update! Here we're going to test if we can create a reco=
rd and update it successfully and make sure we still have 3 students in the=
 table. Here's what that might look like:</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre>describe(<span class=3D"string"><span class=3D"d=
elimiter">"</span><span class=3D"content">PATCH /students/1</span><span cla=
ss=3D"delimiter">"</span></span>, () =3D&gt; {
  test(<span class=3D"string"><span class=3D"delimiter">"</span><span class=
=3D"content">It responds with an updated student</span><span class=3D"delim=
iter">"</span></span>, async () =3D&gt; {
    const newStudent =3D await request(app)
      .post(<span class=3D"string"><span class=3D"delimiter">"</span><span =
class=3D"content">/students</span><span class=3D"delimiter">"</span></span>=
)
      .send({
        <span class=3D"key">name</span>: <span class=3D"string"><span class=
=3D"delimiter">"</span><span class=3D"content">Another one</span><span clas=
s=3D"delimiter">"</span></span>
      });
    const updatedStudent =3D await request(app)
      .patch(<span class=3D"">`</span><span class=3D"regexp"><span class=3D=
"delimiter">/</span><span class=3D"content">students</span><span class=3D"d=
elimiter">/</span></span><span class=3D"predefined">$</span>{newStudent.bod=
y.id}<span class=3D"">`</span>)
      .send({ <span class=3D"key">name</span>: <span class=3D"string"><span=
 class=3D"delimiter">"</span><span class=3D"content">updated</span><span cl=
ass=3D"delimiter">"</span></span> });
    expect(updatedStudent.body.name).toBe(<span class=3D"string"><span clas=
s=3D"delimiter">"</span><span class=3D"content">updated</span><span class=
=3D"delimiter">"</span></span>);
    expect(updatedStudent.body).toHaveProperty(<span class=3D"string"><span=
 class=3D"delimiter">"</span><span class=3D"content">id</span><span class=
=3D"delimiter">"</span></span>);
    expect(updatedStudent.statusCode).toBe(<span class=3D"integer">200</spa=
n>);

    <span class=3D"comment">// make sure we have 3 students</span>
    const response =3D await request(app).get(<span class=3D"string"><span =
class=3D"delimiter">"</span><span class=3D"content">/students</span><span c=
lass=3D"delimiter">"</span></span>);
    expect(response.body.length).toBe(<span class=3D"integer">3</span>);
  });
});
</pre></div>
</div>

<h3>Testing Delete</h3>

<p>Let's move onto delete! Here we're going to test if we can delete a reco=
rd, that the response is what we expect, and that we only have 2 students i=
n the table. Here's what that might look like:</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre>describe(<span class=3D"string"><span class=3D"d=
elimiter">"</span><span class=3D"content">DELETE /students/1</span><span cl=
ass=3D"delimiter">"</span></span>, () =3D&gt; {
  test(<span class=3D"string"><span class=3D"delimiter">"</span><span class=
=3D"content">It responds with a message of Deleted</span><span class=3D"del=
imiter">"</span></span>, async () =3D&gt; {
    const newStudent =3D await request(app)
      .post(<span class=3D"string"><span class=3D"delimiter">"</span><span =
class=3D"content">/students</span><span class=3D"delimiter">"</span></span>=
)
      .send({
        <span class=3D"key">name</span>: <span class=3D"string"><span class=
=3D"delimiter">"</span><span class=3D"content">Another one</span><span clas=
s=3D"delimiter">"</span></span>
      });
    const removedStudent =3D await request(app).<span class=3D"keyword">del=
ete</span>(
      <span class=3D"">`</span><span class=3D"regexp"><span class=3D"delimi=
ter">/</span><span class=3D"content">students</span><span class=3D"delimite=
r">/</span></span><span class=3D"predefined">$</span>{newStudent.body.id}<s=
pan class=3D"">`</span>
    );
    expect(removedStudent.body).toEqual({ <span class=3D"key">message</span=
>: <span class=3D"string"><span class=3D"delimiter">"</span><span class=3D"=
content">Deleted</span><span class=3D"delimiter">"</span></span> });
    expect(removedStudent.statusCode).toBe(<span class=3D"integer">200</spa=
n>);

    <span class=3D"comment">// make sure we still have 2 students</span>
    const response =3D await request(app).get(<span class=3D"string"><span =
class=3D"delimiter">"</span><span class=3D"content">/students</span><span c=
lass=3D"delimiter">"</span></span>);
    expect(response.body.length).toBe(<span class=3D"integer">2</span>);
  });
});
</pre></div>
</div>

<p>If we run <code>jest</code> in the Terminal, we should see all of our te=
sts passing!</p>

<p>You can find the code for this entire example <a target=3D"_blank" href=
=3D"https://github.com/rithmschool/express-pg-jest-supertest" rel=3D"noopen=
er noreferrer">here</a></p>

<h3>Testing authentication and authorization</h3>

<p>Now that we have a basic idea of how to test our CRUD operations, let's =
add some additional tests to make sure that users who are logged in (authen=
ticated) can only perform CRUD operations on specific records (authorized).=
</p>

<p>Imagine we have the following routes:</p>

<ul>
<li><code>POST /users/auth</code> - returns a JWT when a successful usernam=
e and password are sent</li>
<li><code>GET /users/</code> - returns all of the users, requires a valid J=
WT</li>
<li><code>GET /users/secure/:id</code> - returns a simple messages, require=
s a valid JWT and the id in the URL has to match the id stored in the JWT</=
li>
</ul>

<p>In this file, we'll write tests for <code>GET /users</code> and <code>GE=
T /users/secure/:id</code>. In order to do that, we're going to need some s=
etup that requires us to create a user, login a user, and remember the toke=
n and id stored in the token for testing. We'll store those pieces of infor=
mation in a global object called <code>auth</code>.</p>
<div class=3D"CodeRay">
  <div class=3D"code"><pre>process.env.NODE_ENV =3D <span class=3D"string">=
<span class=3D"delimiter">"</span><span class=3D"content">test</span><span =
class=3D"delimiter">"</span></span>;
const db =3D require(<span class=3D"string"><span class=3D"delimiter">"</sp=
an><span class=3D"content">../db</span><span class=3D"delimiter">"</span></=
span>);
const request =3D require(<span class=3D"string"><span class=3D"delimiter">=
"</span><span class=3D"content">supertest</span><span class=3D"delimiter">"=
</span></span>);
const app =3D require(<span class=3D"string"><span class=3D"delimiter">"</s=
pan><span class=3D"content">../</span><span class=3D"delimiter">"</span></s=
pan>);
<span class=3D"comment">// for decoding the token and easily extracting the=
 id from the payload</span>
const jsonwebtoken =3D require(<span class=3D"string"><span class=3D"delimi=
ter">"</span><span class=3D"content">jsonwebtoken</span><span class=3D"deli=
miter">"</span></span>);
<span class=3D"comment">// for hashing the password successfully when we cr=
eate users</span>
const bcrypt =3D require(<span class=3D"string"><span class=3D"delimiter">"=
</span><span class=3D"content">bcrypt</span><span class=3D"delimiter">"</sp=
an></span>);

<span class=3D"comment">// our global object for storing auth information</=
span>
let auth =3D {};

<span class=3D"comment">// before everything - create the table</span>
beforeAll(async () =3D&gt; {
  await db.query(
    <span class=3D"string"><span class=3D"delimiter">"</span><span class=3D=
"content">CREATE TABLE users (id SERIAL PRIMARY KEY, username TEXT, passwor=
d TEXT)</span><span class=3D"delimiter">"</span></span>
  );
});
<span class=3D"comment">// before each request, create a user and log them =
in</span>
beforeEach(async () =3D&gt; {
  const hashedPassword =3D await bcrypt.hash(<span class=3D"string"><span c=
lass=3D"delimiter">"</span><span class=3D"content">secret</span><span class=
=3D"delimiter">"</span></span>, <span class=3D"integer">1</span>);
  await db.query(<span class=3D"string"><span class=3D"delimiter">"</span><=
span class=3D"content">INSERT INTO users (username, password) VALUES ('test=
', $1)</span><span class=3D"delimiter">"</span></span>, [
    hashedPassword
  ]);
  const response =3D await request(app)
    .post(<span class=3D"string"><span class=3D"delimiter">"</span><span cl=
ass=3D"content">/users/auth</span><span class=3D"delimiter">"</span></span>=
)
    .send({
      <span class=3D"key">username</span>: <span class=3D"string"><span cla=
ss=3D"delimiter">"</span><span class=3D"content">test</span><span class=3D"=
delimiter">"</span></span>,
      <span class=3D"key">password</span>: <span class=3D"string"><span cla=
ss=3D"delimiter">"</span><span class=3D"content">secret</span><span class=
=3D"delimiter">"</span></span>
    });
  <span class=3D"comment">// take the result of the POST /users/auth which =
is a JWT</span>
  <span class=3D"comment">// store it in the auth object</span>
  auth.token =3D response.body.token;
  <span class=3D"comment">// store the id from the token in the auth object=
</span>
  auth.current_user_id =3D jsonwebtoken.decode(auth.token).user_id;
});

<span class=3D"comment">// remove all the users</span>
afterEach(async () =3D&gt; {
  await db.query(<span class=3D"string"><span class=3D"delimiter">"</span><=
span class=3D"content">DELETE FROM users</span><span class=3D"delimiter">"<=
/span></span>);
});

<span class=3D"comment">// drop the table and close the connection</span>
afterAll(async () =3D&gt; {
  await db.query(<span class=3D"string"><span class=3D"delimiter">"</span><=
span class=3D"content">DROP TABLE users</span><span class=3D"delimiter">"</=
span></span>);
  db.end();
});

describe(<span class=3D"string"><span class=3D"delimiter">"</span><span cla=
ss=3D"content">GET /users</span><span class=3D"delimiter">"</span></span>, =
() =3D&gt; {
  test(<span class=3D"string"><span class=3D"delimiter">"</span><span class=
=3D"content">returns a list of users</span><span class=3D"delimiter">"</spa=
n></span>, async () =3D&gt; {
    const response =3D await request(app)
      .get(<span class=3D"string"><span class=3D"delimiter">"</span><span c=
lass=3D"content">/users</span><span class=3D"delimiter">"</span></span>)
      <span class=3D"comment">// add an authorization header with the token=
</span>
      .set(<span class=3D"string"><span class=3D"delimiter">"</span><span c=
lass=3D"content">authorization</span><span class=3D"delimiter">"</span></sp=
an>, auth.token);
    expect(response.body.length).toBe(<span class=3D"integer">1</span>);
    expect(response.statusCode).toBe(<span class=3D"integer">200</span>);
  });
});

describe(<span class=3D"string"><span class=3D"delimiter">"</span><span cla=
ss=3D"content">GET /users without auth</span><span class=3D"delimiter">"</s=
pan></span>, () =3D&gt; {
  test(<span class=3D"string"><span class=3D"delimiter">"</span><span class=
=3D"content">requires login</span><span class=3D"delimiter">"</span></span>=
, async () =3D&gt; {
    <span class=3D"comment">// don't add an authorization header with the t=
oken...see what happens!</span>
    const response =3D await request(app).get(<span class=3D"string"><span =
class=3D"delimiter">"</span><span class=3D"content">/users/</span><span cla=
ss=3D"delimiter">"</span></span>);
    expect(response.statusCode).toBe(<span class=3D"integer">401</span>);
    expect(response.body.message).toBe(<span class=3D"string"><span class=
=3D"delimiter">"</span><span class=3D"content">Unauthorized</span><span cla=
ss=3D"delimiter">"</span></span>);
  });
});

describe(<span class=3D"string"><span class=3D"delimiter">"</span><span cla=
ss=3D"content">GET /secure/:id</span><span class=3D"delimiter">"</span></sp=
an>, () =3D&gt; {
  test(<span class=3D"string"><span class=3D"delimiter">"</span><span class=
=3D"content">authorizes only correct users</span><span class=3D"delimiter">=
"</span></span>, async () =3D&gt; {
    const response =3D await request(app)
      <span class=3D"comment">// add an authorization header with the token=
, but go to a different ID than the one stored in the token</span>
      .get(<span class=3D"">`</span><span class=3D"regexp"><span class=3D"d=
elimiter">/</span><span class=3D"content">users</span><span class=3D"delimi=
ter">/</span></span>secure/<span class=3D"integer">100</span><span class=3D=
"">`</span>)
      .set(<span class=3D"string"><span class=3D"delimiter">"</span><span c=
lass=3D"content">authorization</span><span class=3D"delimiter">"</span></sp=
an>, auth.token);
    expect(response.statusCode).toBe(<span class=3D"integer">401</span>);
    expect(response.body.message).toBe(<span class=3D"string"><span class=
=3D"delimiter">"</span><span class=3D"content">Unauthorized</span><span cla=
ss=3D"delimiter">"</span></span>);
  });
});

describe(<span class=3D"string"><span class=3D"delimiter">"</span><span cla=
ss=3D"content">GET /secure/:id</span><span class=3D"delimiter">"</span></sp=
an>, () =3D&gt; {
  test(<span class=3D"string"><span class=3D"delimiter">"</span><span class=
=3D"content">authorizes only correct users</span><span class=3D"delimiter">=
"</span></span>, async () =3D&gt; {
    const response =3D await request(app)
      <span class=3D"comment">// add an authorization header with the token=
, and go to the same ID as the one stored in the token</span>
      .get(<span class=3D"">`</span><span class=3D"regexp"><span class=3D"d=
elimiter">/</span><span class=3D"content">users</span><span class=3D"delimi=
ter">/</span></span>secure/<span class=3D"predefined">$</span>{auth.current=
_user_id}<span class=3D"">`</span>)
      .set(<span class=3D"string"><span class=3D"delimiter">"</span><span c=
lass=3D"content">authorization</span><span class=3D"delimiter">"</span></sp=
an>, auth.token);
    expect(response.statusCode).toBe(<span class=3D"integer">200</span>);
    expect(response.body.message).toBe(<span class=3D"string"><span class=
=3D"delimiter">"</span><span class=3D"content">You made it!</span><span cla=
ss=3D"delimiter">"</span></span>);
  });
});
</pre></div>
</div>

    </div>

    <p>
      When you're ready, move on to <a id=3D"next-link" href=3D"https://www=
.rithmschool.com/courses/intermediate-node-express/api-security-exercises">=
API Exercise</a>
    </p>

    <p class=3D"text-center">
    <a class=3D"apply-now" href=3D"https://www.rithmschool.com/courses/inte=
rmediate-node-express/api-security-exercises">Continue</a>
</p>

  </div>
  <div class=3D"text-center">
      <a rel=3D"license" href=3D"https://creativecommons.org/licenses/by-nc=
-nd/4.0/"><img alt=3D"Creative Commons License" style=3D"border-width:0" sr=
c=3D"https://i.creativecommons.org/l/by-nc-nd/4.0/80x15.png"></a><br>
  </div>
</div>




</div>

 =20
<!-- Chatra {literal} -->

<!-- /Chatra {/literal} -->


  <footer data-event-name=3D"click_cta" data-label=3D"location" data-event-=
label=3D"page_bottom">
  <div class=3D"container">
    <div class=3D"row">
        <div class=3D"col-md-3 col-sm-4 text-center">
            <a style=3D"padding:0;" class=3D"footer-logo" href=3D"https://w=
ww.rithmschool.com/">
              <img class=3D"logo" width=3D"120" height=3D"58" alt=3D"rithm =
school company logo" title=3D"Rithm School Logo" src=3D"https://www.rithmsc=
hool.com/assets/logos/rithm_logo-f188d2545d88917c033e407f4f87b02e2a3f5cf5df=
b60e626787785fa9c13774.svg">
</a>            <span>
                <a class=3D"text-muted faq-url" href=3D"mailto:info@rithmsc=
hool.com">info@rithmschool.com</a>
            </span>
        </div>
        <div class=3D"col-md-6 col-sm-8">
          <div class=3D"text-center email_signup_heading">
              <p data-event-name=3D"click_email_link" class=3D"lead">Intere=
sted in meetups, courses and free content?</p>
              <button name=3D"button" type=3D"submit" class=3D"btn" id=3D"m=
ailing-list" data-event-name=3D"join_mailing_list">Join mailing list</butto=
n>
          </div>
          <p class=3D"lead text-center thank_you"></p>
        </div>
        <div class=3D"col-md-3 col-sm-4 text-center">
          <ul class=3D"list-inline social-buttons">
              <li data-event-name=3D"click_cta" data-label=3D"click_social_=
link" data-event-label=3D"twitter"><a target=3D"_blank" href=3D"https://www=
.twitter.com/rithmschool"><i class=3D"fa fa-twitter"></i></a>
              </li>
              <li data-event-name=3D"click_cta" data-label=3D"click_social_=
link" data-event-label=3D"facebook"><a target=3D"_blank" href=3D"https://ww=
w.facebook.com/rithmschool"><i class=3D"fa fa-facebook"></i></a>
              </li>
              <li data-event-name=3D"click_cta" data-label=3D"click_social_=
link" data-event-label=3D"linkedin"><a target=3D"_blank" href=3D"https://ww=
w.linkedin.com/company/rithm-school"><i class=3D"fa fa-linkedin"></i></a>
              </li>
          </ul>
        </div>
    </div>
    <hr>
    <div class=3D"row">
        <div class=3D"col-sm-12  text-center">
          <a class=3D"text-muted" href=3D"https://www.rithmschool.com/priva=
cy">Privacy Policy</a> |
          <a class=3D"text-muted" href=3D"https://www.rithmschool.com/terms=
">Terms of Service</a> |
          <a class=3D"text-muted" href=3D"https://www.rithmschool.com/consu=
mer-resource">Consumer Resource</a>
          <span class=3D"copyright">=C2=A9 Rithm Inc. 500 Sansome Street Su=
ite 300 San Francisco, CA 94111. All rights reserved. </span>
      </div>
    </div>
  </div>
</footer>

 =20
<!-- link that opens popup -->
<a style=3D"display:none;" class=3D"popup-with-form" href=3D"https://www.ri=
thmschool.com/courses/intermediate-node-express/api-tests-with-jest#unlock-=
form">Open form</a>

<!-- form itself -->
<div class=3D"thank_you"></div>
<div class=3D"container">
  <form id=3D"unlock-form" class=3D"card mfp-hide white-popup-block">
  <div id=3D"modal-email-known" style=3D"display:none;">
    <h1 class=3D"text-center">Signed up already? Please enter your email to=
 confirm.</h1>
    <div class=3D"email-errors text-center"></div>
    <hr class=3D"modal--bar">
    <div class=3D"row">
      <div class=3D"col-md-offset-2 col-md-8">
        <div class=3D"form-group">
          <input class=3D"form-control" placeholder=3D"Email" type=3D"email=
" id=3D"confirm-email-input">
          <p class=3D"help-block text-danger"></p>
        </div>
      </div>
    </div>
    <button id=3D"confirm-email" type=3D"submit" class=3D"btn btn-xl">Sign =
In</button>
    <div class=3D"text-center">
      <a style=3D"margin-top:-20px; display:block;" class=3D"modal-go-back"=
>Go Back</a>
    </div>
  </div>
  <div id=3D"modal-first-part" class=3D"row">
    <h1 class=3D"text-center">Get 200+ hours of free content, tutorials, an=
d screencasts</h1>
      <div class=3D"col-sm-offset-2 col-sm-8">
        <hr class=3D"modal--bar">
          <h5 class=3D"text-center">Share your email, and we'll give you a =
confirmation code to unlock all of our materials. No spam, we promise.</h5>
          <div class=3D"errors text-center"></div>
          <div class=3D"row">
            <div class=3D"col-lg-6">
              <div class=3D"form-group">
                <input autofocus=3D"autofocus" required=3D"required" class=
=3D"form-control" placeholder=3D"First Name" type=3D"text" name=3D"first" i=
d=3D"first">
                <p class=3D"help-block text-danger"></p>
              </div>
            </div>
              <div class=3D"col-lg-6">
                <div class=3D"form-group">
                  <input required=3D"required" class=3D"form-control" place=
holder=3D"Last Name" type=3D"last" name=3D"last" id=3D"last">
                  <p class=3D"help-block text-danger"></p>
                </div>
              </div>
            </div>
          <div class=3D"row">
            <div class=3D"col-lg-12">
              <div class=3D"form-group">
                <input class=3D"form-control" placeholder=3D"Email Address"=
 required=3D"required" type=3D"email" name=3D"email" id=3D"email">
                <p class=3D"help-block text-danger"></p>
              </div>
            </div>
          </div>
          <button type=3D"submit" class=3D"next-button btn btn-xl">Next</bu=
tton>
          <a class=3D"text-center email-known">Already signed up?</a>
    </div>
  </div>
    <div id=3D"modal-second-part" style=3D"display:none;">
      <h1 class=3D"text-center">Tell us more about yourself</h1>
        <div class=3D"col-sm-offset-2 col-sm-8">
          <hr class=3D"modal--bar">
          <h5 class=3D"text-center">Please answer these two questions to he=
lp us build the perfect Rithm experience for you.</h5>
          <div class=3D"errors text-center"></div>
      <div class=3D"row">
        <div class=3D"col-lg-12">
          <div class=3D"form-group">
            How would you define your skill as a developer?
            <label for=3D"Beginner"><input type=3D"radio" class=3D"radio" n=
ame=3D"skill" id=3D"Beginner" value=3D"Beginner" required=3D"" checked=3D""=
> Beginner</label>
            <label for=3D"Intermediate"><input type=3D"radio" class=3D"radi=
o" name=3D"skill" id=3D"Intermediate" value=3D"Intermediate">Intermediate <=
/label>
            <label for=3D"Advanced"><input type=3D"radio" class=3D"radio" n=
ame=3D"skill" id=3D"Advanced" value=3D"Advanced">Advanced </label>
          </div>
        </div>
      </div>
      <div class=3D"row">
        <div class=3D"col-lg-12">
          <div class=3D"form-group">
            Would you like to learn more about Rithm School's in-person cou=
rses and how to apply?
            <label for=3D"yes"><input type=3D"radio" class=3D"radio" name=
=3D"learn" id=3D"yes" value=3D"Yes" required=3D"" checked=3D""> Yes</label>
            <label for=3D"no"><input type=3D"radio" class=3D"radio" name=3D=
"learn" id=3D"no" value=3D"No"> No</label>
            <p class=3D"help-block text-danger"></p>
          </div>
        </div>
      </div>
      <button type=3D"submit" class=3D"btn btn-xl">Get Content</button>
    </div>
  </div>
      <div id=3D"modal-third-part" style=3D"display:none;">
        <h1 class=3D"text-center"></h1>
          <div class=3D"col-sm-offset-2 col-sm-8">
            <hr class=3D"modal--bar">
            <h5 class=3D"text-center"></h5>
          </div>
      </div>
  </form>
  </div>





<!-- Google Code for Purchase Conversion Page -->



</body><grammarly-desktop-integration data-grammarly-shadow-root=3D"true"><=
template shadowmode=3D"open"><div aria-label=3D"grammarly-integration" role=
=3D"group" tabindex=3D"-1" class=3D"grammarly-desktop-integration" data-con=
tent=3D"{&quot;mode&quot;:&quot;full&quot;,&quot;isActive&quot;:true,&quot;=
isUserDisabled&quot;:false}"></div></template></grammarly-desktop-integrati=
on></html>
------MultipartBoundary--xuw2UVmZ3Veg0bio4EzmkENqo26lwNH9MTx2EuvV0n----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-2c7734aa-d5ff-48a8-bf16-06996aa73242@mhtml.blink

@charset "utf-8";

.async-hide { opacity: 0 !important; }
------MultipartBoundary--xuw2UVmZ3Veg0bio4EzmkENqo26lwNH9MTx2EuvV0n----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.rithmschool.com/assets/application-5513cce246a238f41feaf57cd039a69018992d3dc114a2508d07c0076f30ce98.css

@charset "utf-8";

.animated { animation-duration: 1s; animation-fill-mode: both; }

.animated.infinite { animation-iteration-count: infinite; }

.animated.hinge { animation-duration: 2s; }

.animated.bounceIn, .animated.bounceOut, .animated.flipOutX, .animated.flip=
OutY { animation-duration: 0.75s; }

@-webkit-keyframes bounce {=20
  0%, 20%, 53%, 80%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); transform: translateZ(0px); }
  40%, 43% { transform: translate3d(0px, -30px, 0px); }
  40%, 43%, 70% { animation-timing-function: cubic-bezier(0.755, 0.05, 0.85=
5, 0.06); }
  70% { transform: translate3d(0px, -15px, 0px); }
  90% { transform: translate3d(0px, -4px, 0px); }
}

@keyframes bounce {=20
  0%, 20%, 53%, 80%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); transform: translateZ(0px); }
  40%, 43% { transform: translate3d(0px, -30px, 0px); }
  40%, 43%, 70% { animation-timing-function: cubic-bezier(0.755, 0.05, 0.85=
5, 0.06); }
  70% { transform: translate3d(0px, -15px, 0px); }
  90% { transform: translate3d(0px, -4px, 0px); }
}

.bounce { animation-name: bounce; transform-origin: center bottom; }

@-webkit-keyframes flash {=20
  0%, 50%, 100% { opacity: 1; }
  25%, 75% { opacity: 0; }
}

@keyframes flash {=20
  0%, 50%, 100% { opacity: 1; }
  25%, 75% { opacity: 0; }
}

.flash { animation-name: flash; }

@-webkit-keyframes pulse {=20
  0% { transform: scaleX(1); }
  50% { transform: scale3d(1.05, 1.05, 1.05); }
  100% { transform: scaleX(1); }
}

@keyframes pulse {=20
  0% { transform: scaleX(1); }
  50% { transform: scale3d(1.05, 1.05, 1.05); }
  100% { transform: scaleX(1); }
}

.pulse { animation-name: pulse; }

@-webkit-keyframes rubberBand {=20
  0% { transform: scaleX(1); }
  30% { transform: scale3d(1.25, 0.75, 1); }
  40% { transform: scale3d(0.75, 1.25, 1); }
  50% { transform: scale3d(1.15, 0.85, 1); }
  65% { transform: scale3d(0.95, 1.05, 1); }
  75% { transform: scale3d(1.05, 0.95, 1); }
  100% { transform: scaleX(1); }
}

@keyframes rubberBand {=20
  0% { transform: scaleX(1); }
  30% { transform: scale3d(1.25, 0.75, 1); }
  40% { transform: scale3d(0.75, 1.25, 1); }
  50% { transform: scale3d(1.15, 0.85, 1); }
  65% { transform: scale3d(0.95, 1.05, 1); }
  75% { transform: scale3d(1.05, 0.95, 1); }
  100% { transform: scaleX(1); }
}

.rubberBand { animation-name: rubberBand; }

@-webkit-keyframes shake {=20
  0%, 100% { transform: translateZ(0px); }
  10%, 30%, 50%, 70%, 90% { transform: translate3d(-10px, 0px, 0px); }
  20%, 40%, 60%, 80% { transform: translate3d(10px, 0px, 0px); }
}

@keyframes shake {=20
  0%, 100% { transform: translateZ(0px); }
  10%, 30%, 50%, 70%, 90% { transform: translate3d(-10px, 0px, 0px); }
  20%, 40%, 60%, 80% { transform: translate3d(10px, 0px, 0px); }
}

.shake { animation-name: shake; }

@-webkit-keyframes headShake {=20
  0% { transform: translateX(0px); }
  6.5% { transform: translateX(-6px) rotateY(-9deg); }
  18.5% { transform: translateX(5px) rotateY(7deg); }
  31.5% { transform: translateX(-3px) rotateY(-5deg); }
  43.5% { transform: translateX(2px) rotateY(3deg); }
  50% { transform: translateX(0px); }
}

@keyframes headShake {=20
  0% { transform: translateX(0px); }
  6.5% { transform: translateX(-6px) rotateY(-9deg); }
  18.5% { transform: translateX(5px) rotateY(7deg); }
  31.5% { transform: translateX(-3px) rotateY(-5deg); }
  43.5% { transform: translateX(2px) rotateY(3deg); }
  50% { transform: translateX(0px); }
}

.headShake { animation-timing-function: ease-in-out; animation-name: headSh=
ake; }

@-webkit-keyframes swing {=20
  20% { transform: rotate(15deg); }
  40% { transform: rotate(-10deg); }
  60% { transform: rotate(5deg); }
  80% { transform: rotate(-5deg); }
  100% { transform: rotate(0deg); }
}

@keyframes swing {=20
  20% { transform: rotate(15deg); }
  40% { transform: rotate(-10deg); }
  60% { transform: rotate(5deg); }
  80% { transform: rotate(-5deg); }
  100% { transform: rotate(0deg); }
}

.swing { transform-origin: center top; animation-name: swing; }

@-webkit-keyframes tada {=20
  0% { transform: scaleX(1); }
  10%, 20% { transform: scale3d(0.9, 0.9, 0.9) rotate(-3deg); }
  30%, 50%, 70%, 90% { transform: scale3d(1.1, 1.1, 1.1) rotate(3deg); }
  40%, 60%, 80% { transform: scale3d(1.1, 1.1, 1.1) rotate(-3deg); }
  100% { transform: scaleX(1); }
}

@keyframes tada {=20
  0% { transform: scaleX(1); }
  10%, 20% { transform: scale3d(0.9, 0.9, 0.9) rotate(-3deg); }
  30%, 50%, 70%, 90% { transform: scale3d(1.1, 1.1, 1.1) rotate(3deg); }
  40%, 60%, 80% { transform: scale3d(1.1, 1.1, 1.1) rotate(-3deg); }
  100% { transform: scaleX(1); }
}

.tada { animation-name: tada; }

@-webkit-keyframes wobble {=20
  0% { transform: none; }
  15% { transform: translate3d(-25%, 0px, 0px) rotate(-5deg); }
  30% { transform: translate3d(20%, 0px, 0px) rotate(3deg); }
  45% { transform: translate3d(-15%, 0px, 0px) rotate(-3deg); }
  60% { transform: translate3d(10%, 0px, 0px) rotate(2deg); }
  75% { transform: translate3d(-5%, 0px, 0px) rotate(-1deg); }
  100% { transform: none; }
}

@keyframes wobble {=20
  0% { transform: none; }
  15% { transform: translate3d(-25%, 0px, 0px) rotate(-5deg); }
  30% { transform: translate3d(20%, 0px, 0px) rotate(3deg); }
  45% { transform: translate3d(-15%, 0px, 0px) rotate(-3deg); }
  60% { transform: translate3d(10%, 0px, 0px) rotate(2deg); }
  75% { transform: translate3d(-5%, 0px, 0px) rotate(-1deg); }
  100% { transform: none; }
}

.wobble { animation-name: wobble; }

@-webkit-keyframes jello {=20
  0%, 11.1%, 100% { transform: none; }
  22.2% { transform: skewX(-12.5deg) skewY(-12.5deg); }
  33.3% { transform: skewX(6.25deg) skewY(6.25deg); }
  44.4% { transform: skewX(-3.125deg) skewY(-3.125deg); }
  55.5% { transform: skewX(1.5625deg) skewY(1.5625deg); }
  66.6% { transform: skewX(-0.78125deg) skewY(-0.78125deg); }
  77.7% { transform: skewX(0.390625deg) skewY(0.390625deg); }
  88.8% { transform: skewX(-0.195312deg) skewY(-0.195312deg); }
}

@keyframes jello {=20
  0%, 11.1%, 100% { transform: none; }
  22.2% { transform: skewX(-12.5deg) skewY(-12.5deg); }
  33.3% { transform: skewX(6.25deg) skewY(6.25deg); }
  44.4% { transform: skewX(-3.125deg) skewY(-3.125deg); }
  55.5% { transform: skewX(1.5625deg) skewY(1.5625deg); }
  66.6% { transform: skewX(-0.78125deg) skewY(-0.78125deg); }
  77.7% { transform: skewX(0.390625deg) skewY(0.390625deg); }
  88.8% { transform: skewX(-0.195312deg) skewY(-0.195312deg); }
}

.jello { animation-name: jello; transform-origin: center center; }

@-webkit-keyframes bounceIn {=20
  0%, 20%, 40%, 60%, 80%, 100% { animation-timing-function: cubic-bezier(0.=
215, 0.61, 0.355, 1); }
  0% { opacity: 0; transform: scale3d(0.3, 0.3, 0.3); }
  20% { transform: scale3d(1.1, 1.1, 1.1); }
  40% { transform: scale3d(0.9, 0.9, 0.9); }
  60% { opacity: 1; transform: scale3d(1.03, 1.03, 1.03); }
  80% { transform: scale3d(0.97, 0.97, 0.97); }
  100% { opacity: 1; transform: scaleX(1); }
}

@keyframes bounceIn {=20
  0%, 20%, 40%, 60%, 80%, 100% { animation-timing-function: cubic-bezier(0.=
215, 0.61, 0.355, 1); }
  0% { opacity: 0; transform: scale3d(0.3, 0.3, 0.3); }
  20% { transform: scale3d(1.1, 1.1, 1.1); }
  40% { transform: scale3d(0.9, 0.9, 0.9); }
  60% { opacity: 1; transform: scale3d(1.03, 1.03, 1.03); }
  80% { transform: scale3d(0.97, 0.97, 0.97); }
  100% { opacity: 1; transform: scaleX(1); }
}

.bounceIn { animation-name: bounceIn; }

@-webkit-keyframes bounceInDown {=20
  0%, 60%, 75%, 90%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); }
  0% { opacity: 0; transform: translate3d(0px, -3000px, 0px); }
  60% { opacity: 1; transform: translate3d(0px, 25px, 0px); }
  75% { transform: translate3d(0px, -10px, 0px); }
  90% { transform: translate3d(0px, 5px, 0px); }
  100% { transform: none; }
}

@keyframes bounceInDown {=20
  0%, 60%, 75%, 90%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); }
  0% { opacity: 0; transform: translate3d(0px, -3000px, 0px); }
  60% { opacity: 1; transform: translate3d(0px, 25px, 0px); }
  75% { transform: translate3d(0px, -10px, 0px); }
  90% { transform: translate3d(0px, 5px, 0px); }
  100% { transform: none; }
}

.bounceInDown { animation-name: bounceInDown; }

@-webkit-keyframes bounceInLeft {=20
  0%, 60%, 75%, 90%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); }
  0% { opacity: 0; transform: translate3d(-3000px, 0px, 0px); }
  60% { opacity: 1; transform: translate3d(25px, 0px, 0px); }
  75% { transform: translate3d(-10px, 0px, 0px); }
  90% { transform: translate3d(5px, 0px, 0px); }
  100% { transform: none; }
}

@keyframes bounceInLeft {=20
  0%, 60%, 75%, 90%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); }
  0% { opacity: 0; transform: translate3d(-3000px, 0px, 0px); }
  60% { opacity: 1; transform: translate3d(25px, 0px, 0px); }
  75% { transform: translate3d(-10px, 0px, 0px); }
  90% { transform: translate3d(5px, 0px, 0px); }
  100% { transform: none; }
}

.bounceInLeft { animation-name: bounceInLeft; }

@-webkit-keyframes bounceInRight {=20
  0%, 60%, 75%, 90%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); }
  0% { opacity: 0; transform: translate3d(3000px, 0px, 0px); }
  60% { opacity: 1; transform: translate3d(-25px, 0px, 0px); }
  75% { transform: translate3d(10px, 0px, 0px); }
  90% { transform: translate3d(-5px, 0px, 0px); }
  100% { transform: none; }
}

@keyframes bounceInRight {=20
  0%, 60%, 75%, 90%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); }
  0% { opacity: 0; transform: translate3d(3000px, 0px, 0px); }
  60% { opacity: 1; transform: translate3d(-25px, 0px, 0px); }
  75% { transform: translate3d(10px, 0px, 0px); }
  90% { transform: translate3d(-5px, 0px, 0px); }
  100% { transform: none; }
}

.bounceInRight { animation-name: bounceInRight; }

@-webkit-keyframes bounceInUp {=20
  0%, 60%, 75%, 90%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); }
  0% { opacity: 0; transform: translate3d(0px, 3000px, 0px); }
  60% { opacity: 1; transform: translate3d(0px, -20px, 0px); }
  75% { transform: translate3d(0px, 10px, 0px); }
  90% { transform: translate3d(0px, -5px, 0px); }
  100% { transform: translateZ(0px); }
}

@keyframes bounceInUp {=20
  0%, 60%, 75%, 90%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); }
  0% { opacity: 0; transform: translate3d(0px, 3000px, 0px); }
  60% { opacity: 1; transform: translate3d(0px, -20px, 0px); }
  75% { transform: translate3d(0px, 10px, 0px); }
  90% { transform: translate3d(0px, -5px, 0px); }
  100% { transform: translateZ(0px); }
}

.bounceInUp { animation-name: bounceInUp; }

@-webkit-keyframes bounceOut {=20
  20% { transform: scale3d(0.9, 0.9, 0.9); }
  50%, 55% { opacity: 1; transform: scale3d(1.1, 1.1, 1.1); }
  100% { opacity: 0; transform: scale3d(0.3, 0.3, 0.3); }
}

@keyframes bounceOut {=20
  20% { transform: scale3d(0.9, 0.9, 0.9); }
  50%, 55% { opacity: 1; transform: scale3d(1.1, 1.1, 1.1); }
  100% { opacity: 0; transform: scale3d(0.3, 0.3, 0.3); }
}

.bounceOut { animation-name: bounceOut; }

@-webkit-keyframes bounceOutDown {=20
  20% { transform: translate3d(0px, 10px, 0px); }
  40%, 45% { opacity: 1; transform: translate3d(0px, -20px, 0px); }
  100% { opacity: 0; transform: translate3d(0px, 2000px, 0px); }
}

@keyframes bounceOutDown {=20
  20% { transform: translate3d(0px, 10px, 0px); }
  40%, 45% { opacity: 1; transform: translate3d(0px, -20px, 0px); }
  100% { opacity: 0; transform: translate3d(0px, 2000px, 0px); }
}

.bounceOutDown { animation-name: bounceOutDown; }

@-webkit-keyframes bounceOutLeft {=20
  20% { opacity: 1; transform: translate3d(20px, 0px, 0px); }
  100% { opacity: 0; transform: translate3d(-2000px, 0px, 0px); }
}

@keyframes bounceOutLeft {=20
  20% { opacity: 1; transform: translate3d(20px, 0px, 0px); }
  100% { opacity: 0; transform: translate3d(-2000px, 0px, 0px); }
}

.bounceOutLeft { animation-name: bounceOutLeft; }

@-webkit-keyframes bounceOutRight {=20
  20% { opacity: 1; transform: translate3d(-20px, 0px, 0px); }
  100% { opacity: 0; transform: translate3d(2000px, 0px, 0px); }
}

@keyframes bounceOutRight {=20
  20% { opacity: 1; transform: translate3d(-20px, 0px, 0px); }
  100% { opacity: 0; transform: translate3d(2000px, 0px, 0px); }
}

.bounceOutRight { animation-name: bounceOutRight; }

@-webkit-keyframes bounceOutUp {=20
  20% { transform: translate3d(0px, -10px, 0px); }
  40%, 45% { opacity: 1; transform: translate3d(0px, 20px, 0px); }
  100% { opacity: 0; transform: translate3d(0px, -2000px, 0px); }
}

@keyframes bounceOutUp {=20
  20% { transform: translate3d(0px, -10px, 0px); }
  40%, 45% { opacity: 1; transform: translate3d(0px, 20px, 0px); }
  100% { opacity: 0; transform: translate3d(0px, -2000px, 0px); }
}

.bounceOutUp { animation-name: bounceOutUp; }

@-webkit-keyframes fadeIn {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes fadeIn {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

.fadeIn { animation-name: fadeIn; }

@-webkit-keyframes fadeInDown {=20
  0% { opacity: 0; transform: translate3d(0px, -100%, 0px); }
  100% { opacity: 1; transform: none; }
}

@keyframes fadeInDown {=20
  0% { opacity: 0; transform: translate3d(0px, -100%, 0px); }
  100% { opacity: 1; transform: none; }
}

.fadeInDown { animation-name: fadeInDown; }

@-webkit-keyframes fadeInDownBig {=20
  0% { opacity: 0; transform: translate3d(0px, -2000px, 0px); }
  100% { opacity: 1; transform: none; }
}

@keyframes fadeInDownBig {=20
  0% { opacity: 0; transform: translate3d(0px, -2000px, 0px); }
  100% { opacity: 1; transform: none; }
}

.fadeInDownBig { animation-name: fadeInDownBig; }

@-webkit-keyframes fadeInLeft {=20
  0% { opacity: 0; transform: translate3d(-100%, 0px, 0px); }
  100% { opacity: 1; transform: none; }
}

@keyframes fadeInLeft {=20
  0% { opacity: 0; transform: translate3d(-100%, 0px, 0px); }
  100% { opacity: 1; transform: none; }
}

.fadeInLeft { animation-name: fadeInLeft; }

@-webkit-keyframes fadeInLeftBig {=20
  0% { opacity: 0; transform: translate3d(-2000px, 0px, 0px); }
  100% { opacity: 1; transform: none; }
}

@keyframes fadeInLeftBig {=20
  0% { opacity: 0; transform: translate3d(-2000px, 0px, 0px); }
  100% { opacity: 1; transform: none; }
}

.fadeInLeftBig { animation-name: fadeInLeftBig; }

@-webkit-keyframes fadeInRight {=20
  0% { opacity: 0; transform: translate3d(100%, 0px, 0px); }
  100% { opacity: 1; transform: none; }
}

@keyframes fadeInRight {=20
  0% { opacity: 0; transform: translate3d(100%, 0px, 0px); }
  100% { opacity: 1; transform: none; }
}

.fadeInRight { animation-name: fadeInRight; }

@-webkit-keyframes fadeInRightBig {=20
  0% { opacity: 0; transform: translate3d(2000px, 0px, 0px); }
  100% { opacity: 1; transform: none; }
}

@keyframes fadeInRightBig {=20
  0% { opacity: 0; transform: translate3d(2000px, 0px, 0px); }
  100% { opacity: 1; transform: none; }
}

.fadeInRightBig { animation-name: fadeInRightBig; }

@-webkit-keyframes fadeInUp {=20
  0% { opacity: 0; transform: translate3d(0px, 100%, 0px); }
  100% { opacity: 1; transform: none; }
}

@keyframes fadeInUp {=20
  0% { opacity: 0; transform: translate3d(0px, 100%, 0px); }
  100% { opacity: 1; transform: none; }
}

.fadeInUp { animation-name: fadeInUp; }

@-webkit-keyframes fadeInUpBig {=20
  0% { opacity: 0; transform: translate3d(0px, 2000px, 0px); }
  100% { opacity: 1; transform: none; }
}

@keyframes fadeInUpBig {=20
  0% { opacity: 0; transform: translate3d(0px, 2000px, 0px); }
  100% { opacity: 1; transform: none; }
}

.fadeInUpBig { animation-name: fadeInUpBig; }

@-webkit-keyframes fadeOut {=20
  0% { opacity: 1; }
  100% { opacity: 0; }
}

@keyframes fadeOut {=20
  0% { opacity: 1; }
  100% { opacity: 0; }
}

.fadeOut { animation-name: fadeOut; }

@-webkit-keyframes fadeOutDown {=20
  0% { opacity: 1; }
  100% { opacity: 0; transform: translate3d(0px, 100%, 0px); }
}

@keyframes fadeOutDown {=20
  0% { opacity: 1; }
  100% { opacity: 0; transform: translate3d(0px, 100%, 0px); }
}

.fadeOutDown { animation-name: fadeOutDown; }

@-webkit-keyframes fadeOutDownBig {=20
  0% { opacity: 1; }
  100% { opacity: 0; transform: translate3d(0px, 2000px, 0px); }
}

@keyframes fadeOutDownBig {=20
  0% { opacity: 1; }
  100% { opacity: 0; transform: translate3d(0px, 2000px, 0px); }
}

.fadeOutDownBig { animation-name: fadeOutDownBig; }

@-webkit-keyframes fadeOutLeft {=20
  0% { opacity: 1; }
  100% { opacity: 0; transform: translate3d(-100%, 0px, 0px); }
}

@keyframes fadeOutLeft {=20
  0% { opacity: 1; }
  100% { opacity: 0; transform: translate3d(-100%, 0px, 0px); }
}

.fadeOutLeft { animation-name: fadeOutLeft; }

@-webkit-keyframes fadeOutLeftBig {=20
  0% { opacity: 1; }
  100% { opacity: 0; transform: translate3d(-2000px, 0px, 0px); }
}

@keyframes fadeOutLeftBig {=20
  0% { opacity: 1; }
  100% { opacity: 0; transform: translate3d(-2000px, 0px, 0px); }
}

.fadeOutLeftBig { animation-name: fadeOutLeftBig; }

@-webkit-keyframes fadeOutRight {=20
  0% { opacity: 1; }
  100% { opacity: 0; transform: translate3d(100%, 0px, 0px); }
}

@keyframes fadeOutRight {=20
  0% { opacity: 1; }
  100% { opacity: 0; transform: translate3d(100%, 0px, 0px); }
}

.fadeOutRight { animation-name: fadeOutRight; }

@-webkit-keyframes fadeOutRightBig {=20
  0% { opacity: 1; }
  100% { opacity: 0; transform: translate3d(2000px, 0px, 0px); }
}

@keyframes fadeOutRightBig {=20
  0% { opacity: 1; }
  100% { opacity: 0; transform: translate3d(2000px, 0px, 0px); }
}

.fadeOutRightBig { animation-name: fadeOutRightBig; }

@-webkit-keyframes fadeOutUp {=20
  0% { opacity: 1; }
  100% { opacity: 0; transform: translate3d(0px, -100%, 0px); }
}

@keyframes fadeOutUp {=20
  0% { opacity: 1; }
  100% { opacity: 0; transform: translate3d(0px, -100%, 0px); }
}

.fadeOutUp { animation-name: fadeOutUp; }

@-webkit-keyframes fadeOutUpBig {=20
  0% { opacity: 1; }
  100% { opacity: 0; transform: translate3d(0px, -2000px, 0px); }
}

@keyframes fadeOutUpBig {=20
  0% { opacity: 1; }
  100% { opacity: 0; transform: translate3d(0px, -2000px, 0px); }
}

.fadeOutUpBig { animation-name: fadeOutUpBig; }

@-webkit-keyframes flip {=20
  0% { transform: perspective(400px) rotateY(-1turn); }
  0%, 40% { animation-timing-function: ease-out; }
  40% { transform: perspective(400px) translateZ(150px) rotateY(-190deg); }
  50% { transform: perspective(400px) translateZ(150px) rotateY(-170deg); }
  50%, 80% { animation-timing-function: ease-in; }
  80% { transform: perspective(400px) scale3d(0.95, 0.95, 0.95); }
  100% { transform: perspective(400px); animation-timing-function: ease-in;=
 }
}

@keyframes flip {=20
  0% { transform: perspective(400px) rotateY(-1turn); }
  0%, 40% { animation-timing-function: ease-out; }
  40% { transform: perspective(400px) translateZ(150px) rotateY(-190deg); }
  50% { transform: perspective(400px) translateZ(150px) rotateY(-170deg); }
  50%, 80% { animation-timing-function: ease-in; }
  80% { transform: perspective(400px) scale3d(0.95, 0.95, 0.95); }
  100% { transform: perspective(400px); animation-timing-function: ease-in;=
 }
}

.animated.flip { backface-visibility: visible; animation-name: flip; }

@-webkit-keyframes flipInX {=20
  0% { transform: perspective(400px) rotateX(90deg); opacity: 0; }
  0%, 40% { animation-timing-function: ease-in; }
  40% { transform: perspective(400px) rotateX(-20deg); }
  60% { transform: perspective(400px) rotateX(10deg); opacity: 1; }
  80% { transform: perspective(400px) rotateX(-5deg); }
  100% { transform: perspective(400px); }
}

@keyframes flipInX {=20
  0% { transform: perspective(400px) rotateX(90deg); opacity: 0; }
  0%, 40% { animation-timing-function: ease-in; }
  40% { transform: perspective(400px) rotateX(-20deg); }
  60% { transform: perspective(400px) rotateX(10deg); opacity: 1; }
  80% { transform: perspective(400px) rotateX(-5deg); }
  100% { transform: perspective(400px); }
}

.flipInX { animation-name: flipInX; backface-visibility: visible !important=
; }

@-webkit-keyframes flipInY {=20
  0% { transform: perspective(400px) rotateY(90deg); opacity: 0; }
  0%, 40% { animation-timing-function: ease-in; }
  40% { transform: perspective(400px) rotateY(-20deg); }
  60% { transform: perspective(400px) rotateY(10deg); opacity: 1; }
  80% { transform: perspective(400px) rotateY(-5deg); }
  100% { transform: perspective(400px); }
}

@keyframes flipInY {=20
  0% { transform: perspective(400px) rotateY(90deg); opacity: 0; }
  0%, 40% { animation-timing-function: ease-in; }
  40% { transform: perspective(400px) rotateY(-20deg); }
  60% { transform: perspective(400px) rotateY(10deg); opacity: 1; }
  80% { transform: perspective(400px) rotateY(-5deg); }
  100% { transform: perspective(400px); }
}

.flipInY { animation-name: flipInY; backface-visibility: visible !important=
; }

@-webkit-keyframes flipOutX {=20
  0% { transform: perspective(400px); }
  30% { transform: perspective(400px) rotateX(-20deg); opacity: 1; }
  100% { transform: perspective(400px) rotateX(90deg); opacity: 0; }
}

@keyframes flipOutX {=20
  0% { transform: perspective(400px); }
  30% { transform: perspective(400px) rotateX(-20deg); opacity: 1; }
  100% { transform: perspective(400px) rotateX(90deg); opacity: 0; }
}

.flipOutX { animation-name: flipOutX; backface-visibility: visible !importa=
nt; }

@-webkit-keyframes flipOutY {=20
  0% { transform: perspective(400px); }
  30% { transform: perspective(400px) rotateY(-15deg); opacity: 1; }
  100% { transform: perspective(400px) rotateY(90deg); opacity: 0; }
}

@keyframes flipOutY {=20
  0% { transform: perspective(400px); }
  30% { transform: perspective(400px) rotateY(-15deg); opacity: 1; }
  100% { transform: perspective(400px) rotateY(90deg); opacity: 0; }
}

.flipOutY { animation-name: flipOutY; backface-visibility: visible !importa=
nt; }

@-webkit-keyframes lightSpeedIn {=20
  0% { transform: translate3d(100%, 0px, 0px) skewX(-30deg); opacity: 0; }
  60% { transform: skewX(20deg); }
  60%, 80% { opacity: 1; }
  80% { transform: skewX(-5deg); }
  100% { transform: none; opacity: 1; }
}

@keyframes lightSpeedIn {=20
  0% { transform: translate3d(100%, 0px, 0px) skewX(-30deg); opacity: 0; }
  60% { transform: skewX(20deg); }
  60%, 80% { opacity: 1; }
  80% { transform: skewX(-5deg); }
  100% { transform: none; opacity: 1; }
}

.lightSpeedIn { animation-name: lightSpeedIn; animation-timing-function: ea=
se-out; }

@-webkit-keyframes lightSpeedOut {=20
  0% { opacity: 1; }
  100% { transform: translate3d(100%, 0px, 0px) skewX(30deg); opacity: 0; }
}

@keyframes lightSpeedOut {=20
  0% { opacity: 1; }
  100% { transform: translate3d(100%, 0px, 0px) skewX(30deg); opacity: 0; }
}

.lightSpeedOut { animation-name: lightSpeedOut; animation-timing-function: =
ease-in; }

@-webkit-keyframes rotateIn {=20
  0% { transform-origin: center center; transform: rotate(-200deg); opacity=
: 0; }
  0%, 100% { transform-origin: center center; }
  100% { transform-origin: center center; transform: none; opacity: 1; }
}

@keyframes rotateIn {=20
  0% { transform-origin: center center; transform: rotate(-200deg); opacity=
: 0; }
  0%, 100% { transform-origin: center center; }
  100% { transform-origin: center center; transform: none; opacity: 1; }
}

.rotateIn { animation-name: rotateIn; }

@-webkit-keyframes rotateInDownLeft {=20
  0% { transform-origin: left bottom; transform: rotate(-45deg); opacity: 0=
; }
  0%, 100% { transform-origin: left bottom; }
  100% { transform-origin: left bottom; transform: none; opacity: 1; }
}

@keyframes rotateInDownLeft {=20
  0% { transform-origin: left bottom; transform: rotate(-45deg); opacity: 0=
; }
  0%, 100% { transform-origin: left bottom; }
  100% { transform-origin: left bottom; transform: none; opacity: 1; }
}

.rotateInDownLeft { animation-name: rotateInDownLeft; }

@-webkit-keyframes rotateInDownRight {=20
  0% { transform-origin: right bottom; transform: rotate(45deg); opacity: 0=
; }
  0%, 100% { transform-origin: right bottom; }
  100% { transform-origin: right bottom; transform: none; opacity: 1; }
}

@keyframes rotateInDownRight {=20
  0% { transform-origin: right bottom; transform: rotate(45deg); opacity: 0=
; }
  0%, 100% { transform-origin: right bottom; }
  100% { transform-origin: right bottom; transform: none; opacity: 1; }
}

.rotateInDownRight { animation-name: rotateInDownRight; }

@-webkit-keyframes rotateInUpLeft {=20
  0% { transform-origin: left bottom; transform: rotate(45deg); opacity: 0;=
 }
  0%, 100% { transform-origin: left bottom; }
  100% { transform-origin: left bottom; transform: none; opacity: 1; }
}

@keyframes rotateInUpLeft {=20
  0% { transform-origin: left bottom; transform: rotate(45deg); opacity: 0;=
 }
  0%, 100% { transform-origin: left bottom; }
  100% { transform-origin: left bottom; transform: none; opacity: 1; }
}

.rotateInUpLeft { animation-name: rotateInUpLeft; }

@-webkit-keyframes rotateInUpRight {=20
  0% { transform-origin: right bottom; transform: rotate(-90deg); opacity: =
0; }
  0%, 100% { transform-origin: right bottom; }
  100% { transform-origin: right bottom; transform: none; opacity: 1; }
}

@keyframes rotateInUpRight {=20
  0% { transform-origin: right bottom; transform: rotate(-90deg); opacity: =
0; }
  0%, 100% { transform-origin: right bottom; }
  100% { transform-origin: right bottom; transform: none; opacity: 1; }
}

.rotateInUpRight { animation-name: rotateInUpRight; }

@-webkit-keyframes rotateOut {=20
  0% { transform-origin: center center; opacity: 1; }
  0%, 100% { transform-origin: center center; }
  100% { transform-origin: center center; transform: rotate(200deg); opacit=
y: 0; }
}

@keyframes rotateOut {=20
  0% { transform-origin: center center; opacity: 1; }
  0%, 100% { transform-origin: center center; }
  100% { transform-origin: center center; transform: rotate(200deg); opacit=
y: 0; }
}

.rotateOut { animation-name: rotateOut; }

@-webkit-keyframes rotateOutDownLeft {=20
  0% { transform-origin: left bottom; opacity: 1; }
  0%, 100% { transform-origin: left bottom; }
  100% { transform-origin: left bottom; transform: rotate(45deg); opacity: =
0; }
}

@keyframes rotateOutDownLeft {=20
  0% { transform-origin: left bottom; opacity: 1; }
  0%, 100% { transform-origin: left bottom; }
  100% { transform-origin: left bottom; transform: rotate(45deg); opacity: =
0; }
}

.rotateOutDownLeft { animation-name: rotateOutDownLeft; }

@-webkit-keyframes rotateOutDownRight {=20
  0% { transform-origin: right bottom; opacity: 1; }
  0%, 100% { transform-origin: right bottom; }
  100% { transform-origin: right bottom; transform: rotate(-45deg); opacity=
: 0; }
}

@keyframes rotateOutDownRight {=20
  0% { transform-origin: right bottom; opacity: 1; }
  0%, 100% { transform-origin: right bottom; }
  100% { transform-origin: right bottom; transform: rotate(-45deg); opacity=
: 0; }
}

.rotateOutDownRight { animation-name: rotateOutDownRight; }

@-webkit-keyframes rotateOutUpLeft {=20
  0% { transform-origin: left bottom; opacity: 1; }
  0%, 100% { transform-origin: left bottom; }
  100% { transform-origin: left bottom; transform: rotate(-45deg); opacity:=
 0; }
}

@keyframes rotateOutUpLeft {=20
  0% { transform-origin: left bottom; opacity: 1; }
  0%, 100% { transform-origin: left bottom; }
  100% { transform-origin: left bottom; transform: rotate(-45deg); opacity:=
 0; }
}

.rotateOutUpLeft { animation-name: rotateOutUpLeft; }

@-webkit-keyframes rotateOutUpRight {=20
  0% { transform-origin: right bottom; opacity: 1; }
  0%, 100% { transform-origin: right bottom; }
  100% { transform-origin: right bottom; transform: rotate(90deg); opacity:=
 0; }
}

@keyframes rotateOutUpRight {=20
  0% { transform-origin: right bottom; opacity: 1; }
  0%, 100% { transform-origin: right bottom; }
  100% { transform-origin: right bottom; transform: rotate(90deg); opacity:=
 0; }
}

.rotateOutUpRight { animation-name: rotateOutUpRight; }

@-webkit-keyframes hinge {=20
  0% { transform-origin: left top; }
  0%, 20%, 60% { transform-origin: left top; animation-timing-function: eas=
e-in-out; }
  20%, 60% { transform: rotate(80deg); transform-origin: left top; }
  40%, 80% { transform: rotate(60deg); transform-origin: left top; animatio=
n-timing-function: ease-in-out; opacity: 1; }
  100% { transform: translate3d(0px, 700px, 0px); opacity: 0; }
}

@keyframes hinge {=20
  0% { transform-origin: left top; }
  0%, 20%, 60% { transform-origin: left top; animation-timing-function: eas=
e-in-out; }
  20%, 60% { transform: rotate(80deg); transform-origin: left top; }
  40%, 80% { transform: rotate(60deg); transform-origin: left top; animatio=
n-timing-function: ease-in-out; opacity: 1; }
  100% { transform: translate3d(0px, 700px, 0px); opacity: 0; }
}

.hinge { animation-name: hinge; }

@-webkit-keyframes rollIn {=20
  0% { opacity: 0; transform: translate3d(-100%, 0px, 0px) rotate(-120deg);=
 }
  100% { opacity: 1; transform: none; }
}

@keyframes rollIn {=20
  0% { opacity: 0; transform: translate3d(-100%, 0px, 0px) rotate(-120deg);=
 }
  100% { opacity: 1; transform: none; }
}

.rollIn { animation-name: rollIn; }

@-webkit-keyframes rollOut {=20
  0% { opacity: 1; }
  100% { opacity: 0; transform: translate3d(100%, 0px, 0px) rotate(120deg);=
 }
}

@keyframes rollOut {=20
  0% { opacity: 1; }
  100% { opacity: 0; transform: translate3d(100%, 0px, 0px) rotate(120deg);=
 }
}

.rollOut { animation-name: rollOut; }

@-webkit-keyframes zoomIn {=20
  0% { opacity: 0; transform: scale3d(0.3, 0.3, 0.3); }
  50% { opacity: 1; }
}

@keyframes zoomIn {=20
  0% { opacity: 0; transform: scale3d(0.3, 0.3, 0.3); }
  50% { opacity: 1; }
}

.zoomIn { animation-name: zoomIn; }

@-webkit-keyframes zoomInDown {=20
  0% { opacity: 0; transform: scale3d(0.1, 0.1, 0.1) translate3d(0px, -1000=
px, 0px); animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19)=
; }
  60% { opacity: 1; transform: scale3d(0.475, 0.475, 0.475) translate3d(0px=
, 60px, 0px); animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1=
); }
}

@keyframes zoomInDown {=20
  0% { opacity: 0; transform: scale3d(0.1, 0.1, 0.1) translate3d(0px, -1000=
px, 0px); animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19)=
; }
  60% { opacity: 1; transform: scale3d(0.475, 0.475, 0.475) translate3d(0px=
, 60px, 0px); animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1=
); }
}

.zoomInDown { animation-name: zoomInDown; }

@-webkit-keyframes zoomInLeft {=20
  0% { opacity: 0; transform: scale3d(0.1, 0.1, 0.1) translate3d(-1000px, 0=
px, 0px); animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19)=
; }
  60% { opacity: 1; transform: scale3d(0.475, 0.475, 0.475) translate3d(10p=
x, 0px, 0px); animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1=
); }
}

@keyframes zoomInLeft {=20
  0% { opacity: 0; transform: scale3d(0.1, 0.1, 0.1) translate3d(-1000px, 0=
px, 0px); animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19)=
; }
  60% { opacity: 1; transform: scale3d(0.475, 0.475, 0.475) translate3d(10p=
x, 0px, 0px); animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1=
); }
}

.zoomInLeft { animation-name: zoomInLeft; }

@-webkit-keyframes zoomInRight {=20
  0% { opacity: 0; transform: scale3d(0.1, 0.1, 0.1) translate3d(1000px, 0p=
x, 0px); animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);=
 }
  60% { opacity: 1; transform: scale3d(0.475, 0.475, 0.475) translate3d(-10=
px, 0px, 0px); animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, =
1); }
}

@keyframes zoomInRight {=20
  0% { opacity: 0; transform: scale3d(0.1, 0.1, 0.1) translate3d(1000px, 0p=
x, 0px); animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);=
 }
  60% { opacity: 1; transform: scale3d(0.475, 0.475, 0.475) translate3d(-10=
px, 0px, 0px); animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, =
1); }
}

.zoomInRight { animation-name: zoomInRight; }

@-webkit-keyframes zoomInUp {=20
  0% { opacity: 0; transform: scale3d(0.1, 0.1, 0.1) translate3d(0px, 1000p=
x, 0px); animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);=
 }
  60% { opacity: 1; transform: scale3d(0.475, 0.475, 0.475) translate3d(0px=
, -60px, 0px); animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, =
1); }
}

@keyframes zoomInUp {=20
  0% { opacity: 0; transform: scale3d(0.1, 0.1, 0.1) translate3d(0px, 1000p=
x, 0px); animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);=
 }
  60% { opacity: 1; transform: scale3d(0.475, 0.475, 0.475) translate3d(0px=
, -60px, 0px); animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, =
1); }
}

.zoomInUp { animation-name: zoomInUp; }

@-webkit-keyframes zoomOut {=20
  0% { opacity: 1; }
  50% { transform: scale3d(0.3, 0.3, 0.3); }
  50%, 100% { opacity: 0; }
}

@keyframes zoomOut {=20
  0% { opacity: 1; }
  50% { transform: scale3d(0.3, 0.3, 0.3); }
  50%, 100% { opacity: 0; }
}

.zoomOut { animation-name: zoomOut; }

@-webkit-keyframes zoomOutDown {=20
  40% { opacity: 1; transform: scale3d(0.475, 0.475, 0.475) translate3d(0px=
, -60px, 0px); animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, =
0.19); }
  100% { opacity: 0; transform: scale3d(0.1, 0.1, 0.1) translate3d(0px, 200=
0px, 0px); transform-origin: center bottom; animation-timing-function: cubi=
c-bezier(0.175, 0.885, 0.32, 1); }
}

@keyframes zoomOutDown {=20
  40% { opacity: 1; transform: scale3d(0.475, 0.475, 0.475) translate3d(0px=
, -60px, 0px); animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, =
0.19); }
  100% { opacity: 0; transform: scale3d(0.1, 0.1, 0.1) translate3d(0px, 200=
0px, 0px); transform-origin: center bottom; animation-timing-function: cubi=
c-bezier(0.175, 0.885, 0.32, 1); }
}

.zoomOutDown { animation-name: zoomOutDown; }

@-webkit-keyframes zoomOutLeft {=20
  40% { opacity: 1; transform: scale3d(0.475, 0.475, 0.475) translate3d(42p=
x, 0px, 0px); }
  100% { opacity: 0; transform: scale(0.1) translate3d(-2000px, 0px, 0px); =
transform-origin: left center; }
}

@keyframes zoomOutLeft {=20
  40% { opacity: 1; transform: scale3d(0.475, 0.475, 0.475) translate3d(42p=
x, 0px, 0px); }
  100% { opacity: 0; transform: scale(0.1) translate3d(-2000px, 0px, 0px); =
transform-origin: left center; }
}

.zoomOutLeft { animation-name: zoomOutLeft; }

@-webkit-keyframes zoomOutRight {=20
  40% { opacity: 1; transform: scale3d(0.475, 0.475, 0.475) translate3d(-42=
px, 0px, 0px); }
  100% { opacity: 0; transform: scale(0.1) translate3d(2000px, 0px, 0px); t=
ransform-origin: right center; }
}

@keyframes zoomOutRight {=20
  40% { opacity: 1; transform: scale3d(0.475, 0.475, 0.475) translate3d(-42=
px, 0px, 0px); }
  100% { opacity: 0; transform: scale(0.1) translate3d(2000px, 0px, 0px); t=
ransform-origin: right center; }
}

.zoomOutRight { animation-name: zoomOutRight; }

@-webkit-keyframes zoomOutUp {=20
  40% { opacity: 1; transform: scale3d(0.475, 0.475, 0.475) translate3d(0px=
, 60px, 0px); animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0=
.19); }
  100% { opacity: 0; transform: scale3d(0.1, 0.1, 0.1) translate3d(0px, -20=
00px, 0px); transform-origin: center bottom; animation-timing-function: cub=
ic-bezier(0.175, 0.885, 0.32, 1); }
}

@keyframes zoomOutUp {=20
  40% { opacity: 1; transform: scale3d(0.475, 0.475, 0.475) translate3d(0px=
, 60px, 0px); animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0=
.19); }
  100% { opacity: 0; transform: scale3d(0.1, 0.1, 0.1) translate3d(0px, -20=
00px, 0px); transform-origin: center bottom; animation-timing-function: cub=
ic-bezier(0.175, 0.885, 0.32, 1); }
}

.zoomOutUp { animation-name: zoomOutUp; }

@-webkit-keyframes slideInDown {=20
  0% { transform: translate3d(0px, -100%, 0px); visibility: visible; }
  100% { transform: translateZ(0px); }
}

@keyframes slideInDown {=20
  0% { transform: translate3d(0px, -100%, 0px); visibility: visible; }
  100% { transform: translateZ(0px); }
}

.slideInDown { animation-name: slideInDown; }

@-webkit-keyframes slideInLeft {=20
  0% { transform: translate3d(-100%, 0px, 0px); visibility: visible; }
  100% { transform: translateZ(0px); }
}

@keyframes slideInLeft {=20
  0% { transform: translate3d(-100%, 0px, 0px); visibility: visible; }
  100% { transform: translateZ(0px); }
}

.slideInLeft { animation-name: slideInLeft; }

@-webkit-keyframes slideInRight {=20
  0% { transform: translate3d(100%, 0px, 0px); visibility: visible; }
  100% { transform: translateZ(0px); }
}

@keyframes slideInRight {=20
  0% { transform: translate3d(100%, 0px, 0px); visibility: visible; }
  100% { transform: translateZ(0px); }
}

.slideInRight { animation-name: slideInRight; }

@-webkit-keyframes slideInUp {=20
  0% { transform: translate3d(0px, 100%, 0px); visibility: visible; }
  100% { transform: translateZ(0px); }
}

@keyframes slideInUp {=20
  0% { transform: translate3d(0px, 100%, 0px); visibility: visible; }
  100% { transform: translateZ(0px); }
}

.slideInUp { animation-name: slideInUp; }

@-webkit-keyframes slideOutDown {=20
  0% { transform: translateZ(0px); }
  100% { visibility: hidden; transform: translate3d(0px, 100%, 0px); }
}

@keyframes slideOutDown {=20
  0% { transform: translateZ(0px); }
  100% { visibility: hidden; transform: translate3d(0px, 100%, 0px); }
}

.slideOutDown { animation-name: slideOutDown; }

@-webkit-keyframes slideOutLeft {=20
  0% { transform: translateZ(0px); }
  100% { visibility: hidden; transform: translate3d(-100%, 0px, 0px); }
}

@keyframes slideOutLeft {=20
  0% { transform: translateZ(0px); }
  100% { visibility: hidden; transform: translate3d(-100%, 0px, 0px); }
}

.slideOutLeft { animation-name: slideOutLeft; }

@-webkit-keyframes slideOutRight {=20
  0% { transform: translateZ(0px); }
  100% { visibility: hidden; transform: translate3d(100%, 0px, 0px); }
}

@keyframes slideOutRight {=20
  0% { transform: translateZ(0px); }
  100% { visibility: hidden; transform: translate3d(100%, 0px, 0px); }
}

.slideOutRight { animation-name: slideOutRight; }

@-webkit-keyframes slideOutUp {=20
  0% { transform: translateZ(0px); }
  100% { visibility: hidden; transform: translate3d(0px, -100%, 0px); }
}

@keyframes slideOutUp {=20
  0% { transform: translateZ(0px); }
  100% { visibility: hidden; transform: translate3d(0px, -100%, 0px); }
}

.slideOutUp { animation-name: slideOutUp; }

html { font-family: sans-serif; text-size-adjust: 100%; }

body { margin: 0px; }

article, aside, details, figcaption, figure, footer, header, hgroup, main, =
menu, nav, section, summary { display: block; }

audio, canvas, progress, video { display: inline-block; vertical-align: bas=
eline; }

audio:not([controls]) { display: none; height: 0px; }

[hidden], template { display: none; }

a { background-color: transparent; }

a:active, a:hover { outline: 0px; }

abbr[title] { border-bottom: 1px dotted; }

b, strong { font-weight: 700; }

dfn { font-style: italic; }

h1 { margin: 0.67em 0px; font-size: 2em; }

mark { color: rgb(0, 0, 0); background: rgb(255, 255, 0); }

small { font-size: 80%; }

sub, sup { position: relative; font-size: 75%; line-height: 0; vertical-ali=
gn: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

img { border: 0px; }

svg:not(:root) { overflow: hidden; }

figure { margin: 1em 40px; }

hr { height: 0px; box-sizing: content-box; }

pre { overflow: auto; }

code, kbd, pre, samp { font-family: monospace, monospace; font-size: 1em; }

button, input, optgroup, select, textarea { margin: 0px; font: inherit; col=
or: inherit; }

button { overflow: visible; }

button, select { text-transform: none; }

button, html input[type=3D"button"], input[type=3D"reset"], input[type=3D"s=
ubmit"] { appearance: button; cursor: pointer; }

button[disabled], html input[disabled] { cursor: default; }

input { line-height: normal; }

input[type=3D"checkbox"], input[type=3D"radio"] { box-sizing: border-box; p=
adding: 0px; }

input[type=3D"number"]::-webkit-inner-spin-button, input[type=3D"number"]::=
-webkit-outer-spin-button { height: auto; }

input[type=3D"search"] { box-sizing: content-box; appearance: textfield; }

input[type=3D"search"]::-webkit-search-cancel-button, input[type=3D"search"=
]::-webkit-search-decoration { appearance: none; }

fieldset { padding: 0.35em 0.625em 0.75em; margin: 0px 2px; border: 1px sol=
id silver; }

legend { padding: 0px; border: 0px; }

textarea { overflow: auto; }

optgroup { font-weight: 700; }

table { border-spacing: 0px; border-collapse: collapse; }

td, th { padding: 0px; }

@media print {
  *, ::after, ::before { color: rgb(0, 0, 0) !important; text-shadow: none =
!important; background: 0px 0px !important; box-shadow: none !important; }
  a, a:visited { text-decoration: underline; }
  a[href]::after { content: " (" attr(href) ")"; }
  abbr[title]::after { content: " (" attr(title) ")"; }
  a[href^=3D"javascript:"]::after, a[href^=3D"#"]::after { content: ""; }
  blockquote, pre { border: 1px solid rgb(153, 153, 153); break-inside: avo=
id; }
  thead { display: table-header-group; }
  img, tr { break-inside: avoid; }
  img { max-width: 100% !important; }
  h2, h3, p { orphans: 3; widows: 3; }
  h2, h3 { break-after: avoid; }
  .navbar { display: none; }
  .btn > .caret, .dropup > .btn > .caret { border-top-color: rgb(0, 0, 0) !=
important; }
  .label { border: 1px solid rgb(0, 0, 0); }
  .table { border-collapse: collapse !important; }
  .table td, .table th { background-color: rgb(255, 255, 255) !important; }
  .table-bordered td, .table-bordered th { border: 1px solid rgb(221, 221, =
221) !important; }
}

@font-face { font-family: "Glyphicons Halflings"; src: url("/../fonts/glyph=
icons-halflings-regular.eot?#iefix") format("embedded-opentype"), url("/../=
fonts/glyphicons-halflings-regular.woff2") format("woff2"), url("/../fonts/=
glyphicons-halflings-regular.woff") format("woff"), url("/../fonts/glyphico=
ns-halflings-regular.ttf") format("truetype"), url("/../fonts/glyphicons-ha=
lflings-regular.svg#glyphicons_halflingsregular") format("svg"); }

.glyphicon { position: relative; top: 1px; display: inline-block; font-fami=
ly: "Glyphicons Halflings"; font-style: normal; font-weight: 400; line-heig=
ht: 1; -webkit-font-smoothing: antialiased; }

.glyphicon-asterisk::before { content: "*"; }

.glyphicon-plus::before { content: "+"; }

.glyphicon-eur::before, .glyphicon-euro::before { content: "=E2=82=AC"; }

.glyphicon-minus::before { content: "=E2=88=92"; }

.glyphicon-cloud::before { content: "=E2=98=81"; }

.glyphicon-envelope::before { content: "=E2=9C=89"; }

.glyphicon-pencil::before { content: "=E2=9C=8F"; }

.glyphicon-glass::before { content: "=EE=80=81"; }

.glyphicon-music::before { content: "=EE=80=82"; }

.glyphicon-search::before { content: "=EE=80=83"; }

.glyphicon-heart::before { content: "=EE=80=85"; }

.glyphicon-star::before { content: "=EE=80=86"; }

.glyphicon-star-empty::before { content: "=EE=80=87"; }

.glyphicon-user::before { content: "=EE=80=88"; }

.glyphicon-film::before { content: "=EE=80=89"; }

.glyphicon-th-large::before { content: "=EE=80=90"; }

.glyphicon-th::before { content: "=EE=80=91"; }

.glyphicon-th-list::before { content: "=EE=80=92"; }

.glyphicon-ok::before { content: "=EE=80=93"; }

.glyphicon-remove::before { content: "=EE=80=94"; }

.glyphicon-zoom-in::before { content: "=EE=80=95"; }

.glyphicon-zoom-out::before { content: "=EE=80=96"; }

.glyphicon-off::before { content: "=EE=80=97"; }

.glyphicon-signal::before { content: "=EE=80=98"; }

.glyphicon-cog::before { content: "=EE=80=99"; }

.glyphicon-trash::before { content: "=EE=80=A0"; }

.glyphicon-home::before { content: "=EE=80=A1"; }

.glyphicon-file::before { content: "=EE=80=A2"; }

.glyphicon-time::before { content: "=EE=80=A3"; }

.glyphicon-road::before { content: "=EE=80=A4"; }

.glyphicon-download-alt::before { content: "=EE=80=A5"; }

.glyphicon-download::before { content: "=EE=80=A6"; }

.glyphicon-upload::before { content: "=EE=80=A7"; }

.glyphicon-inbox::before { content: "=EE=80=A8"; }

.glyphicon-play-circle::before { content: "=EE=80=A9"; }

.glyphicon-repeat::before { content: "=EE=80=B0"; }

.glyphicon-refresh::before { content: "=EE=80=B1"; }

.glyphicon-list-alt::before { content: "=EE=80=B2"; }

.glyphicon-lock::before { content: "=EE=80=B3"; }

.glyphicon-flag::before { content: "=EE=80=B4"; }

.glyphicon-headphones::before { content: "=EE=80=B5"; }

.glyphicon-volume-off::before { content: "=EE=80=B6"; }

.glyphicon-volume-down::before { content: "=EE=80=B7"; }

.glyphicon-volume-up::before { content: "=EE=80=B8"; }

.glyphicon-qrcode::before { content: "=EE=80=B9"; }

.glyphicon-barcode::before { content: "=EE=81=80"; }

.glyphicon-tag::before { content: "=EE=81=81"; }

.glyphicon-tags::before { content: "=EE=81=82"; }

.glyphicon-book::before { content: "=EE=81=83"; }

.glyphicon-bookmark::before { content: "=EE=81=84"; }

.glyphicon-print::before { content: "=EE=81=85"; }

.glyphicon-camera::before { content: "=EE=81=86"; }

.glyphicon-font::before { content: "=EE=81=87"; }

.glyphicon-bold::before { content: "=EE=81=88"; }

.glyphicon-italic::before { content: "=EE=81=89"; }

.glyphicon-text-height::before { content: "=EE=81=90"; }

.glyphicon-text-width::before { content: "=EE=81=91"; }

.glyphicon-align-left::before { content: "=EE=81=92"; }

.glyphicon-align-center::before { content: "=EE=81=93"; }

.glyphicon-align-right::before { content: "=EE=81=94"; }

.glyphicon-align-justify::before { content: "=EE=81=95"; }

.glyphicon-list::before { content: "=EE=81=96"; }

.glyphicon-indent-left::before { content: "=EE=81=97"; }

.glyphicon-indent-right::before { content: "=EE=81=98"; }

.glyphicon-facetime-video::before { content: "=EE=81=99"; }

.glyphicon-picture::before { content: "=EE=81=A0"; }

.glyphicon-map-marker::before { content: "=EE=81=A2"; }

.glyphicon-adjust::before { content: "=EE=81=A3"; }

.glyphicon-tint::before { content: "=EE=81=A4"; }

.glyphicon-edit::before { content: "=EE=81=A5"; }

.glyphicon-share::before { content: "=EE=81=A6"; }

.glyphicon-check::before { content: "=EE=81=A7"; }

.glyphicon-move::before { content: "=EE=81=A8"; }

.glyphicon-step-backward::before { content: "=EE=81=A9"; }

.glyphicon-fast-backward::before { content: "=EE=81=B0"; }

.glyphicon-backward::before { content: "=EE=81=B1"; }

.glyphicon-play::before { content: "=EE=81=B2"; }

.glyphicon-pause::before { content: "=EE=81=B3"; }

.glyphicon-stop::before { content: "=EE=81=B4"; }

.glyphicon-forward::before { content: "=EE=81=B5"; }

.glyphicon-fast-forward::before { content: "=EE=81=B6"; }

.glyphicon-step-forward::before { content: "=EE=81=B7"; }

.glyphicon-eject::before { content: "=EE=81=B8"; }

.glyphicon-chevron-left::before { content: "=EE=81=B9"; }

.glyphicon-chevron-right::before { content: "=EE=82=80"; }

.glyphicon-plus-sign::before { content: "=EE=82=81"; }

.glyphicon-minus-sign::before { content: "=EE=82=82"; }

.glyphicon-remove-sign::before { content: "=EE=82=83"; }

.glyphicon-ok-sign::before { content: "=EE=82=84"; }

.glyphicon-question-sign::before { content: "=EE=82=85"; }

.glyphicon-info-sign::before { content: "=EE=82=86"; }

.glyphicon-screenshot::before { content: "=EE=82=87"; }

.glyphicon-remove-circle::before { content: "=EE=82=88"; }

.glyphicon-ok-circle::before { content: "=EE=82=89"; }

.glyphicon-ban-circle::before { content: "=EE=82=90"; }

.glyphicon-arrow-left::before { content: "=EE=82=91"; }

.glyphicon-arrow-right::before { content: "=EE=82=92"; }

.glyphicon-arrow-up::before { content: "=EE=82=93"; }

.glyphicon-arrow-down::before { content: "=EE=82=94"; }

.glyphicon-share-alt::before { content: "=EE=82=95"; }

.glyphicon-resize-full::before { content: "=EE=82=96"; }

.glyphicon-resize-small::before { content: "=EE=82=97"; }

.glyphicon-exclamation-sign::before { content: "=EE=84=81"; }

.glyphicon-gift::before { content: "=EE=84=82"; }

.glyphicon-leaf::before { content: "=EE=84=83"; }

.glyphicon-fire::before { content: "=EE=84=84"; }

.glyphicon-eye-open::before { content: "=EE=84=85"; }

.glyphicon-eye-close::before { content: "=EE=84=86"; }

.glyphicon-warning-sign::before { content: "=EE=84=87"; }

.glyphicon-plane::before { content: "=EE=84=88"; }

.glyphicon-calendar::before { content: "=EE=84=89"; }

.glyphicon-random::before { content: "=EE=84=90"; }

.glyphicon-comment::before { content: "=EE=84=91"; }

.glyphicon-magnet::before { content: "=EE=84=92"; }

.glyphicon-chevron-up::before { content: "=EE=84=93"; }

.glyphicon-chevron-down::before { content: "=EE=84=94"; }

.glyphicon-retweet::before { content: "=EE=84=95"; }

.glyphicon-shopping-cart::before { content: "=EE=84=96"; }

.glyphicon-folder-close::before { content: "=EE=84=97"; }

.glyphicon-folder-open::before { content: "=EE=84=98"; }

.glyphicon-resize-vertical::before { content: "=EE=84=99"; }

.glyphicon-resize-horizontal::before { content: "=EE=84=A0"; }

.glyphicon-hdd::before { content: "=EE=84=A1"; }

.glyphicon-bullhorn::before { content: "=EE=84=A2"; }

.glyphicon-bell::before { content: "=EE=84=A3"; }

.glyphicon-certificate::before { content: "=EE=84=A4"; }

.glyphicon-thumbs-up::before { content: "=EE=84=A5"; }

.glyphicon-thumbs-down::before { content: "=EE=84=A6"; }

.glyphicon-hand-right::before { content: "=EE=84=A7"; }

.glyphicon-hand-left::before { content: "=EE=84=A8"; }

.glyphicon-hand-up::before { content: "=EE=84=A9"; }

.glyphicon-hand-down::before { content: "=EE=84=B0"; }

.glyphicon-circle-arrow-right::before { content: "=EE=84=B1"; }

.glyphicon-circle-arrow-left::before { content: "=EE=84=B2"; }

.glyphicon-circle-arrow-up::before { content: "=EE=84=B3"; }

.glyphicon-circle-arrow-down::before { content: "=EE=84=B4"; }

.glyphicon-globe::before { content: "=EE=84=B5"; }

.glyphicon-wrench::before { content: "=EE=84=B6"; }

.glyphicon-tasks::before { content: "=EE=84=B7"; }

.glyphicon-filter::before { content: "=EE=84=B8"; }

.glyphicon-briefcase::before { content: "=EE=84=B9"; }

.glyphicon-fullscreen::before { content: "=EE=85=80"; }

.glyphicon-dashboard::before { content: "=EE=85=81"; }

.glyphicon-paperclip::before { content: "=EE=85=82"; }

.glyphicon-heart-empty::before { content: "=EE=85=83"; }

.glyphicon-link::before { content: "=EE=85=84"; }

.glyphicon-phone::before { content: "=EE=85=85"; }

.glyphicon-pushpin::before { content: "=EE=85=86"; }

.glyphicon-usd::before { content: "=EE=85=88"; }

.glyphicon-gbp::before { content: "=EE=85=89"; }

.glyphicon-sort::before { content: "=EE=85=90"; }

.glyphicon-sort-by-alphabet::before { content: "=EE=85=91"; }

.glyphicon-sort-by-alphabet-alt::before { content: "=EE=85=92"; }

.glyphicon-sort-by-order::before { content: "=EE=85=93"; }

.glyphicon-sort-by-order-alt::before { content: "=EE=85=94"; }

.glyphicon-sort-by-attributes::before { content: "=EE=85=95"; }

.glyphicon-sort-by-attributes-alt::before { content: "=EE=85=96"; }

.glyphicon-unchecked::before { content: "=EE=85=97"; }

.glyphicon-expand::before { content: "=EE=85=98"; }

.glyphicon-collapse-down::before { content: "=EE=85=99"; }

.glyphicon-collapse-up::before { content: "=EE=85=A0"; }

.glyphicon-log-in::before { content: "=EE=85=A1"; }

.glyphicon-flash::before { content: "=EE=85=A2"; }

.glyphicon-log-out::before { content: "=EE=85=A3"; }

.glyphicon-new-window::before { content: "=EE=85=A4"; }

.glyphicon-record::before { content: "=EE=85=A5"; }

.glyphicon-save::before { content: "=EE=85=A6"; }

.glyphicon-open::before { content: "=EE=85=A7"; }

.glyphicon-saved::before { content: "=EE=85=A8"; }

.glyphicon-import::before { content: "=EE=85=A9"; }

.glyphicon-export::before { content: "=EE=85=B0"; }

.glyphicon-send::before { content: "=EE=85=B1"; }

.glyphicon-floppy-disk::before { content: "=EE=85=B2"; }

.glyphicon-floppy-saved::before { content: "=EE=85=B3"; }

.glyphicon-floppy-remove::before { content: "=EE=85=B4"; }

.glyphicon-floppy-save::before { content: "=EE=85=B5"; }

.glyphicon-floppy-open::before { content: "=EE=85=B6"; }

.glyphicon-credit-card::before { content: "=EE=85=B7"; }

.glyphicon-transfer::before { content: "=EE=85=B8"; }

.glyphicon-cutlery::before { content: "=EE=85=B9"; }

.glyphicon-header::before { content: "=EE=86=80"; }

.glyphicon-compressed::before { content: "=EE=86=81"; }

.glyphicon-earphone::before { content: "=EE=86=82"; }

.glyphicon-phone-alt::before { content: "=EE=86=83"; }

.glyphicon-tower::before { content: "=EE=86=84"; }

.glyphicon-stats::before { content: "=EE=86=85"; }

.glyphicon-sd-video::before { content: "=EE=86=86"; }

.glyphicon-hd-video::before { content: "=EE=86=87"; }

.glyphicon-subtitles::before { content: "=EE=86=88"; }

.glyphicon-sound-stereo::before { content: "=EE=86=89"; }

.glyphicon-sound-dolby::before { content: "=EE=86=90"; }

.glyphicon-sound-5-1::before { content: "=EE=86=91"; }

.glyphicon-sound-6-1::before { content: "=EE=86=92"; }

.glyphicon-sound-7-1::before { content: "=EE=86=93"; }

.glyphicon-copyright-mark::before { content: "=EE=86=94"; }

.glyphicon-registration-mark::before { content: "=EE=86=95"; }

.glyphicon-cloud-download::before { content: "=EE=86=97"; }

.glyphicon-cloud-upload::before { content: "=EE=86=98"; }

.glyphicon-tree-conifer::before { content: "=EE=86=99"; }

.glyphicon-tree-deciduous::before { content: "=EE=88=80"; }

.glyphicon-cd::before { content: "=EE=88=81"; }

.glyphicon-save-file::before { content: "=EE=88=82"; }

.glyphicon-open-file::before { content: "=EE=88=83"; }

.glyphicon-level-up::before { content: "=EE=88=84"; }

.glyphicon-copy::before { content: "=EE=88=85"; }

.glyphicon-paste::before { content: "=EE=88=86"; }

.glyphicon-alert::before { content: "=EE=88=89"; }

.glyphicon-equalizer::before { content: "=EE=88=90"; }

.glyphicon-king::before { content: "=EE=88=91"; }

.glyphicon-queen::before { content: "=EE=88=92"; }

.glyphicon-pawn::before { content: "=EE=88=93"; }

.glyphicon-bishop::before { content: "=EE=88=94"; }

.glyphicon-knight::before { content: "=EE=88=95"; }

.glyphicon-baby-formula::before { content: "=EE=88=96"; }

.glyphicon-tent::before { content: "=E2=9B=BA"; }

.glyphicon-blackboard::before { content: "=EE=88=98"; }

.glyphicon-bed::before { content: "=EE=88=99"; }

.glyphicon-apple::before { content: "=EF=A3=BF"; }

.glyphicon-erase::before { content: "=EE=88=A1"; }

.glyphicon-hourglass::before { content: "=E2=8C=9B"; }

.glyphicon-lamp::before { content: "=EE=88=A3"; }

.glyphicon-duplicate::before { content: "=EE=88=A4"; }

.glyphicon-piggy-bank::before { content: "=EE=88=A5"; }

.glyphicon-scissors::before { content: "=EE=88=A6"; }

.glyphicon-bitcoin::before { content: "=EE=88=A7"; }

.glyphicon-btc::before { content: "=EE=88=A7"; }

.glyphicon-xbt::before { content: "=EE=88=A7"; }

.glyphicon-yen::before { content: "=C2=A5"; }

.glyphicon-jpy::before { content: "=C2=A5"; }

.glyphicon-ruble::before { content: "=E2=82=BD"; }

.glyphicon-rub::before { content: "=E2=82=BD"; }

.glyphicon-scale::before { content: "=EE=88=B0"; }

.glyphicon-ice-lolly::before { content: "=EE=88=B1"; }

.glyphicon-ice-lolly-tasted::before { content: "=EE=88=B2"; }

.glyphicon-education::before { content: "=EE=88=B3"; }

.glyphicon-option-horizontal::before { content: "=EE=88=B4"; }

.glyphicon-option-vertical::before { content: "=EE=88=B5"; }

.glyphicon-menu-hamburger::before { content: "=EE=88=B6"; }

.glyphicon-modal-window::before { content: "=EE=88=B7"; }

.glyphicon-oil::before { content: "=EE=88=B8"; }

.glyphicon-grain::before { content: "=EE=88=B9"; }

.glyphicon-sunglasses::before { content: "=EE=89=80"; }

.glyphicon-text-size::before { content: "=EE=89=81"; }

.glyphicon-text-color::before { content: "=EE=89=82"; }

.glyphicon-text-background::before { content: "=EE=89=83"; }

.glyphicon-object-align-top::before { content: "=EE=89=84"; }

.glyphicon-object-align-bottom::before { content: "=EE=89=85"; }

.glyphicon-object-align-horizontal::before { content: "=EE=89=86"; }

.glyphicon-object-align-left::before { content: "=EE=89=87"; }

.glyphicon-object-align-vertical::before { content: "=EE=89=88"; }

.glyphicon-object-align-right::before { content: "=EE=89=89"; }

.glyphicon-triangle-right::before { content: "=EE=89=90"; }

.glyphicon-triangle-left::before { content: "=EE=89=91"; }

.glyphicon-triangle-bottom::before { content: "=EE=89=92"; }

.glyphicon-triangle-top::before { content: "=EE=89=93"; }

.glyphicon-console::before { content: "=EE=89=94"; }

.glyphicon-superscript::before { content: "=EE=89=95"; }

.glyphicon-subscript::before { content: "=EE=89=96"; }

.glyphicon-menu-left::before { content: "=EE=89=97"; }

.glyphicon-menu-right::before { content: "=EE=89=98"; }

.glyphicon-menu-down::before { content: "=EE=89=99"; }

.glyphicon-menu-up::before { content: "=EE=89=A0"; }

* { box-sizing: border-box; }

::after, ::before { box-sizing: border-box; }

html { font-size: 10px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }

body { font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; font-si=
ze: 14px; line-height: 1.42857; color: rgb(51, 51, 51); background-color: r=
gb(255, 255, 255); }

button, input, select, textarea { font-family: inherit; font-size: inherit;=
 line-height: inherit; }

a { color: rgb(51, 122, 183); text-decoration: none; }

a:focus, a:hover { color: rgb(35, 82, 124); text-decoration: underline; }

a:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: -2px;=
 }

figure { margin: 0px; }

img { vertical-align: middle; }

.carousel-inner > .item > a > img, .carousel-inner > .item > img, .img-resp=
onsive, .thumbnail a > img, .thumbnail > img { display: block; max-width: 1=
00%; height: auto; }

.img-rounded { border-radius: 6px; }

.img-thumbnail { display: inline-block; max-width: 100%; height: auto; padd=
ing: 4px; line-height: 1.42857; background-color: rgb(255, 255, 255); borde=
r: 1px solid rgb(221, 221, 221); border-radius: 4px; transition: all 0.2s e=
ase-in-out 0s; }

.img-circle { border-radius: 50%; }

hr { margin-top: 20px; margin-bottom: 20px; border-width: 1px 0px 0px; bord=
er-right-style: initial; border-bottom-style: initial; border-left-style: i=
nitial; border-right-color: initial; border-bottom-color: initial; border-l=
eft-color: initial; border-image: initial; border-top-style: solid; border-=
top-color: rgb(238, 238, 238); }

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; margi=
n: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); border: 0px; }

.sr-only-focusable:active, .sr-only-focusable:focus { position: static; wid=
th: auto; height: auto; margin: 0px; overflow: visible; clip: auto; }

[role=3D"button"] { cursor: pointer; }

.h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6 { font-family: inherit=
; font-weight: 500; line-height: 1.1; color: inherit; }

.h1 .small, .h1 small, .h2 .small, .h2 small, .h3 .small, .h3 small, .h4 .s=
mall, .h4 small, .h5 .small, .h5 small, .h6 .small, .h6 small, h1 .small, h=
1 small, h2 .small, h2 small, h3 .small, h3 small, h4 .small, h4 small, h5 =
.small, h5 small, h6 .small, h6 small { font-weight: 400; line-height: 1; c=
olor: rgb(119, 119, 119); }

.h1, .h2, .h3, h1, h2, h3 { margin-top: 20px; margin-bottom: 10px; }

.h1 .small, .h1 small, .h2 .small, .h2 small, .h3 .small, .h3 small, h1 .sm=
all, h1 small, h2 .small, h2 small, h3 .small, h3 small { font-size: 65%; }

.h4, .h5, .h6, h4, h5, h6 { margin-top: 10px; margin-bottom: 10px; }

.h4 .small, .h4 small, .h5 .small, .h5 small, .h6 .small, .h6 small, h4 .sm=
all, h4 small, h5 .small, h5 small, h6 .small, h6 small { font-size: 75%; }

.h1, h1 { font-size: 36px; }

.h2, h2 { font-size: 30px; }

.h3, h3 { font-size: 24px; }

.h4, h4 { font-size: 18px; }

.h5, h5 { font-size: 14px; }

.h6, h6 { font-size: 12px; }

p { margin: 0px 0px 10px; }

.lead { margin-bottom: 20px; font-size: 16px; font-weight: 300; line-height=
: 1.4; }

@media (min-width: 768px) {
  .lead { font-size: 21px; }
}

.small, small { font-size: 85%; }

.mark, mark { padding: 0.2em; background-color: rgb(252, 248, 227); }

.text-left { text-align: left; }

.text-right { text-align: right; }

.text-center { text-align: center; }

.text-justify { text-align: justify; }

.text-nowrap { white-space: nowrap; }

.text-lowercase { text-transform: lowercase; }

.text-uppercase { text-transform: uppercase; }

.text-capitalize { text-transform: capitalize; }

.text-muted { color: rgb(119, 119, 119); }

.text-primary { color: rgb(51, 122, 183); }

a.text-primary:focus, a.text-primary:hover { color: rgb(40, 96, 144); }

.text-success { color: rgb(60, 118, 61); }

a.text-success:focus, a.text-success:hover { color: rgb(43, 84, 44); }

.text-info { color: rgb(49, 112, 143); }

a.text-info:focus, a.text-info:hover { color: rgb(36, 82, 105); }

.text-warning { color: rgb(138, 109, 59); }

a.text-warning:focus, a.text-warning:hover { color: rgb(102, 81, 44); }

.text-danger { color: rgb(169, 68, 66); }

a.text-danger:focus, a.text-danger:hover { color: rgb(132, 53, 52); }

.bg-primary { color: rgb(255, 255, 255); background-color: rgb(51, 122, 183=
); }

a.bg-primary:focus, a.bg-primary:hover { background-color: rgb(40, 96, 144)=
; }

.bg-success { background-color: rgb(223, 240, 216); }

a.bg-success:focus, a.bg-success:hover { background-color: rgb(193, 226, 17=
9); }

.bg-info { background-color: rgb(217, 237, 247); }

a.bg-info:focus, a.bg-info:hover { background-color: rgb(175, 217, 238); }

.bg-warning { background-color: rgb(252, 248, 227); }

a.bg-warning:focus, a.bg-warning:hover { background-color: rgb(247, 236, 18=
1); }

.bg-danger { background-color: rgb(242, 222, 222); }

a.bg-danger:focus, a.bg-danger:hover { background-color: rgb(228, 185, 185)=
; }

.page-header { padding-bottom: 9px; margin: 40px 0px 20px; border-bottom: 1=
px solid rgb(238, 238, 238); }

ol, ul { margin-top: 0px; margin-bottom: 10px; }

ol ol, ol ul, ul ol, ul ul { margin-bottom: 0px; }

.list-unstyled { padding-left: 0px; list-style: none; }

.list-inline { padding-left: 0px; margin-left: -5px; list-style: none; }

.list-inline > li { display: inline-block; padding-right: 5px; padding-left=
: 5px; }

dl { margin-top: 0px; margin-bottom: 20px; }

dd, dt { line-height: 1.42857; }

dt { font-weight: 700; }

dd { margin-left: 0px; }

@media (min-width: 768px) {
  .dl-horizontal dt { float: left; width: 160px; overflow: hidden; clear: l=
eft; text-align: right; text-overflow: ellipsis; white-space: nowrap; }
  .dl-horizontal dd { margin-left: 180px; }
}

abbr[data-original-title], abbr[title] { cursor: help; border-bottom: 1px d=
otted rgb(119, 119, 119); }

.initialism { font-size: 90%; text-transform: uppercase; }

blockquote { padding: 10px 20px; margin: 0px 0px 20px; font-size: 17.5px; b=
order-left: 5px solid rgb(238, 238, 238); }

blockquote ol:last-child, blockquote p:last-child, blockquote ul:last-child=
 { margin-bottom: 0px; }

blockquote .small, blockquote footer, blockquote small { display: block; fo=
nt-size: 80%; line-height: 1.42857; color: rgb(119, 119, 119); }

blockquote .small::before, blockquote footer::before, blockquote small::bef=
ore { content: "=E2=80=94=C2=A0"; }

.blockquote-reverse, blockquote.pull-right { padding-right: 15px; padding-l=
eft: 0px; text-align: right; border-right: 5px solid rgb(238, 238, 238); bo=
rder-left: 0px; }

.blockquote-reverse .small::before, .blockquote-reverse footer::before, .bl=
ockquote-reverse small::before, blockquote.pull-right .small::before, block=
quote.pull-right footer::before, blockquote.pull-right small::before { cont=
ent: ""; }

.blockquote-reverse .small::after, .blockquote-reverse footer::after, .bloc=
kquote-reverse small::after, blockquote.pull-right .small::after, blockquot=
e.pull-right footer::after, blockquote.pull-right small::after { content: "=
=C2=A0=E2=80=94"; }

address { margin-bottom: 20px; font-style: normal; line-height: 1.42857; }

code, kbd, pre, samp { font-family: Menlo, Monaco, Consolas, "Courier New",=
 monospace; }

code { padding: 2px 4px; font-size: 90%; color: rgb(199, 37, 78); backgroun=
d-color: rgb(249, 242, 244); border-radius: 4px; }

kbd { padding: 2px 4px; font-size: 90%; color: rgb(255, 255, 255); backgrou=
nd-color: rgb(51, 51, 51); border-radius: 3px; box-shadow: rgba(0, 0, 0, 0.=
25) 0px -1px 0px inset; }

kbd kbd { padding: 0px; font-size: 100%; font-weight: 700; box-shadow: none=
; }

pre { display: block; padding: 9.5px; margin: 0px 0px 10px; font-size: 13px=
; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; over=
flow-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px so=
lid rgb(204, 204, 204); border-radius: 4px; }

pre code { padding: 0px; font-size: inherit; color: inherit; white-space: p=
re-wrap; background-color: transparent; border-radius: 0px; }

.pre-scrollable { max-height: 340px; overflow-y: scroll; }

.container { padding-right: 15px; padding-left: 15px; margin-right: auto; m=
argin-left: auto; }

@media (min-width: 768px) {
  .container { width: 750px; }
}

@media (min-width: 992px) {
  .container { width: 970px; }
}

@media (min-width: 1200px) {
  .container { width: 1170px; }
}

.container-fluid { padding-right: 15px; padding-left: 15px; margin-right: a=
uto; margin-left: auto; }

.row { margin-right: -15px; margin-left: -15px; }

.col-lg-1, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col-l=
g-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-md-1, .col=
-md-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col-md-4, .col-md-5,=
 .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-sm-1, .col-sm-10, .col-sm=
-11, .col-sm-12, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .co=
l-sm-7, .col-sm-8, .col-sm-9, .col-xs-1, .col-xs-10, .col-xs-11, .col-xs-12=
, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs=
-8, .col-xs-9 { position: relative; min-height: 1px; padding-right: 15px; p=
adding-left: 15px; }

.col-xs-1, .col-xs-10, .col-xs-11, .col-xs-12, .col-xs-2, .col-xs-3, .col-x=
s-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9 { float: left; }

.col-xs-12 { width: 100%; }

.col-xs-11 { width: 91.6667%; }

.col-xs-10 { width: 83.3333%; }

.col-xs-9 { width: 75%; }

.col-xs-8 { width: 66.6667%; }

.col-xs-7 { width: 58.3333%; }

.col-xs-6 { width: 50%; }

.col-xs-5 { width: 41.6667%; }

.col-xs-4 { width: 33.3333%; }

.col-xs-3 { width: 25%; }

.col-xs-2 { width: 16.6667%; }

.col-xs-1 { width: 8.33333%; }

.col-xs-pull-12 { right: 100%; }

.col-xs-pull-11 { right: 91.6667%; }

.col-xs-pull-10 { right: 83.3333%; }

.col-xs-pull-9 { right: 75%; }

.col-xs-pull-8 { right: 66.6667%; }

.col-xs-pull-7 { right: 58.3333%; }

.col-xs-pull-6 { right: 50%; }

.col-xs-pull-5 { right: 41.6667%; }

.col-xs-pull-4 { right: 33.3333%; }

.col-xs-pull-3 { right: 25%; }

.col-xs-pull-2 { right: 16.6667%; }

.col-xs-pull-1 { right: 8.33333%; }

.col-xs-pull-0 { right: auto; }

.col-xs-push-12 { left: 100%; }

.col-xs-push-11 { left: 91.6667%; }

.col-xs-push-10 { left: 83.3333%; }

.col-xs-push-9 { left: 75%; }

.col-xs-push-8 { left: 66.6667%; }

.col-xs-push-7 { left: 58.3333%; }

.col-xs-push-6 { left: 50%; }

.col-xs-push-5 { left: 41.6667%; }

.col-xs-push-4 { left: 33.3333%; }

.col-xs-push-3 { left: 25%; }

.col-xs-push-2 { left: 16.6667%; }

.col-xs-push-1 { left: 8.33333%; }

.col-xs-push-0 { left: auto; }

.col-xs-offset-12 { margin-left: 100%; }

.col-xs-offset-11 { margin-left: 91.6667%; }

.col-xs-offset-10 { margin-left: 83.3333%; }

.col-xs-offset-9 { margin-left: 75%; }

.col-xs-offset-8 { margin-left: 66.6667%; }

.col-xs-offset-7 { margin-left: 58.3333%; }

.col-xs-offset-6 { margin-left: 50%; }

.col-xs-offset-5 { margin-left: 41.6667%; }

.col-xs-offset-4 { margin-left: 33.3333%; }

.col-xs-offset-3 { margin-left: 25%; }

.col-xs-offset-2 { margin-left: 16.6667%; }

.col-xs-offset-1 { margin-left: 8.33333%; }

.col-xs-offset-0 { margin-left: 0px; }

@media (min-width: 768px) {
  .col-sm-1, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm-2, .col-sm-3, .col=
-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9 { float: left;=
 }
  .col-sm-12 { width: 100%; }
  .col-sm-11 { width: 91.6667%; }
  .col-sm-10 { width: 83.3333%; }
  .col-sm-9 { width: 75%; }
  .col-sm-8 { width: 66.6667%; }
  .col-sm-7 { width: 58.3333%; }
  .col-sm-6 { width: 50%; }
  .col-sm-5 { width: 41.6667%; }
  .col-sm-4 { width: 33.3333%; }
  .col-sm-3 { width: 25%; }
  .col-sm-2 { width: 16.6667%; }
  .col-sm-1 { width: 8.33333%; }
  .col-sm-pull-12 { right: 100%; }
  .col-sm-pull-11 { right: 91.6667%; }
  .col-sm-pull-10 { right: 83.3333%; }
  .col-sm-pull-9 { right: 75%; }
  .col-sm-pull-8 { right: 66.6667%; }
  .col-sm-pull-7 { right: 58.3333%; }
  .col-sm-pull-6 { right: 50%; }
  .col-sm-pull-5 { right: 41.6667%; }
  .col-sm-pull-4 { right: 33.3333%; }
  .col-sm-pull-3 { right: 25%; }
  .col-sm-pull-2 { right: 16.6667%; }
  .col-sm-pull-1 { right: 8.33333%; }
  .col-sm-pull-0 { right: auto; }
  .col-sm-push-12 { left: 100%; }
  .col-sm-push-11 { left: 91.6667%; }
  .col-sm-push-10 { left: 83.3333%; }
  .col-sm-push-9 { left: 75%; }
  .col-sm-push-8 { left: 66.6667%; }
  .col-sm-push-7 { left: 58.3333%; }
  .col-sm-push-6 { left: 50%; }
  .col-sm-push-5 { left: 41.6667%; }
  .col-sm-push-4 { left: 33.3333%; }
  .col-sm-push-3 { left: 25%; }
  .col-sm-push-2 { left: 16.6667%; }
  .col-sm-push-1 { left: 8.33333%; }
  .col-sm-push-0 { left: auto; }
  .col-sm-offset-12 { margin-left: 100%; }
  .col-sm-offset-11 { margin-left: 91.6667%; }
  .col-sm-offset-10 { margin-left: 83.3333%; }
  .col-sm-offset-9 { margin-left: 75%; }
  .col-sm-offset-8 { margin-left: 66.6667%; }
  .col-sm-offset-7 { margin-left: 58.3333%; }
  .col-sm-offset-6 { margin-left: 50%; }
  .col-sm-offset-5 { margin-left: 41.6667%; }
  .col-sm-offset-4 { margin-left: 33.3333%; }
  .col-sm-offset-3 { margin-left: 25%; }
  .col-sm-offset-2 { margin-left: 16.6667%; }
  .col-sm-offset-1 { margin-left: 8.33333%; }
  .col-sm-offset-0 { margin-left: 0px; }
}

@media (min-width: 992px) {
  .col-md-1, .col-md-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col=
-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9 { float: left;=
 }
  .col-md-12 { width: 100%; }
  .col-md-11 { width: 91.6667%; }
  .col-md-10 { width: 83.3333%; }
  .col-md-9 { width: 75%; }
  .col-md-8 { width: 66.6667%; }
  .col-md-7 { width: 58.3333%; }
  .col-md-6 { width: 50%; }
  .col-md-5 { width: 41.6667%; }
  .col-md-4 { width: 33.3333%; }
  .col-md-3 { width: 25%; }
  .col-md-2 { width: 16.6667%; }
  .col-md-1 { width: 8.33333%; }
  .col-md-pull-12 { right: 100%; }
  .col-md-pull-11 { right: 91.6667%; }
  .col-md-pull-10 { right: 83.3333%; }
  .col-md-pull-9 { right: 75%; }
  .col-md-pull-8 { right: 66.6667%; }
  .col-md-pull-7 { right: 58.3333%; }
  .col-md-pull-6 { right: 50%; }
  .col-md-pull-5 { right: 41.6667%; }
  .col-md-pull-4 { right: 33.3333%; }
  .col-md-pull-3 { right: 25%; }
  .col-md-pull-2 { right: 16.6667%; }
  .col-md-pull-1 { right: 8.33333%; }
  .col-md-pull-0 { right: auto; }
  .col-md-push-12 { left: 100%; }
  .col-md-push-11 { left: 91.6667%; }
  .col-md-push-10 { left: 83.3333%; }
  .col-md-push-9 { left: 75%; }
  .col-md-push-8 { left: 66.6667%; }
  .col-md-push-7 { left: 58.3333%; }
  .col-md-push-6 { left: 50%; }
  .col-md-push-5 { left: 41.6667%; }
  .col-md-push-4 { left: 33.3333%; }
  .col-md-push-3 { left: 25%; }
  .col-md-push-2 { left: 16.6667%; }
  .col-md-push-1 { left: 8.33333%; }
  .col-md-push-0 { left: auto; }
  .col-md-offset-12 { margin-left: 100%; }
  .col-md-offset-11 { margin-left: 91.6667%; }
  .col-md-offset-10 { margin-left: 83.3333%; }
  .col-md-offset-9 { margin-left: 75%; }
  .col-md-offset-8 { margin-left: 66.6667%; }
  .col-md-offset-7 { margin-left: 58.3333%; }
  .col-md-offset-6 { margin-left: 50%; }
  .col-md-offset-5 { margin-left: 41.6667%; }
  .col-md-offset-4 { margin-left: 33.3333%; }
  .col-md-offset-3 { margin-left: 25%; }
  .col-md-offset-2 { margin-left: 16.6667%; }
  .col-md-offset-1 { margin-left: 8.33333%; }
  .col-md-offset-0 { margin-left: 0px; }
}

@media (min-width: 1200px) {
  .col-lg-1, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col=
-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9 { float: left;=
 }
  .col-lg-12 { width: 100%; }
  .col-lg-11 { width: 91.6667%; }
  .col-lg-10 { width: 83.3333%; }
  .col-lg-9 { width: 75%; }
  .col-lg-8 { width: 66.6667%; }
  .col-lg-7 { width: 58.3333%; }
  .col-lg-6 { width: 50%; }
  .col-lg-5 { width: 41.6667%; }
  .col-lg-4 { width: 33.3333%; }
  .col-lg-3 { width: 25%; }
  .col-lg-2 { width: 16.6667%; }
  .col-lg-1 { width: 8.33333%; }
  .col-lg-pull-12 { right: 100%; }
  .col-lg-pull-11 { right: 91.6667%; }
  .col-lg-pull-10 { right: 83.3333%; }
  .col-lg-pull-9 { right: 75%; }
  .col-lg-pull-8 { right: 66.6667%; }
  .col-lg-pull-7 { right: 58.3333%; }
  .col-lg-pull-6 { right: 50%; }
  .col-lg-pull-5 { right: 41.6667%; }
  .col-lg-pull-4 { right: 33.3333%; }
  .col-lg-pull-3 { right: 25%; }
  .col-lg-pull-2 { right: 16.6667%; }
  .col-lg-pull-1 { right: 8.33333%; }
  .col-lg-pull-0 { right: auto; }
  .col-lg-push-12 { left: 100%; }
  .col-lg-push-11 { left: 91.6667%; }
  .col-lg-push-10 { left: 83.3333%; }
  .col-lg-push-9 { left: 75%; }
  .col-lg-push-8 { left: 66.6667%; }
  .col-lg-push-7 { left: 58.3333%; }
  .col-lg-push-6 { left: 50%; }
  .col-lg-push-5 { left: 41.6667%; }
  .col-lg-push-4 { left: 33.3333%; }
  .col-lg-push-3 { left: 25%; }
  .col-lg-push-2 { left: 16.6667%; }
  .col-lg-push-1 { left: 8.33333%; }
  .col-lg-push-0 { left: auto; }
  .col-lg-offset-12 { margin-left: 100%; }
  .col-lg-offset-11 { margin-left: 91.6667%; }
  .col-lg-offset-10 { margin-left: 83.3333%; }
  .col-lg-offset-9 { margin-left: 75%; }
  .col-lg-offset-8 { margin-left: 66.6667%; }
  .col-lg-offset-7 { margin-left: 58.3333%; }
  .col-lg-offset-6 { margin-left: 50%; }
  .col-lg-offset-5 { margin-left: 41.6667%; }
  .col-lg-offset-4 { margin-left: 33.3333%; }
  .col-lg-offset-3 { margin-left: 25%; }
  .col-lg-offset-2 { margin-left: 16.6667%; }
  .col-lg-offset-1 { margin-left: 8.33333%; }
  .col-lg-offset-0 { margin-left: 0px; }
}

table { background-color: transparent; }

caption { padding-top: 8px; padding-bottom: 8px; color: rgb(119, 119, 119);=
 text-align: left; }

th { text-align: left; }

.table { width: 100%; max-width: 100%; margin-bottom: 20px; }

.table > tbody > tr > td, .table > tbody > tr > th, .table > tfoot > tr > t=
d, .table > tfoot > tr > th, .table > thead > tr > td, .table > thead > tr =
> th { padding: 8px; line-height: 1.42857; vertical-align: top; border-top:=
 1px solid rgb(221, 221, 221); }

.table > thead > tr > th { vertical-align: bottom; border-bottom: 2px solid=
 rgb(221, 221, 221); }

.table > caption + thead > tr:first-child > td, .table > caption + thead > =
tr:first-child > th, .table > colgroup + thead > tr:first-child > td, .tabl=
e > colgroup + thead > tr:first-child > th, .table > thead:first-child > tr=
:first-child > td, .table > thead:first-child > tr:first-child > th { borde=
r-top: 0px; }

.table > tbody + tbody { border-top: 2px solid rgb(221, 221, 221); }

.table .table { background-color: rgb(255, 255, 255); }

.table-condensed > tbody > tr > td, .table-condensed > tbody > tr > th, .ta=
ble-condensed > tfoot > tr > td, .table-condensed > tfoot > tr > th, .table=
-condensed > thead > tr > td, .table-condensed > thead > tr > th { padding:=
 5px; }

.table-bordered { border: 1px solid rgb(221, 221, 221); }

.table-bordered > tbody > tr > td, .table-bordered > tbody > tr > th, .tabl=
e-bordered > tfoot > tr > td, .table-bordered > tfoot > tr > th, .table-bor=
dered > thead > tr > td, .table-bordered > thead > tr > th { border: 1px so=
lid rgb(221, 221, 221); }

.table-bordered > thead > tr > td, .table-bordered > thead > tr > th { bord=
er-bottom-width: 2px; }

.table-striped > tbody > tr:nth-of-type(2n+1) { background-color: rgb(249, =
249, 249); }

.table-hover > tbody > tr:hover { background-color: rgb(245, 245, 245); }

table col[class*=3D"col-"] { position: static; display: table-column; float=
: none; }

table td[class*=3D"col-"], table th[class*=3D"col-"] { position: static; di=
splay: table-cell; float: none; }

.table > tbody > tr.active > td, .table > tbody > tr.active > th, .table > =
tbody > tr > td.active, .table > tbody > tr > th.active, .table > tfoot > t=
r.active > td, .table > tfoot > tr.active > th, .table > tfoot > tr > td.ac=
tive, .table > tfoot > tr > th.active, .table > thead > tr.active > td, .ta=
ble > thead > tr.active > th, .table > thead > tr > td.active, .table > the=
ad > tr > th.active { background-color: rgb(245, 245, 245); }

.table-hover > tbody > tr.active:hover > td, .table-hover > tbody > tr.acti=
ve:hover > th, .table-hover > tbody > tr:hover > .active, .table-hover > tb=
ody > tr > td.active:hover, .table-hover > tbody > tr > th.active:hover { b=
ackground-color: rgb(232, 232, 232); }

.table > tbody > tr.success > td, .table > tbody > tr.success > th, .table =
> tbody > tr > td.success, .table > tbody > tr > th.success, .table > tfoot=
 > tr.success > td, .table > tfoot > tr.success > th, .table > tfoot > tr >=
 td.success, .table > tfoot > tr > th.success, .table > thead > tr.success =
> td, .table > thead > tr.success > th, .table > thead > tr > td.success, .=
table > thead > tr > th.success { background-color: rgb(223, 240, 216); }

.table-hover > tbody > tr.success:hover > td, .table-hover > tbody > tr.suc=
cess:hover > th, .table-hover > tbody > tr:hover > .success, .table-hover >=
 tbody > tr > td.success:hover, .table-hover > tbody > tr > th.success:hove=
r { background-color: rgb(208, 233, 198); }

.table > tbody > tr.info > td, .table > tbody > tr.info > th, .table > tbod=
y > tr > td.info, .table > tbody > tr > th.info, .table > tfoot > tr.info >=
 td, .table > tfoot > tr.info > th, .table > tfoot > tr > td.info, .table >=
 tfoot > tr > th.info, .table > thead > tr.info > td, .table > thead > tr.i=
nfo > th, .table > thead > tr > td.info, .table > thead > tr > th.info { ba=
ckground-color: rgb(217, 237, 247); }

.table-hover > tbody > tr.info:hover > td, .table-hover > tbody > tr.info:h=
over > th, .table-hover > tbody > tr:hover > .info, .table-hover > tbody > =
tr > td.info:hover, .table-hover > tbody > tr > th.info:hover { background-=
color: rgb(196, 227, 243); }

.table > tbody > tr.warning > td, .table > tbody > tr.warning > th, .table =
> tbody > tr > td.warning, .table > tbody > tr > th.warning, .table > tfoot=
 > tr.warning > td, .table > tfoot > tr.warning > th, .table > tfoot > tr >=
 td.warning, .table > tfoot > tr > th.warning, .table > thead > tr.warning =
> td, .table > thead > tr.warning > th, .table > thead > tr > td.warning, .=
table > thead > tr > th.warning { background-color: rgb(252, 248, 227); }

.table-hover > tbody > tr.warning:hover > td, .table-hover > tbody > tr.war=
ning:hover > th, .table-hover > tbody > tr:hover > .warning, .table-hover >=
 tbody > tr > td.warning:hover, .table-hover > tbody > tr > th.warning:hove=
r { background-color: rgb(250, 242, 204); }

.table > tbody > tr.danger > td, .table > tbody > tr.danger > th, .table > =
tbody > tr > td.danger, .table > tbody > tr > th.danger, .table > tfoot > t=
r.danger > td, .table > tfoot > tr.danger > th, .table > tfoot > tr > td.da=
nger, .table > tfoot > tr > th.danger, .table > thead > tr.danger > td, .ta=
ble > thead > tr.danger > th, .table > thead > tr > td.danger, .table > the=
ad > tr > th.danger { background-color: rgb(242, 222, 222); }

.table-hover > tbody > tr.danger:hover > td, .table-hover > tbody > tr.dang=
er:hover > th, .table-hover > tbody > tr:hover > .danger, .table-hover > tb=
ody > tr > td.danger:hover, .table-hover > tbody > tr > th.danger:hover { b=
ackground-color: rgb(235, 204, 204); }

.table-responsive { min-height: 0.01%; overflow-x: auto; }

@media screen and (max-width: 767px) {
  .table-responsive { width: 100%; margin-bottom: 15px; overflow-y: hidden;=
 border: 1px solid rgb(221, 221, 221); }
  .table-responsive > .table { margin-bottom: 0px; }
  .table-responsive > .table > tbody > tr > td, .table-responsive > .table =
> tbody > tr > th, .table-responsive > .table > tfoot > tr > td, .table-res=
ponsive > .table > tfoot > tr > th, .table-responsive > .table > thead > tr=
 > td, .table-responsive > .table > thead > tr > th { white-space: nowrap; =
}
  .table-responsive > .table-bordered { border: 0px; }
  .table-responsive > .table-bordered > tbody > tr > td:first-child, .table=
-responsive > .table-bordered > tbody > tr > th:first-child, .table-respons=
ive > .table-bordered > tfoot > tr > td:first-child, .table-responsive > .t=
able-bordered > tfoot > tr > th:first-child, .table-responsive > .table-bor=
dered > thead > tr > td:first-child, .table-responsive > .table-bordered > =
thead > tr > th:first-child { border-left: 0px; }
  .table-responsive > .table-bordered > tbody > tr > td:last-child, .table-=
responsive > .table-bordered > tbody > tr > th:last-child, .table-responsiv=
e > .table-bordered > tfoot > tr > td:last-child, .table-responsive > .tabl=
e-bordered > tfoot > tr > th:last-child, .table-responsive > .table-bordere=
d > thead > tr > td:last-child, .table-responsive > .table-bordered > thead=
 > tr > th:last-child { border-right: 0px; }
  .table-responsive > .table-bordered > tbody > tr:last-child > td, .table-=
responsive > .table-bordered > tbody > tr:last-child > th, .table-responsiv=
e > .table-bordered > tfoot > tr:last-child > td, .table-responsive > .tabl=
e-bordered > tfoot > tr:last-child > th { border-bottom: 0px; }
}

fieldset { min-width: 0px; padding: 0px; margin: 0px; border: 0px; }

legend { display: block; width: 100%; padding: 0px; margin-bottom: 20px; fo=
nt-size: 21px; line-height: inherit; color: rgb(51, 51, 51); border-width: =
0px 0px 1px; border-top-style: initial; border-right-style: initial; border=
-left-style: initial; border-top-color: initial; border-right-color: initia=
l; border-left-color: initial; border-image: initial; border-bottom-style: =
solid; border-bottom-color: rgb(229, 229, 229); }

label { display: inline-block; max-width: 100%; margin-bottom: 5px; font-we=
ight: 700; }

input[type=3D"search"] { box-sizing: border-box; }

input[type=3D"checkbox"], input[type=3D"radio"] { margin: 4px 0px 0px; line=
-height: normal; }

input[type=3D"file"] { display: block; }

input[type=3D"range"] { display: block; width: 100%; }

select[multiple], select[size] { height: auto; }

input[type=3D"file"]:focus, input[type=3D"checkbox"]:focus, input[type=3D"r=
adio"]:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: =
-2px; }

output { display: block; padding-top: 7px; font-size: 14px; line-height: 1.=
42857; color: rgb(85, 85, 85); }

.form-control { display: block; width: 100%; height: 34px; padding: 6px 12p=
x; font-size: 14px; line-height: 1.42857; color: rgb(85, 85, 85); backgroun=
d-color: rgb(255, 255, 255); background-image: none; border: 1px solid rgb(=
204, 204, 204); border-radius: 4px; box-shadow: rgba(0, 0, 0, 0.075) 0px 1p=
x 1px inset; transition: border-color 0.15s ease-in-out 0s, box-shadow 0.15=
s ease-in-out 0s; }

.form-control:focus { border-color: rgb(102, 175, 233); outline: 0px; box-s=
hadow: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgba(102, 175, 233, 0.6) 0px=
 0px 8px; }

.form-control::-webkit-input-placeholder { color: rgb(153, 153, 153); }

.form-control[disabled], .form-control[readonly], fieldset[disabled] .form-=
control { background-color: rgb(238, 238, 238); opacity: 1; }

.form-control[disabled], fieldset[disabled] .form-control { cursor: not-all=
owed; }

textarea.form-control { height: auto; }

input[type=3D"search"] { appearance: none; }

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  input.form-control[type=3D"date"], input.form-control[type=3D"time"], inp=
ut.form-control[type=3D"datetime-local"], input.form-control[type=3D"month"=
] { line-height: 34px; }
  .input-group-sm input[type=3D"date"], .input-group-sm input[type=3D"time"=
], .input-group-sm input[type=3D"datetime-local"], .input-group-sm input[ty=
pe=3D"month"], input.input-sm[type=3D"date"], input.input-sm[type=3D"time"]=
, input.input-sm[type=3D"datetime-local"], input.input-sm[type=3D"month"] {=
 line-height: 30px; }
  .input-group-lg input[type=3D"date"], .input-group-lg input[type=3D"time"=
], .input-group-lg input[type=3D"datetime-local"], .input-group-lg input[ty=
pe=3D"month"], input.input-lg[type=3D"date"], input.input-lg[type=3D"time"]=
, input.input-lg[type=3D"datetime-local"], input.input-lg[type=3D"month"] {=
 line-height: 46px; }
}

.form-group { margin-bottom: 15px; }

.checkbox, .radio { position: relative; display: block; margin-top: 10px; m=
argin-bottom: 10px; }

.checkbox label, .radio label { min-height: 20px; padding-left: 20px; margi=
n-bottom: 0px; font-weight: 400; cursor: pointer; }

.checkbox input[type=3D"checkbox"], .checkbox-inline input[type=3D"checkbox=
"], .radio input[type=3D"radio"], .radio-inline input[type=3D"radio"] { pos=
ition: absolute; margin-left: -20px; }

.checkbox + .checkbox, .radio + .radio { margin-top: -5px; }

.checkbox-inline, .radio-inline { position: relative; display: inline-block=
; padding-left: 20px; margin-bottom: 0px; font-weight: 400; vertical-align:=
 middle; cursor: pointer; }

.checkbox-inline + .checkbox-inline, .radio-inline + .radio-inline { margin=
-top: 0px; margin-left: 10px; }

fieldset[disabled] input[type=3D"checkbox"], fieldset[disabled] input[type=
=3D"radio"], input.disabled[type=3D"checkbox"], input[type=3D"checkbox"][di=
sabled], input.disabled[type=3D"radio"], input[type=3D"radio"][disabled] { =
cursor: not-allowed; }

.checkbox-inline.disabled, .radio-inline.disabled, fieldset[disabled] .chec=
kbox-inline, fieldset[disabled] .radio-inline { cursor: not-allowed; }

.checkbox.disabled label, .radio.disabled label, fieldset[disabled] .checkb=
ox label, fieldset[disabled] .radio label { cursor: not-allowed; }

.form-control-static { min-height: 34px; padding-top: 7px; padding-bottom: =
7px; margin-bottom: 0px; }

.form-control-static.input-lg, .form-control-static.input-sm { padding-righ=
t: 0px; padding-left: 0px; }

.input-sm { height: 30px; padding: 5px 10px; font-size: 12px; line-height: =
1.5; border-radius: 3px; }

select.input-sm { height: 30px; line-height: 30px; }

select.input-sm[multiple], textarea.input-sm { height: auto; }

.form-group-sm .form-control { height: 30px; padding: 5px 10px; font-size: =
12px; line-height: 1.5; border-radius: 3px; }

.form-group-sm select.form-control { height: 30px; line-height: 30px; }

.form-group-sm select.form-control[multiple], .form-group-sm textarea.form-=
control { height: auto; }

.form-group-sm .form-control-static { height: 30px; min-height: 32px; paddi=
ng: 6px 10px; font-size: 12px; line-height: 1.5; }

.input-lg { height: 46px; padding: 10px 16px; font-size: 18px; line-height:=
 1.33333; border-radius: 6px; }

select.input-lg { height: 46px; line-height: 46px; }

select.input-lg[multiple], textarea.input-lg { height: auto; }

.form-group-lg .form-control { height: 46px; padding: 10px 16px; font-size:=
 18px; line-height: 1.33333; border-radius: 6px; }

.form-group-lg select.form-control { height: 46px; line-height: 46px; }

.form-group-lg select.form-control[multiple], .form-group-lg textarea.form-=
control { height: auto; }

.form-group-lg .form-control-static { height: 46px; min-height: 38px; paddi=
ng: 11px 16px; font-size: 18px; line-height: 1.33333; }

.has-feedback { position: relative; }

.has-feedback .form-control { padding-right: 42.5px; }

.form-control-feedback { position: absolute; top: 0px; right: 0px; z-index:=
 2; display: block; width: 34px; height: 34px; line-height: 34px; text-alig=
n: center; pointer-events: none; }

.form-group-lg .form-control + .form-control-feedback, .input-group-lg + .f=
orm-control-feedback, .input-lg + .form-control-feedback { width: 46px; hei=
ght: 46px; line-height: 46px; }

.form-group-sm .form-control + .form-control-feedback, .input-group-sm + .f=
orm-control-feedback, .input-sm + .form-control-feedback { width: 30px; hei=
ght: 30px; line-height: 30px; }

.has-success .checkbox, .has-success .checkbox-inline, .has-success .contro=
l-label, .has-success .help-block, .has-success .radio, .has-success .radio=
-inline, .has-success.checkbox label, .has-success.checkbox-inline label, .=
has-success.radio label, .has-success.radio-inline label { color: rgb(60, 1=
18, 61); }

.has-success .form-control { border-color: rgb(60, 118, 61); box-shadow: rg=
ba(0, 0, 0, 0.075) 0px 1px 1px inset; }

.has-success .form-control:focus { border-color: rgb(43, 84, 44); box-shado=
w: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(103, 177, 104) 0px 0px 6px; =
}

.has-success .input-group-addon { color: rgb(60, 118, 61); background-color=
: rgb(223, 240, 216); border-color: rgb(60, 118, 61); }

.has-success .form-control-feedback { color: rgb(60, 118, 61); }

.has-warning .checkbox, .has-warning .checkbox-inline, .has-warning .contro=
l-label, .has-warning .help-block, .has-warning .radio, .has-warning .radio=
-inline, .has-warning.checkbox label, .has-warning.checkbox-inline label, .=
has-warning.radio label, .has-warning.radio-inline label { color: rgb(138, =
109, 59); }

.has-warning .form-control { border-color: rgb(138, 109, 59); box-shadow: r=
gba(0, 0, 0, 0.075) 0px 1px 1px inset; }

.has-warning .form-control:focus { border-color: rgb(102, 81, 44); box-shad=
ow: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(192, 161, 107) 0px 0px 6px;=
 }

.has-warning .input-group-addon { color: rgb(138, 109, 59); background-colo=
r: rgb(252, 248, 227); border-color: rgb(138, 109, 59); }

.has-warning .form-control-feedback { color: rgb(138, 109, 59); }

.has-error .checkbox, .has-error .checkbox-inline, .has-error .control-labe=
l, .has-error .help-block, .has-error .radio, .has-error .radio-inline, .ha=
s-error.checkbox label, .has-error.checkbox-inline label, .has-error.radio =
label, .has-error.radio-inline label { color: rgb(169, 68, 66); }

.has-error .form-control { border-color: rgb(169, 68, 66); box-shadow: rgba=
(0, 0, 0, 0.075) 0px 1px 1px inset; }

.has-error .form-control:focus { border-color: rgb(132, 53, 52); box-shadow=
: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(206, 132, 131) 0px 0px 6px; }

.has-error .input-group-addon { color: rgb(169, 68, 66); background-color: =
rgb(242, 222, 222); border-color: rgb(169, 68, 66); }

.has-error .form-control-feedback { color: rgb(169, 68, 66); }

.has-feedback label ~ .form-control-feedback { top: 25px; }

.has-feedback label.sr-only ~ .form-control-feedback { top: 0px; }

.help-block { display: block; margin-top: 5px; margin-bottom: 10px; color: =
rgb(115, 115, 115); }

@media (min-width: 768px) {
  .form-inline .form-group { display: inline-block; margin-bottom: 0px; ver=
tical-align: middle; }
  .form-inline .form-control { display: inline-block; width: auto; vertical=
-align: middle; }
  .form-inline .form-control-static { display: inline-block; }
  .form-inline .input-group { display: inline-table; vertical-align: middle=
; }
  .form-inline .input-group .form-control, .form-inline .input-group .input=
-group-addon, .form-inline .input-group .input-group-btn { width: auto; }
  .form-inline .input-group > .form-control { width: 100%; }
  .form-inline .control-label { margin-bottom: 0px; vertical-align: middle;=
 }
  .form-inline .checkbox, .form-inline .radio { display: inline-block; marg=
in-top: 0px; margin-bottom: 0px; vertical-align: middle; }
  .form-inline .checkbox label, .form-inline .radio label { padding-left: 0=
px; }
  .form-inline .checkbox input[type=3D"checkbox"], .form-inline .radio inpu=
t[type=3D"radio"] { position: relative; margin-left: 0px; }
  .form-inline .has-feedback .form-control-feedback { top: 0px; }
}

.form-horizontal .checkbox, .form-horizontal .checkbox-inline, .form-horizo=
ntal .radio, .form-horizontal .radio-inline { padding-top: 7px; margin-top:=
 0px; margin-bottom: 0px; }

.form-horizontal .checkbox, .form-horizontal .radio { min-height: 27px; }

.form-horizontal .form-group { margin-right: -15px; margin-left: -15px; }

@media (min-width: 768px) {
  .form-horizontal .control-label { padding-top: 7px; margin-bottom: 0px; t=
ext-align: right; }
}

.form-horizontal .has-feedback .form-control-feedback { right: 15px; }

@media (min-width: 768px) {
  .form-horizontal .form-group-lg .control-label { padding-top: 11px; font-=
size: 18px; }
}

@media (min-width: 768px) {
  .form-horizontal .form-group-sm .control-label { padding-top: 6px; font-s=
ize: 12px; }
}

.btn { display: inline-block; padding: 6px 12px; margin-bottom: 0px; font-s=
ize: 14px; font-weight: 400; line-height: 1.42857; text-align: center; whit=
e-space: nowrap; vertical-align: middle; touch-action: manipulation; cursor=
: pointer; user-select: none; background-image: none; border: 1px solid tra=
nsparent; border-radius: 4px; }

.btn.active.focus, .btn.active:focus, .btn.focus, .btn.focus:active, .btn:a=
ctive:focus, .btn:focus { outline: -webkit-focus-ring-color auto 5px; outli=
ne-offset: -2px; }

.btn.focus, .btn:focus, .btn:hover { color: rgb(51, 51, 51); text-decoratio=
n: none; }

.btn.active, .btn:active { background-image: none; outline: 0px; box-shadow=
: rgba(0, 0, 0, 0.125) 0px 3px 5px inset; }

.btn.disabled, .btn[disabled], fieldset[disabled] .btn { cursor: not-allowe=
d; box-shadow: none; opacity: 0.65; }

a.btn.disabled, fieldset[disabled] a.btn { pointer-events: none; }

.btn-default { color: rgb(51, 51, 51); background-color: rgb(255, 255, 255)=
; border-color: rgb(204, 204, 204); }

.btn-default.focus, .btn-default:focus { color: rgb(51, 51, 51); background=
-color: rgb(230, 230, 230); border-color: rgb(140, 140, 140); }

.btn-default:hover { color: rgb(51, 51, 51); background-color: rgb(230, 230=
, 230); border-color: rgb(173, 173, 173); }

.btn-default.active, .btn-default:active, .open > .dropdown-toggle.btn-defa=
ult { color: rgb(51, 51, 51); background-color: rgb(230, 230, 230); border-=
color: rgb(173, 173, 173); }

.btn-default.active.focus, .btn-default.active:focus, .btn-default.active:h=
over, .btn-default.focus:active, .btn-default:active:focus, .btn-default:ac=
tive:hover, .open > .dropdown-toggle.btn-default.focus, .open > .dropdown-t=
oggle.btn-default:focus, .open > .dropdown-toggle.btn-default:hover { color=
: rgb(51, 51, 51); background-color: rgb(212, 212, 212); border-color: rgb(=
140, 140, 140); }

.btn-default.active, .btn-default:active, .open > .dropdown-toggle.btn-defa=
ult { background-image: none; }

.btn-default.disabled.focus, .btn-default.disabled:focus, .btn-default.disa=
bled:hover, .btn-default.focus[disabled], .btn-default[disabled]:focus, .bt=
n-default[disabled]:hover, fieldset[disabled] .btn-default.focus, fieldset[=
disabled] .btn-default:focus, fieldset[disabled] .btn-default:hover { backg=
round-color: rgb(255, 255, 255); border-color: rgb(204, 204, 204); }

.btn-default .badge { color: rgb(255, 255, 255); background-color: rgb(51, =
51, 51); }

.btn-primary { color: rgb(255, 255, 255); background-color: rgb(51, 122, 18=
3); border-color: rgb(46, 109, 164); }

.btn-primary.focus, .btn-primary:focus { color: rgb(255, 255, 255); backgro=
und-color: rgb(40, 96, 144); border-color: rgb(18, 43, 64); }

.btn-primary:hover { color: rgb(255, 255, 255); background-color: rgb(40, 9=
6, 144); border-color: rgb(32, 77, 116); }

.btn-primary.active, .btn-primary:active, .open > .dropdown-toggle.btn-prim=
ary { color: rgb(255, 255, 255); background-color: rgb(40, 96, 144); border=
-color: rgb(32, 77, 116); }

.btn-primary.active.focus, .btn-primary.active:focus, .btn-primary.active:h=
over, .btn-primary.focus:active, .btn-primary:active:focus, .btn-primary:ac=
tive:hover, .open > .dropdown-toggle.btn-primary.focus, .open > .dropdown-t=
oggle.btn-primary:focus, .open > .dropdown-toggle.btn-primary:hover { color=
: rgb(255, 255, 255); background-color: rgb(32, 77, 116); border-color: rgb=
(18, 43, 64); }

.btn-primary.active, .btn-primary:active, .open > .dropdown-toggle.btn-prim=
ary { background-image: none; }

.btn-primary.disabled.focus, .btn-primary.disabled:focus, .btn-primary.disa=
bled:hover, .btn-primary.focus[disabled], .btn-primary[disabled]:focus, .bt=
n-primary[disabled]:hover, fieldset[disabled] .btn-primary.focus, fieldset[=
disabled] .btn-primary:focus, fieldset[disabled] .btn-primary:hover { backg=
round-color: rgb(51, 122, 183); border-color: rgb(46, 109, 164); }

.btn-primary .badge { color: rgb(51, 122, 183); background-color: rgb(255, =
255, 255); }

.btn-success { color: rgb(255, 255, 255); background-color: rgb(92, 184, 92=
); border-color: rgb(76, 174, 76); }

.btn-success.focus, .btn-success:focus { color: rgb(255, 255, 255); backgro=
und-color: rgb(68, 157, 68); border-color: rgb(37, 86, 37); }

.btn-success:hover { color: rgb(255, 255, 255); background-color: rgb(68, 1=
57, 68); border-color: rgb(57, 132, 57); }

.btn-success.active, .btn-success:active, .open > .dropdown-toggle.btn-succ=
ess { color: rgb(255, 255, 255); background-color: rgb(68, 157, 68); border=
-color: rgb(57, 132, 57); }

.btn-success.active.focus, .btn-success.active:focus, .btn-success.active:h=
over, .btn-success.focus:active, .btn-success:active:focus, .btn-success:ac=
tive:hover, .open > .dropdown-toggle.btn-success.focus, .open > .dropdown-t=
oggle.btn-success:focus, .open > .dropdown-toggle.btn-success:hover { color=
: rgb(255, 255, 255); background-color: rgb(57, 132, 57); border-color: rgb=
(37, 86, 37); }

.btn-success.active, .btn-success:active, .open > .dropdown-toggle.btn-succ=
ess { background-image: none; }

.btn-success.disabled.focus, .btn-success.disabled:focus, .btn-success.disa=
bled:hover, .btn-success.focus[disabled], .btn-success[disabled]:focus, .bt=
n-success[disabled]:hover, fieldset[disabled] .btn-success.focus, fieldset[=
disabled] .btn-success:focus, fieldset[disabled] .btn-success:hover { backg=
round-color: rgb(92, 184, 92); border-color: rgb(76, 174, 76); }

.btn-success .badge { color: rgb(92, 184, 92); background-color: rgb(255, 2=
55, 255); }

.btn-info { color: rgb(255, 255, 255); background-color: rgb(91, 192, 222);=
 border-color: rgb(70, 184, 218); }

.btn-info.focus, .btn-info:focus { color: rgb(255, 255, 255); background-co=
lor: rgb(49, 176, 213); border-color: rgb(27, 109, 133); }

.btn-info:hover { color: rgb(255, 255, 255); background-color: rgb(49, 176,=
 213); border-color: rgb(38, 154, 188); }

.btn-info.active, .btn-info:active, .open > .dropdown-toggle.btn-info { col=
or: rgb(255, 255, 255); background-color: rgb(49, 176, 213); border-color: =
rgb(38, 154, 188); }

.btn-info.active.focus, .btn-info.active:focus, .btn-info.active:hover, .bt=
n-info.focus:active, .btn-info:active:focus, .btn-info:active:hover, .open =
> .dropdown-toggle.btn-info.focus, .open > .dropdown-toggle.btn-info:focus,=
 .open > .dropdown-toggle.btn-info:hover { color: rgb(255, 255, 255); backg=
round-color: rgb(38, 154, 188); border-color: rgb(27, 109, 133); }

.btn-info.active, .btn-info:active, .open > .dropdown-toggle.btn-info { bac=
kground-image: none; }

.btn-info.disabled.focus, .btn-info.disabled:focus, .btn-info.disabled:hove=
r, .btn-info.focus[disabled], .btn-info[disabled]:focus, .btn-info[disabled=
]:hover, fieldset[disabled] .btn-info.focus, fieldset[disabled] .btn-info:f=
ocus, fieldset[disabled] .btn-info:hover { background-color: rgb(91, 192, 2=
22); border-color: rgb(70, 184, 218); }

.btn-info .badge { color: rgb(91, 192, 222); background-color: rgb(255, 255=
, 255); }

.btn-warning { color: rgb(255, 255, 255); background-color: rgb(240, 173, 7=
8); border-color: rgb(238, 162, 54); }

.btn-warning.focus, .btn-warning:focus { color: rgb(255, 255, 255); backgro=
und-color: rgb(236, 151, 31); border-color: rgb(152, 95, 13); }

.btn-warning:hover { color: rgb(255, 255, 255); background-color: rgb(236, =
151, 31); border-color: rgb(213, 133, 18); }

.btn-warning.active, .btn-warning:active, .open > .dropdown-toggle.btn-warn=
ing { color: rgb(255, 255, 255); background-color: rgb(236, 151, 31); borde=
r-color: rgb(213, 133, 18); }

.btn-warning.active.focus, .btn-warning.active:focus, .btn-warning.active:h=
over, .btn-warning.focus:active, .btn-warning:active:focus, .btn-warning:ac=
tive:hover, .open > .dropdown-toggle.btn-warning.focus, .open > .dropdown-t=
oggle.btn-warning:focus, .open > .dropdown-toggle.btn-warning:hover { color=
: rgb(255, 255, 255); background-color: rgb(213, 133, 18); border-color: rg=
b(152, 95, 13); }

.btn-warning.active, .btn-warning:active, .open > .dropdown-toggle.btn-warn=
ing { background-image: none; }

.btn-warning.disabled.focus, .btn-warning.disabled:focus, .btn-warning.disa=
bled:hover, .btn-warning.focus[disabled], .btn-warning[disabled]:focus, .bt=
n-warning[disabled]:hover, fieldset[disabled] .btn-warning.focus, fieldset[=
disabled] .btn-warning:focus, fieldset[disabled] .btn-warning:hover { backg=
round-color: rgb(240, 173, 78); border-color: rgb(238, 162, 54); }

.btn-warning .badge { color: rgb(240, 173, 78); background-color: rgb(255, =
255, 255); }

.btn-danger { color: rgb(255, 255, 255); background-color: rgb(217, 83, 79)=
; border-color: rgb(212, 63, 58); }

.btn-danger.focus, .btn-danger:focus { color: rgb(255, 255, 255); backgroun=
d-color: rgb(201, 48, 44); border-color: rgb(118, 28, 25); }

.btn-danger:hover { color: rgb(255, 255, 255); background-color: rgb(201, 4=
8, 44); border-color: rgb(172, 41, 37); }

.btn-danger.active, .btn-danger:active, .open > .dropdown-toggle.btn-danger=
 { color: rgb(255, 255, 255); background-color: rgb(201, 48, 44); border-co=
lor: rgb(172, 41, 37); }

.btn-danger.active.focus, .btn-danger.active:focus, .btn-danger.active:hove=
r, .btn-danger.focus:active, .btn-danger:active:focus, .btn-danger:active:h=
over, .open > .dropdown-toggle.btn-danger.focus, .open > .dropdown-toggle.b=
tn-danger:focus, .open > .dropdown-toggle.btn-danger:hover { color: rgb(255=
, 255, 255); background-color: rgb(172, 41, 37); border-color: rgb(118, 28,=
 25); }

.btn-danger.active, .btn-danger:active, .open > .dropdown-toggle.btn-danger=
 { background-image: none; }

.btn-danger.disabled.focus, .btn-danger.disabled:focus, .btn-danger.disable=
d:hover, .btn-danger.focus[disabled], .btn-danger[disabled]:focus, .btn-dan=
ger[disabled]:hover, fieldset[disabled] .btn-danger.focus, fieldset[disable=
d] .btn-danger:focus, fieldset[disabled] .btn-danger:hover { background-col=
or: rgb(217, 83, 79); border-color: rgb(212, 63, 58); }

.btn-danger .badge { color: rgb(217, 83, 79); background-color: rgb(255, 25=
5, 255); }

.btn-link { font-weight: 400; color: rgb(51, 122, 183); border-radius: 0px;=
 }

.btn-link, .btn-link.active, .btn-link:active, .btn-link[disabled], fieldse=
t[disabled] .btn-link { background-color: transparent; box-shadow: none; }

.btn-link, .btn-link:active, .btn-link:focus, .btn-link:hover { border-colo=
r: transparent; }

.btn-link:focus, .btn-link:hover { color: rgb(35, 82, 124); text-decoration=
: underline; background-color: transparent; }

.btn-link[disabled]:focus, .btn-link[disabled]:hover, fieldset[disabled] .b=
tn-link:focus, fieldset[disabled] .btn-link:hover { color: rgb(119, 119, 11=
9); text-decoration: none; }

.btn-group-lg > .btn, .btn-lg { padding: 10px 16px; font-size: 18px; line-h=
eight: 1.33333; border-radius: 6px; }

.btn-group-sm > .btn, .btn-sm { padding: 5px 10px; font-size: 12px; line-he=
ight: 1.5; border-radius: 3px; }

.btn-group-xs > .btn, .btn-xs { padding: 1px 5px; font-size: 12px; line-hei=
ght: 1.5; border-radius: 3px; }

.btn-block { display: block; width: 100%; }

.btn-block + .btn-block { margin-top: 5px; }

input.btn-block[type=3D"button"], input.btn-block[type=3D"reset"], input.bt=
n-block[type=3D"submit"] { width: 100%; }

.fade { opacity: 0; transition: opacity 0.15s linear 0s; }

.fade.in { opacity: 1; }

.collapse { display: none; }

.collapse.in { display: block; }

tr.collapse.in { display: table-row; }

tbody.collapse.in { display: table-row-group; }

.collapsing { position: relative; height: 0px; overflow: hidden; transition=
-timing-function: ease; transition-duration: 0.35s; transition-property: he=
ight, visibility; }

.caret { display: inline-block; width: 0px; height: 0px; margin-left: 2px; =
vertical-align: middle; border-top: 4px dashed; border-right: 4px solid tra=
nsparent; border-left: 4px solid transparent; }

.dropdown, .dropup { position: relative; }

.dropdown-toggle:focus { outline: 0px; }

.dropdown-menu { position: absolute; top: 100%; left: 0px; z-index: 1000; d=
isplay: none; float: left; min-width: 160px; padding: 5px 0px; margin: 2px =
0px 0px; font-size: 14px; text-align: left; list-style: none; background-co=
lor: rgb(255, 255, 255); background-clip: padding-box; border: 1px solid rg=
ba(0, 0, 0, 0.15); border-radius: 4px; box-shadow: rgba(0, 0, 0, 0.176) 0px=
 6px 12px; }

.dropdown-menu.pull-right { right: 0px; left: auto; }

.dropdown-menu .divider { height: 1px; margin: 9px 0px; overflow: hidden; b=
ackground-color: rgb(229, 229, 229); }

.dropdown-menu > li > a { display: block; padding: 3px 20px; clear: both; f=
ont-weight: 400; line-height: 1.42857; color: rgb(51, 51, 51); white-space:=
 nowrap; }

.dropdown-menu > li > a:focus, .dropdown-menu > li > a:hover { color: rgb(3=
8, 38, 38); text-decoration: none; background-color: rgb(245, 245, 245); }

.dropdown-menu > .active > a, .dropdown-menu > .active > a:focus, .dropdown=
-menu > .active > a:hover { color: rgb(255, 255, 255); text-decoration: non=
e; background-color: rgb(51, 122, 183); outline: 0px; }

.dropdown-menu > .disabled > a, .dropdown-menu > .disabled > a:focus, .drop=
down-menu > .disabled > a:hover { color: rgb(119, 119, 119); }

.dropdown-menu > .disabled > a:focus, .dropdown-menu > .disabled > a:hover =
{ text-decoration: none; cursor: not-allowed; background-color: transparent=
; background-image: none; }

.open > .dropdown-menu { display: block; }

.open > a { outline: 0px; }

.dropdown-menu-right { right: 0px; left: auto; }

.dropdown-menu-left { right: auto; left: 0px; }

.dropdown-header { display: block; padding: 3px 20px; font-size: 12px; line=
-height: 1.42857; color: rgb(119, 119, 119); white-space: nowrap; }

.dropdown-backdrop { position: fixed; inset: 0px; z-index: 990; }

.pull-right > .dropdown-menu { right: 0px; left: auto; }

.dropup .caret, .navbar-fixed-bottom .dropdown .caret { content: ""; border=
-top: 0px; border-bottom: 4px dashed; }

.dropup .dropdown-menu, .navbar-fixed-bottom .dropdown .dropdown-menu { top=
: auto; bottom: 100%; margin-bottom: 2px; }

@media (min-width: 768px) {
  .navbar-right .dropdown-menu { right: 0px; left: auto; }
  .navbar-right .dropdown-menu-left { right: auto; left: 0px; }
}

.btn-group, .btn-group-vertical { position: relative; display: inline-block=
; vertical-align: middle; }

.btn-group-vertical > .btn, .btn-group > .btn { position: relative; float: =
left; }

.btn-group-vertical > .btn.active, .btn-group-vertical > .btn:active, .btn-=
group-vertical > .btn:focus, .btn-group-vertical > .btn:hover, .btn-group >=
 .btn.active, .btn-group > .btn:active, .btn-group > .btn:focus, .btn-group=
 > .btn:hover { z-index: 2; }

.btn-group .btn + .btn, .btn-group .btn + .btn-group, .btn-group .btn-group=
 + .btn, .btn-group .btn-group + .btn-group { margin-left: -1px; }

.btn-toolbar { margin-left: -5px; }

.btn-toolbar .btn, .btn-toolbar .btn-group, .btn-toolbar .input-group { flo=
at: left; }

.btn-toolbar > .btn, .btn-toolbar > .btn-group, .btn-toolbar > .input-group=
 { margin-left: 5px; }

.btn-group > .btn:not(:first-child):not(:last-child):not(.dropdown-toggle) =
{ border-radius: 0px; }

.btn-group > .btn:first-child { margin-left: 0px; }

.btn-group > .btn:first-child:not(:last-child):not(.dropdown-toggle) { bord=
er-top-right-radius: 0px; border-bottom-right-radius: 0px; }

.btn-group > .btn:last-child:not(:first-child), .btn-group > .dropdown-togg=
le:not(:first-child) { border-top-left-radius: 0px; border-bottom-left-radi=
us: 0px; }

.btn-group > .btn-group { float: left; }

.btn-group > .btn-group:not(:first-child):not(:last-child) > .btn { border-=
radius: 0px; }

.btn-group > .btn-group:first-child:not(:last-child) > .btn:last-child, .bt=
n-group > .btn-group:first-child:not(:last-child) > .dropdown-toggle { bord=
er-top-right-radius: 0px; border-bottom-right-radius: 0px; }

.btn-group > .btn-group:last-child:not(:first-child) > .btn:first-child { b=
order-top-left-radius: 0px; border-bottom-left-radius: 0px; }

.btn-group .dropdown-toggle:active, .btn-group.open .dropdown-toggle { outl=
ine: 0px; }

.btn-group > .btn + .dropdown-toggle { padding-right: 8px; padding-left: 8p=
x; }

.btn-group > .btn-lg + .dropdown-toggle { padding-right: 12px; padding-left=
: 12px; }

.btn-group.open .dropdown-toggle { box-shadow: rgba(0, 0, 0, 0.125) 0px 3px=
 5px inset; }

.btn-group.open .dropdown-toggle.btn-link { box-shadow: none; }

.btn .caret { margin-left: 0px; }

.btn-lg .caret { border-width: 5px 5px 0px; }

.dropup .btn-lg .caret { border-width: 0px 5px 5px; }

.btn-group-vertical > .btn, .btn-group-vertical > .btn-group, .btn-group-ve=
rtical > .btn-group > .btn { display: block; float: none; width: 100%; max-=
width: 100%; }

.btn-group-vertical > .btn-group > .btn { float: none; }

.btn-group-vertical > .btn + .btn, .btn-group-vertical > .btn + .btn-group,=
 .btn-group-vertical > .btn-group + .btn, .btn-group-vertical > .btn-group =
+ .btn-group { margin-top: -1px; margin-left: 0px; }

.btn-group-vertical > .btn:not(:first-child):not(:last-child) { border-radi=
us: 0px; }

.btn-group-vertical > .btn:first-child:not(:last-child) { border-radius: 4p=
x 4px 0px 0px; }

.btn-group-vertical > .btn:last-child:not(:first-child) { border-radius: 0p=
x 0px 4px 4px; }

.btn-group-vertical > .btn-group:not(:first-child):not(:last-child) > .btn =
{ border-radius: 0px; }

.btn-group-vertical > .btn-group:first-child:not(:last-child) > .btn:last-c=
hild, .btn-group-vertical > .btn-group:first-child:not(:last-child) > .drop=
down-toggle { border-bottom-right-radius: 0px; border-bottom-left-radius: 0=
px; }

.btn-group-vertical > .btn-group:last-child:not(:first-child) > .btn:first-=
child { border-top-left-radius: 0px; border-top-right-radius: 0px; }

.btn-group-justified { display: table; width: 100%; table-layout: fixed; bo=
rder-collapse: separate; }

.btn-group-justified > .btn, .btn-group-justified > .btn-group { display: t=
able-cell; float: none; width: 1%; }

.btn-group-justified > .btn-group .btn { width: 100%; }

.btn-group-justified > .btn-group .dropdown-menu { left: auto; }

[data-toggle=3D"buttons"] > .btn input[type=3D"checkbox"], [data-toggle=3D"=
buttons"] > .btn input[type=3D"radio"], [data-toggle=3D"buttons"] > .btn-gr=
oup > .btn input[type=3D"checkbox"], [data-toggle=3D"buttons"] > .btn-group=
 > .btn input[type=3D"radio"] { position: absolute; clip: rect(0px, 0px, 0p=
x, 0px); pointer-events: none; }

.input-group { position: relative; display: table; border-collapse: separat=
e; }

.input-group[class*=3D"col-"] { float: none; padding-right: 0px; padding-le=
ft: 0px; }

.input-group .form-control { position: relative; z-index: 2; float: left; w=
idth: 100%; margin-bottom: 0px; }

.input-group .form-control:focus { z-index: 3; }

.input-group-lg > .form-control, .input-group-lg > .input-group-addon, .inp=
ut-group-lg > .input-group-btn > .btn { height: 46px; padding: 10px 16px; f=
ont-size: 18px; line-height: 1.33333; border-radius: 6px; }

select.input-group-lg > .form-control, select.input-group-lg > .input-group=
-addon, select.input-group-lg > .input-group-btn > .btn { height: 46px; lin=
e-height: 46px; }

select.input-group-lg[multiple] > .form-control, select.input-group-lg[mult=
iple] > .input-group-addon, select.input-group-lg[multiple] > .input-group-=
btn > .btn, textarea.input-group-lg > .form-control, textarea.input-group-l=
g > .input-group-addon, textarea.input-group-lg > .input-group-btn > .btn {=
 height: auto; }

.input-group-sm > .form-control, .input-group-sm > .input-group-addon, .inp=
ut-group-sm > .input-group-btn > .btn { height: 30px; padding: 5px 10px; fo=
nt-size: 12px; line-height: 1.5; border-radius: 3px; }

select.input-group-sm > .form-control, select.input-group-sm > .input-group=
-addon, select.input-group-sm > .input-group-btn > .btn { height: 30px; lin=
e-height: 30px; }

select.input-group-sm[multiple] > .form-control, select.input-group-sm[mult=
iple] > .input-group-addon, select.input-group-sm[multiple] > .input-group-=
btn > .btn, textarea.input-group-sm > .form-control, textarea.input-group-s=
m > .input-group-addon, textarea.input-group-sm > .input-group-btn > .btn {=
 height: auto; }

.input-group .form-control, .input-group-addon, .input-group-btn { display:=
 table-cell; }

.input-group .form-control:not(:first-child):not(:last-child), .input-group=
-addon:not(:first-child):not(:last-child), .input-group-btn:not(:first-chil=
d):not(:last-child) { border-radius: 0px; }

.input-group-addon, .input-group-btn { width: 1%; white-space: nowrap; vert=
ical-align: middle; }

.input-group-addon { padding: 6px 12px; font-size: 14px; font-weight: 400; =
line-height: 1; color: rgb(85, 85, 85); text-align: center; background-colo=
r: rgb(238, 238, 238); border: 1px solid rgb(204, 204, 204); border-radius:=
 4px; }

.input-group-addon.input-sm { padding: 5px 10px; font-size: 12px; border-ra=
dius: 3px; }

.input-group-addon.input-lg { padding: 10px 16px; font-size: 18px; border-r=
adius: 6px; }

.input-group-addon input[type=3D"checkbox"], .input-group-addon input[type=
=3D"radio"] { margin-top: 0px; }

.input-group .form-control:first-child, .input-group-addon:first-child, .in=
put-group-btn:first-child > .btn, .input-group-btn:first-child > .btn-group=
 > .btn, .input-group-btn:first-child > .dropdown-toggle, .input-group-btn:=
last-child > .btn-group:not(:last-child) > .btn, .input-group-btn:last-chil=
d > .btn:not(:last-child):not(.dropdown-toggle) { border-top-right-radius: =
0px; border-bottom-right-radius: 0px; }

.input-group-addon:first-child { border-right: 0px; }

.input-group .form-control:last-child, .input-group-addon:last-child, .inpu=
t-group-btn:first-child > .btn-group:not(:first-child) > .btn, .input-group=
-btn:first-child > .btn:not(:first-child), .input-group-btn:last-child > .b=
tn, .input-group-btn:last-child > .btn-group > .btn, .input-group-btn:last-=
child > .dropdown-toggle { border-top-left-radius: 0px; border-bottom-left-=
radius: 0px; }

.input-group-addon:last-child { border-left: 0px; }

.input-group-btn { position: relative; font-size: 0px; white-space: nowrap;=
 }

.input-group-btn > .btn { position: relative; }

.input-group-btn > .btn + .btn { margin-left: -1px; }

.input-group-btn > .btn:active, .input-group-btn > .btn:focus, .input-group=
-btn > .btn:hover { z-index: 2; }

.input-group-btn:first-child > .btn, .input-group-btn:first-child > .btn-gr=
oup { margin-right: -1px; }

.input-group-btn:last-child > .btn, .input-group-btn:last-child > .btn-grou=
p { z-index: 2; margin-left: -1px; }

.nav { padding-left: 0px; margin-bottom: 0px; list-style: none; }

.nav > li { position: relative; display: block; }

.nav > li > a { position: relative; display: block; padding: 10px 15px; }

.nav > li > a:focus, .nav > li > a:hover { text-decoration: none; backgroun=
d-color: rgb(238, 238, 238); }

.nav > li.disabled > a { color: rgb(119, 119, 119); }

.nav > li.disabled > a:focus, .nav > li.disabled > a:hover { color: rgb(119=
, 119, 119); text-decoration: none; cursor: not-allowed; background-color: =
transparent; }

.nav .open > a, .nav .open > a:focus, .nav .open > a:hover { background-col=
or: rgb(238, 238, 238); border-color: rgb(51, 122, 183); }

.nav .nav-divider { height: 1px; margin: 9px 0px; overflow: hidden; backgro=
und-color: rgb(229, 229, 229); }

.nav > li > a > img { max-width: none; }

.nav-tabs { border-bottom: 1px solid rgb(221, 221, 221); }

.nav-tabs > li { float: left; margin-bottom: -1px; }

.nav-tabs > li > a { margin-right: 2px; line-height: 1.42857; border: 1px s=
olid transparent; border-radius: 4px 4px 0px 0px; }

.nav-tabs > li > a:hover { border-color: rgb(238, 238, 238) rgb(238, 238, 2=
38) rgb(221, 221, 221); }

.nav-tabs > li.active > a, .nav-tabs > li.active > a:focus, .nav-tabs > li.=
active > a:hover { color: rgb(85, 85, 85); cursor: default; background-colo=
r: rgb(255, 255, 255); border-width: 1px; border-style: solid; border-color=
: rgb(221, 221, 221) rgb(221, 221, 221) transparent; border-image: initial;=
 }

.nav-tabs.nav-justified { width: 100%; border-bottom: 0px; }

.nav-tabs.nav-justified > li { float: none; }

.nav-tabs.nav-justified > li > a { margin-bottom: 5px; text-align: center; =
}

.nav-tabs.nav-justified > .dropdown .dropdown-menu { top: auto; left: auto;=
 }

@media (min-width: 768px) {
  .nav-tabs.nav-justified > li { display: table-cell; width: 1%; }
  .nav-tabs.nav-justified > li > a { margin-bottom: 0px; }
}

.nav-tabs.nav-justified > li > a { margin-right: 0px; border-radius: 4px; }

.nav-tabs.nav-justified > .active > a, .nav-tabs.nav-justified > .active > =
a:focus, .nav-tabs.nav-justified > .active > a:hover { border: 1px solid rg=
b(221, 221, 221); }

@media (min-width: 768px) {
  .nav-tabs.nav-justified > li > a { border-bottom: 1px solid rgb(221, 221,=
 221); border-radius: 4px 4px 0px 0px; }
  .nav-tabs.nav-justified > .active > a, .nav-tabs.nav-justified > .active =
> a:focus, .nav-tabs.nav-justified > .active > a:hover { border-bottom-colo=
r: rgb(255, 255, 255); }
}

.nav-pills > li { float: left; }

.nav-pills > li > a { border-radius: 4px; }

.nav-pills > li + li { margin-left: 2px; }

.nav-pills > li.active > a, .nav-pills > li.active > a:focus, .nav-pills > =
li.active > a:hover { color: rgb(255, 255, 255); background-color: rgb(51, =
122, 183); }

.nav-stacked > li { float: none; }

.nav-stacked > li + li { margin-top: 2px; margin-left: 0px; }

.nav-justified { width: 100%; }

.nav-justified > li { float: none; }

.nav-justified > li > a { margin-bottom: 5px; text-align: center; }

.nav-justified > .dropdown .dropdown-menu { top: auto; left: auto; }

@media (min-width: 768px) {
  .nav-justified > li { display: table-cell; width: 1%; }
  .nav-justified > li > a { margin-bottom: 0px; }
}

.nav-tabs-justified { border-bottom: 0px; }

.nav-tabs-justified > li > a { margin-right: 0px; border-radius: 4px; }

.nav-tabs-justified > .active > a, .nav-tabs-justified > .active > a:focus,=
 .nav-tabs-justified > .active > a:hover { border: 1px solid rgb(221, 221, =
221); }

@media (min-width: 768px) {
  .nav-tabs-justified > li > a { border-bottom: 1px solid rgb(221, 221, 221=
); border-radius: 4px 4px 0px 0px; }
  .nav-tabs-justified > .active > a, .nav-tabs-justified > .active > a:focu=
s, .nav-tabs-justified > .active > a:hover { border-bottom-color: rgb(255, =
255, 255); }
}

.tab-content > .tab-pane { display: none; }

.tab-content > .active { display: block; }

.nav-tabs .dropdown-menu { margin-top: -1px; border-top-left-radius: 0px; b=
order-top-right-radius: 0px; }

.navbar { position: relative; min-height: 50px; margin-bottom: 20px; border=
: 1px solid transparent; }

@media (min-width: 768px) {
  .navbar { border-radius: 4px; }
}

@media (min-width: 768px) {
  .navbar-header { float: left; }
}

.navbar-collapse { padding-right: 15px; padding-left: 15px; overflow-x: vis=
ible; border-top: 1px solid transparent; box-shadow: rgba(255, 255, 255, 0.=
1) 0px 1px 0px inset; }

.navbar-collapse.in { overflow-y: auto; }

@media (min-width: 768px) {
  .navbar-collapse { width: auto; border-top: 0px; box-shadow: none; }
  .navbar-collapse.collapse { padding-bottom: 0px; display: block !importan=
t; height: auto !important; overflow: visible !important; }
  .navbar-collapse.in { overflow-y: visible; }
  .navbar-fixed-bottom .navbar-collapse, .navbar-fixed-top .navbar-collapse=
, .navbar-static-top .navbar-collapse { padding-right: 0px; padding-left: 0=
px; }
}

.navbar-fixed-bottom .navbar-collapse, .navbar-fixed-top .navbar-collapse {=
 max-height: 340px; }

@media (max-device-width: 480px) and (orientation: landscape) {
  .navbar-fixed-bottom .navbar-collapse, .navbar-fixed-top .navbar-collapse=
 { max-height: 200px; }
}

.container-fluid > .navbar-collapse, .container-fluid > .navbar-header, .co=
ntainer > .navbar-collapse, .container > .navbar-header { margin-right: -15=
px; margin-left: -15px; }

@media (min-width: 768px) {
  .container-fluid > .navbar-collapse, .container-fluid > .navbar-header, .=
container > .navbar-collapse, .container > .navbar-header { margin-right: 0=
px; margin-left: 0px; }
}

.navbar-static-top { z-index: 1000; border-width: 0px 0px 1px; }

@media (min-width: 768px) {
  .navbar-static-top { border-radius: 0px; }
}

.navbar-fixed-bottom, .navbar-fixed-top { position: fixed; right: 0px; left=
: 0px; z-index: 1030; }

@media (min-width: 768px) {
  .navbar-fixed-bottom, .navbar-fixed-top { border-radius: 0px; }
}

.navbar-fixed-top { top: 0px; border-width: 0px 0px 1px; }

.navbar-fixed-bottom { bottom: 0px; margin-bottom: 0px; border-width: 1px 0=
px 0px; }

.navbar-brand { float: left; height: 50px; padding: 15px; font-size: 18px; =
line-height: 20px; }

.navbar-brand:focus, .navbar-brand:hover { text-decoration: none; }

.navbar-brand > img { display: block; }

@media (min-width: 768px) {
  .navbar > .container .navbar-brand, .navbar > .container-fluid .navbar-br=
and { margin-left: -15px; }
}

.navbar-toggle { position: relative; float: right; padding: 9px 10px; margi=
n-top: 8px; margin-right: 15px; margin-bottom: 8px; background-color: trans=
parent; background-image: none; border: 1px solid transparent; border-radiu=
s: 4px; }

.navbar-toggle:focus { outline: 0px; }

.navbar-toggle .icon-bar { display: block; width: 22px; height: 2px; border=
-radius: 1px; }

.navbar-toggle .icon-bar + .icon-bar { margin-top: 4px; }

@media (min-width: 768px) {
  .navbar-toggle { display: none; }
}

.navbar-nav { margin: 7.5px -15px; }

.navbar-nav > li > a { padding-top: 10px; padding-bottom: 10px; line-height=
: 20px; }

@media (max-width: 767px) {
  .navbar-nav .open .dropdown-menu { position: static; float: none; width: =
auto; margin-top: 0px; background-color: transparent; border: 0px; box-shad=
ow: none; }
  .navbar-nav .open .dropdown-menu .dropdown-header, .navbar-nav .open .dro=
pdown-menu > li > a { padding: 5px 15px 5px 25px; }
  .navbar-nav .open .dropdown-menu > li > a { line-height: 20px; }
  .navbar-nav .open .dropdown-menu > li > a:focus, .navbar-nav .open .dropd=
own-menu > li > a:hover { background-image: none; }
}

@media (min-width: 768px) {
  .navbar-nav { float: left; margin: 0px; }
  .navbar-nav > li { float: left; }
  .navbar-nav > li > a { padding-top: 15px; padding-bottom: 15px; }
}

.navbar-form { padding: 10px 15px; margin: 8px -15px; border-top: 1px solid=
 transparent; border-bottom: 1px solid transparent; box-shadow: rgba(255, 2=
55, 255, 0.1) 0px 1px 0px inset, rgba(255, 255, 255, 0.1) 0px 1px 0px; }

@media (min-width: 768px) {
  .navbar-form .form-group { display: inline-block; margin-bottom: 0px; ver=
tical-align: middle; }
  .navbar-form .form-control { display: inline-block; width: auto; vertical=
-align: middle; }
  .navbar-form .form-control-static { display: inline-block; }
  .navbar-form .input-group { display: inline-table; vertical-align: middle=
; }
  .navbar-form .input-group .form-control, .navbar-form .input-group .input=
-group-addon, .navbar-form .input-group .input-group-btn { width: auto; }
  .navbar-form .input-group > .form-control { width: 100%; }
  .navbar-form .control-label { margin-bottom: 0px; vertical-align: middle;=
 }
  .navbar-form .checkbox, .navbar-form .radio { display: inline-block; marg=
in-top: 0px; margin-bottom: 0px; vertical-align: middle; }
  .navbar-form .checkbox label, .navbar-form .radio label { padding-left: 0=
px; }
  .navbar-form .checkbox input[type=3D"checkbox"], .navbar-form .radio inpu=
t[type=3D"radio"] { position: relative; margin-left: 0px; }
  .navbar-form .has-feedback .form-control-feedback { top: 0px; }
}

@media (max-width: 767px) {
  .navbar-form .form-group { margin-bottom: 5px; }
  .navbar-form .form-group:last-child { margin-bottom: 0px; }
}

@media (min-width: 768px) {
  .navbar-form { width: auto; padding-top: 0px; padding-bottom: 0px; margin=
-right: 0px; margin-left: 0px; border: 0px; box-shadow: none; }
}

.navbar-nav > li > .dropdown-menu { margin-top: 0px; border-top-left-radius=
: 0px; border-top-right-radius: 0px; }

.navbar-fixed-bottom .navbar-nav > li > .dropdown-menu { margin-bottom: 0px=
; border-radius: 4px 4px 0px 0px; }

.navbar-btn { margin-top: 8px; margin-bottom: 8px; }

.navbar-btn.btn-sm { margin-top: 10px; margin-bottom: 10px; }

.navbar-btn.btn-xs { margin-top: 14px; margin-bottom: 14px; }

.navbar-text { margin-top: 15px; margin-bottom: 15px; }

@media (min-width: 768px) {
  .navbar-text { float: left; margin-right: 15px; margin-left: 15px; }
}

@media (min-width: 768px) {
  .navbar-left { float: left !important; }
  .navbar-right { margin-right: -15px; float: right !important; }
  .navbar-right ~ .navbar-right { margin-right: 0px; }
}

.navbar-default { background-color: rgb(248, 248, 248); border-color: rgb(2=
31, 231, 231); }

.navbar-default .navbar-brand { color: rgb(119, 119, 119); }

.navbar-default .navbar-brand:focus, .navbar-default .navbar-brand:hover { =
color: rgb(94, 94, 94); background-color: transparent; }

.navbar-default .navbar-text { color: rgb(119, 119, 119); }

.navbar-default .navbar-nav > li > a { color: rgb(119, 119, 119); }

.navbar-default .navbar-nav > li > a:focus, .navbar-default .navbar-nav > l=
i > a:hover { color: rgb(51, 51, 51); background-color: transparent; }

.navbar-default .navbar-nav > .active > a, .navbar-default .navbar-nav > .a=
ctive > a:focus, .navbar-default .navbar-nav > .active > a:hover { color: r=
gb(85, 85, 85); background-color: rgb(231, 231, 231); }

.navbar-default .navbar-nav > .disabled > a, .navbar-default .navbar-nav > =
.disabled > a:focus, .navbar-default .navbar-nav > .disabled > a:hover { co=
lor: rgb(204, 204, 204); background-color: transparent; }

.navbar-default .navbar-toggle { border-color: rgb(221, 221, 221); }

.navbar-default .navbar-toggle:focus, .navbar-default .navbar-toggle:hover =
{ background-color: rgb(221, 221, 221); }

.navbar-default .navbar-toggle .icon-bar { background-color: rgb(136, 136, =
136); }

.navbar-default .navbar-collapse, .navbar-default .navbar-form { border-col=
or: rgb(231, 231, 231); }

.navbar-default .navbar-nav > .open > a, .navbar-default .navbar-nav > .ope=
n > a:focus, .navbar-default .navbar-nav > .open > a:hover { color: rgb(85,=
 85, 85); background-color: rgb(231, 231, 231); }

@media (max-width: 767px) {
  .navbar-default .navbar-nav .open .dropdown-menu > li > a { color: rgb(11=
9, 119, 119); }
  .navbar-default .navbar-nav .open .dropdown-menu > li > a:focus, .navbar-=
default .navbar-nav .open .dropdown-menu > li > a:hover { color: rgb(51, 51=
, 51); background-color: transparent; }
  .navbar-default .navbar-nav .open .dropdown-menu > .active > a, .navbar-d=
efault .navbar-nav .open .dropdown-menu > .active > a:focus, .navbar-defaul=
t .navbar-nav .open .dropdown-menu > .active > a:hover { color: rgb(85, 85,=
 85); background-color: rgb(231, 231, 231); }
  .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a, .navbar=
-default .navbar-nav .open .dropdown-menu > .disabled > a:focus, .navbar-de=
fault .navbar-nav .open .dropdown-menu > .disabled > a:hover { color: rgb(2=
04, 204, 204); background-color: transparent; }
}

.navbar-default .navbar-link { color: rgb(119, 119, 119); }

.navbar-default .navbar-link:hover { color: rgb(51, 51, 51); }

.navbar-default .btn-link { color: rgb(119, 119, 119); }

.navbar-default .btn-link:focus, .navbar-default .btn-link:hover { color: r=
gb(51, 51, 51); }

.navbar-default .btn-link[disabled]:focus, .navbar-default .btn-link[disabl=
ed]:hover, fieldset[disabled] .navbar-default .btn-link:focus, fieldset[dis=
abled] .navbar-default .btn-link:hover { color: rgb(204, 204, 204); }

.navbar-inverse { background-color: rgb(34, 34, 34); border-color: rgb(8, 8=
, 8); }

.navbar-inverse .navbar-brand { color: rgb(157, 157, 157); }

.navbar-inverse .navbar-brand:focus, .navbar-inverse .navbar-brand:hover { =
color: rgb(255, 255, 255); background-color: transparent; }

.navbar-inverse .navbar-text { color: rgb(157, 157, 157); }

.navbar-inverse .navbar-nav > li > a { color: rgb(157, 157, 157); }

.navbar-inverse .navbar-nav > li > a:focus, .navbar-inverse .navbar-nav > l=
i > a:hover { color: rgb(255, 255, 255); background-color: transparent; }

.navbar-inverse .navbar-nav > .active > a, .navbar-inverse .navbar-nav > .a=
ctive > a:focus, .navbar-inverse .navbar-nav > .active > a:hover { color: r=
gb(255, 255, 255); background-color: rgb(8, 8, 8); }

.navbar-inverse .navbar-nav > .disabled > a, .navbar-inverse .navbar-nav > =
.disabled > a:focus, .navbar-inverse .navbar-nav > .disabled > a:hover { co=
lor: rgb(68, 68, 68); background-color: transparent; }

.navbar-inverse .navbar-toggle { border-color: rgb(51, 51, 51); }

.navbar-inverse .navbar-toggle:focus, .navbar-inverse .navbar-toggle:hover =
{ background-color: rgb(51, 51, 51); }

.navbar-inverse .navbar-toggle .icon-bar { background-color: rgb(255, 255, =
255); }

.navbar-inverse .navbar-collapse, .navbar-inverse .navbar-form { border-col=
or: rgb(16, 16, 16); }

.navbar-inverse .navbar-nav > .open > a, .navbar-inverse .navbar-nav > .ope=
n > a:focus, .navbar-inverse .navbar-nav > .open > a:hover { color: rgb(255=
, 255, 255); background-color: rgb(8, 8, 8); }

@media (max-width: 767px) {
  .navbar-inverse .navbar-nav .open .dropdown-menu > .dropdown-header { bor=
der-color: rgb(8, 8, 8); }
  .navbar-inverse .navbar-nav .open .dropdown-menu .divider { background-co=
lor: rgb(8, 8, 8); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a { color: rgb(15=
7, 157, 157); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a:focus, .navbar-=
inverse .navbar-nav .open .dropdown-menu > li > a:hover { color: rgb(255, 2=
55, 255); background-color: transparent; }
  .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a, .navbar-i=
nverse .navbar-nav .open .dropdown-menu > .active > a:focus, .navbar-invers=
e .navbar-nav .open .dropdown-menu > .active > a:hover { color: rgb(255, 25=
5, 255); background-color: rgb(8, 8, 8); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a, .navbar=
-inverse .navbar-nav .open .dropdown-menu > .disabled > a:focus, .navbar-in=
verse .navbar-nav .open .dropdown-menu > .disabled > a:hover { color: rgb(6=
8, 68, 68); background-color: transparent; }
}

.navbar-inverse .navbar-link { color: rgb(157, 157, 157); }

.navbar-inverse .navbar-link:hover { color: rgb(255, 255, 255); }

.navbar-inverse .btn-link { color: rgb(157, 157, 157); }

.navbar-inverse .btn-link:focus, .navbar-inverse .btn-link:hover { color: r=
gb(255, 255, 255); }

.navbar-inverse .btn-link[disabled]:focus, .navbar-inverse .btn-link[disabl=
ed]:hover, fieldset[disabled] .navbar-inverse .btn-link:focus, fieldset[dis=
abled] .navbar-inverse .btn-link:hover { color: rgb(68, 68, 68); }

.breadcrumb { padding: 8px 15px; margin-bottom: 20px; list-style: none; bac=
kground-color: rgb(245, 245, 245); border-radius: 4px; }

.breadcrumb > li { display: inline-block; }

.breadcrumb > li + li::before { padding: 0px 5px; color: rgb(204, 204, 204)=
; content: "/=C2=A0"; }

.breadcrumb > .active { color: rgb(119, 119, 119); }

.pagination { display: inline-block; padding-left: 0px; margin: 20px 0px; b=
order-radius: 4px; }

.pagination > li { display: inline; }

.pagination > li > a, .pagination > li > span { position: relative; float: =
left; padding: 6px 12px; margin-left: -1px; line-height: 1.42857; color: rg=
b(51, 122, 183); text-decoration: none; background-color: rgb(255, 255, 255=
); border: 1px solid rgb(221, 221, 221); }

.pagination > li:first-child > a, .pagination > li:first-child > span { mar=
gin-left: 0px; border-top-left-radius: 4px; border-bottom-left-radius: 4px;=
 }

.pagination > li:last-child > a, .pagination > li:last-child > span { borde=
r-top-right-radius: 4px; border-bottom-right-radius: 4px; }

.pagination > li > a:focus, .pagination > li > a:hover, .pagination > li > =
span:focus, .pagination > li > span:hover { z-index: 2; color: rgb(35, 82, =
124); background-color: rgb(238, 238, 238); border-color: rgb(221, 221, 221=
); }

.pagination > .active > a, .pagination > .active > a:focus, .pagination > .=
active > a:hover, .pagination > .active > span, .pagination > .active > spa=
n:focus, .pagination > .active > span:hover { z-index: 3; color: rgb(255, 2=
55, 255); cursor: default; background-color: rgb(51, 122, 183); border-colo=
r: rgb(51, 122, 183); }

.pagination > .disabled > a, .pagination > .disabled > a:focus, .pagination=
 > .disabled > a:hover, .pagination > .disabled > span, .pagination > .disa=
bled > span:focus, .pagination > .disabled > span:hover { color: rgb(119, 1=
19, 119); cursor: not-allowed; background-color: rgb(255, 255, 255); border=
-color: rgb(221, 221, 221); }

.pagination-lg > li > a, .pagination-lg > li > span { padding: 10px 16px; f=
ont-size: 18px; line-height: 1.33333; }

.pagination-lg > li:first-child > a, .pagination-lg > li:first-child > span=
 { border-top-left-radius: 6px; border-bottom-left-radius: 6px; }

.pagination-lg > li:last-child > a, .pagination-lg > li:last-child > span {=
 border-top-right-radius: 6px; border-bottom-right-radius: 6px; }

.pagination-sm > li > a, .pagination-sm > li > span { padding: 5px 10px; fo=
nt-size: 12px; line-height: 1.5; }

.pagination-sm > li:first-child > a, .pagination-sm > li:first-child > span=
 { border-top-left-radius: 3px; border-bottom-left-radius: 3px; }

.pagination-sm > li:last-child > a, .pagination-sm > li:last-child > span {=
 border-top-right-radius: 3px; border-bottom-right-radius: 3px; }

.pager { padding-left: 0px; margin: 20px 0px; text-align: center; list-styl=
e: none; }

.pager li { display: inline; }

.pager li > a, .pager li > span { display: inline-block; padding: 5px 14px;=
 background-color: rgb(255, 255, 255); border: 1px solid rgb(221, 221, 221)=
; border-radius: 15px; }

.pager li > a:focus, .pager li > a:hover { text-decoration: none; backgroun=
d-color: rgb(238, 238, 238); }

.pager .next > a, .pager .next > span { float: right; }

.pager .previous > a, .pager .previous > span { float: left; }

.pager .disabled > a, .pager .disabled > a:focus, .pager .disabled > a:hove=
r, .pager .disabled > span { color: rgb(119, 119, 119); cursor: not-allowed=
; background-color: rgb(255, 255, 255); }

.label { display: inline; padding: 0.2em 0.6em 0.3em; font-size: 75%; font-=
weight: 700; line-height: 1; color: rgb(255, 255, 255); text-align: center;=
 white-space: nowrap; vertical-align: baseline; border-radius: 0.25em; }

a.label:focus, a.label:hover { color: rgb(255, 255, 255); text-decoration: =
none; cursor: pointer; }

.label:empty { display: none; }

.btn .label { position: relative; top: -1px; }

.label-default { background-color: rgb(119, 119, 119); }

.label-default[href]:focus, .label-default[href]:hover { background-color: =
rgb(94, 94, 94); }

.label-primary { background-color: rgb(51, 122, 183); }

.label-primary[href]:focus, .label-primary[href]:hover { background-color: =
rgb(40, 96, 144); }

.label-success { background-color: rgb(92, 184, 92); }

.label-success[href]:focus, .label-success[href]:hover { background-color: =
rgb(68, 157, 68); }

.label-info { background-color: rgb(91, 192, 222); }

.label-info[href]:focus, .label-info[href]:hover { background-color: rgb(49=
, 176, 213); }

.label-warning { background-color: rgb(240, 173, 78); }

.label-warning[href]:focus, .label-warning[href]:hover { background-color: =
rgb(236, 151, 31); }

.label-danger { background-color: rgb(217, 83, 79); }

.label-danger[href]:focus, .label-danger[href]:hover { background-color: rg=
b(201, 48, 44); }

.badge { display: inline-block; min-width: 10px; padding: 3px 7px; font-siz=
e: 12px; font-weight: 700; line-height: 1; color: rgb(255, 255, 255); text-=
align: center; white-space: nowrap; vertical-align: middle; background-colo=
r: rgb(119, 119, 119); border-radius: 10px; }

.badge:empty { display: none; }

.btn .badge { position: relative; top: -1px; }

.btn-group-xs > .btn .badge, .btn-xs .badge { top: 0px; padding: 1px 5px; }

a.badge:focus, a.badge:hover { color: rgb(255, 255, 255); text-decoration: =
none; cursor: pointer; }

.list-group-item.active > .badge, .nav-pills > .active > a > .badge { color=
: rgb(51, 122, 183); background-color: rgb(255, 255, 255); }

.list-group-item > .badge { float: right; }

.list-group-item > .badge + .badge { margin-right: 5px; }

.nav-pills > li > a > .badge { margin-left: 3px; }

.jumbotron { padding-top: 30px; padding-bottom: 30px; margin-bottom: 30px; =
color: inherit; background-color: rgb(238, 238, 238); }

.jumbotron .h1, .jumbotron h1 { color: inherit; }

.jumbotron p { margin-bottom: 15px; font-size: 21px; font-weight: 200; }

.jumbotron > hr { border-top-color: rgb(213, 213, 213); }

.container .jumbotron, .container-fluid .jumbotron { padding-right: 15px; p=
adding-left: 15px; border-radius: 6px; }

.jumbotron .container { max-width: 100%; }

@media screen and (min-width: 768px) {
  .jumbotron { padding-top: 48px; padding-bottom: 48px; }
  .container .jumbotron, .container-fluid .jumbotron { padding-right: 60px;=
 padding-left: 60px; }
  .jumbotron .h1, .jumbotron h1 { font-size: 63px; }
}

.thumbnail { display: block; padding: 4px; margin-bottom: 20px; line-height=
: 1.42857; background-color: rgb(255, 255, 255); border: 1px solid rgb(221,=
 221, 221); border-radius: 4px; transition: border 0.2s ease-in-out 0s; }

.thumbnail a > img, .thumbnail > img { margin-right: auto; margin-left: aut=
o; }

a.thumbnail.active, a.thumbnail:focus, a.thumbnail:hover { border-color: rg=
b(51, 122, 183); }

.thumbnail .caption { padding: 9px; color: rgb(51, 51, 51); }

.alert { padding: 15px; margin-bottom: 20px; border: 1px solid transparent;=
 border-radius: 4px; }

.alert h4 { margin-top: 0px; color: inherit; }

.alert .alert-link { font-weight: 700; }

.alert > p, .alert > ul { margin-bottom: 0px; }

.alert > p + p { margin-top: 5px; }

.alert-dismissable, .alert-dismissible { padding-right: 35px; }

.alert-dismissable .close, .alert-dismissible .close { position: relative; =
top: -2px; right: -21px; color: inherit; }

.alert-success { color: rgb(60, 118, 61); background-color: rgb(223, 240, 2=
16); border-color: rgb(214, 233, 198); }

.alert-success hr { border-top-color: rgb(201, 226, 179); }

.alert-success .alert-link { color: rgb(43, 84, 44); }

.alert-info { color: rgb(49, 112, 143); background-color: rgb(217, 237, 247=
); border-color: rgb(188, 232, 241); }

.alert-info hr { border-top-color: rgb(166, 225, 236); }

.alert-info .alert-link { color: rgb(36, 82, 105); }

.alert-warning { color: rgb(138, 109, 59); background-color: rgb(252, 248, =
227); border-color: rgb(250, 235, 204); }

.alert-warning hr { border-top-color: rgb(247, 225, 181); }

.alert-warning .alert-link { color: rgb(102, 81, 44); }

.alert-danger { color: rgb(169, 68, 66); background-color: rgb(242, 222, 22=
2); border-color: rgb(235, 204, 209); }

.alert-danger hr { border-top-color: rgb(228, 185, 192); }

.alert-danger .alert-link { color: rgb(132, 53, 52); }

@-webkit-keyframes progress-bar-stripes {=20
  0% { background-position: 40px 0px; }
  100% { background-position: 0px 0px; }
}

@keyframes progress-bar-stripes {=20
  0% { background-position: 40px 0px; }
  100% { background-position: 0px 0px; }
}

.progress { height: 20px; margin-bottom: 20px; overflow: hidden; background=
-color: rgb(245, 245, 245); border-radius: 4px; box-shadow: rgba(0, 0, 0, 0=
.1) 0px 1px 2px inset; }

.progress-bar { float: left; width: 0px; height: 100%; font-size: 12px; lin=
e-height: 20px; color: rgb(255, 255, 255); text-align: center; background-c=
olor: rgb(51, 122, 183); box-shadow: rgba(0, 0, 0, 0.15) 0px -1px 0px inset=
; transition: width 0.6s ease 0s; }

.progress-bar-striped, .progress-striped .progress-bar { background-image: =
linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, tran=
sparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, =
transparent 75%, transparent); background-size: 40px 40px; }

.progress-bar.active, .progress.active .progress-bar { animation: 2s linear=
 0s infinite normal none running progress-bar-stripes; }

.progress-bar-success { background-color: rgb(92, 184, 92); }

.progress-striped .progress-bar-success { background-image: linear-gradient=
(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rg=
ba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%=
, transparent); }

.progress-bar-info { background-color: rgb(91, 192, 222); }

.progress-striped .progress-bar-info { background-image: linear-gradient(45=
deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(=
255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, t=
ransparent); }

.progress-bar-warning { background-color: rgb(240, 173, 78); }

.progress-striped .progress-bar-warning { background-image: linear-gradient=
(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rg=
ba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%=
, transparent); }

.progress-bar-danger { background-color: rgb(217, 83, 79); }

.progress-striped .progress-bar-danger { background-image: linear-gradient(=
45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgb=
a(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%,=
 transparent); }

.media { margin-top: 15px; }

.media:first-child { margin-top: 0px; }

.media, .media-body { overflow: hidden; zoom: 1; }

.media-body { width: 10000px; }

.media-object { display: block; }

.media-object.img-thumbnail { max-width: none; }

.media-right, .media > .pull-right { padding-left: 10px; }

.media-left, .media > .pull-left { padding-right: 10px; }

.media-body, .media-left, .media-right { display: table-cell; vertical-alig=
n: top; }

.media-middle { vertical-align: middle; }

.media-bottom { vertical-align: bottom; }

.media-heading { margin-top: 0px; margin-bottom: 5px; }

.media-list { padding-left: 0px; list-style: none; }

.list-group { padding-left: 0px; margin-bottom: 20px; }

.list-group-item { position: relative; display: block; padding: 10px 15px; =
margin-bottom: -1px; background-color: rgb(255, 255, 255); border: 1px soli=
d rgb(221, 221, 221); }

.list-group-item:first-child { border-top-left-radius: 4px; border-top-righ=
t-radius: 4px; }

.list-group-item:last-child { margin-bottom: 0px; border-bottom-right-radiu=
s: 4px; border-bottom-left-radius: 4px; }

a.list-group-item, button.list-group-item { color: rgb(85, 85, 85); }

a.list-group-item .list-group-item-heading, button.list-group-item .list-gr=
oup-item-heading { color: rgb(51, 51, 51); }

a.list-group-item:focus, a.list-group-item:hover, button.list-group-item:fo=
cus, button.list-group-item:hover { color: rgb(85, 85, 85); text-decoration=
: none; background-color: rgb(245, 245, 245); }

button.list-group-item { width: 100%; text-align: left; }

.list-group-item.disabled, .list-group-item.disabled:focus, .list-group-ite=
m.disabled:hover { color: rgb(119, 119, 119); cursor: not-allowed; backgrou=
nd-color: rgb(238, 238, 238); }

.list-group-item.disabled .list-group-item-heading, .list-group-item.disabl=
ed:focus .list-group-item-heading, .list-group-item.disabled:hover .list-gr=
oup-item-heading { color: inherit; }

.list-group-item.disabled .list-group-item-text, .list-group-item.disabled:=
focus .list-group-item-text, .list-group-item.disabled:hover .list-group-it=
em-text { color: rgb(119, 119, 119); }

.list-group-item.active, .list-group-item.active:focus, .list-group-item.ac=
tive:hover { z-index: 2; color: rgb(255, 255, 255); background-color: rgb(5=
1, 122, 183); border-color: rgb(51, 122, 183); }

.list-group-item.active .list-group-item-heading, .list-group-item.active .=
list-group-item-heading > .small, .list-group-item.active .list-group-item-=
heading > small, .list-group-item.active:focus .list-group-item-heading, .l=
ist-group-item.active:focus .list-group-item-heading > .small, .list-group-=
item.active:focus .list-group-item-heading > small, .list-group-item.active=
:hover .list-group-item-heading, .list-group-item.active:hover .list-group-=
item-heading > .small, .list-group-item.active:hover .list-group-item-headi=
ng > small { color: inherit; }

.list-group-item.active .list-group-item-text, .list-group-item.active:focu=
s .list-group-item-text, .list-group-item.active:hover .list-group-item-tex=
t { color: rgb(199, 221, 239); }

.list-group-item-success { color: rgb(60, 118, 61); background-color: rgb(2=
23, 240, 216); }

a.list-group-item-success, button.list-group-item-success { color: rgb(60, =
118, 61); }

a.list-group-item-success .list-group-item-heading, button.list-group-item-=
success .list-group-item-heading { color: inherit; }

a.list-group-item-success:focus, a.list-group-item-success:hover, button.li=
st-group-item-success:focus, button.list-group-item-success:hover { color: =
rgb(60, 118, 61); background-color: rgb(208, 233, 198); }

a.list-group-item-success.active, a.list-group-item-success.active:focus, a=
.list-group-item-success.active:hover, button.list-group-item-success.activ=
e, button.list-group-item-success.active:focus, button.list-group-item-succ=
ess.active:hover { color: rgb(255, 255, 255); background-color: rgb(60, 118=
, 61); border-color: rgb(60, 118, 61); }

.list-group-item-info { color: rgb(49, 112, 143); background-color: rgb(217=
, 237, 247); }

a.list-group-item-info, button.list-group-item-info { color: rgb(49, 112, 1=
43); }

a.list-group-item-info .list-group-item-heading, button.list-group-item-inf=
o .list-group-item-heading { color: inherit; }

a.list-group-item-info:focus, a.list-group-item-info:hover, button.list-gro=
up-item-info:focus, button.list-group-item-info:hover { color: rgb(49, 112,=
 143); background-color: rgb(196, 227, 243); }

a.list-group-item-info.active, a.list-group-item-info.active:focus, a.list-=
group-item-info.active:hover, button.list-group-item-info.active, button.li=
st-group-item-info.active:focus, button.list-group-item-info.active:hover {=
 color: rgb(255, 255, 255); background-color: rgb(49, 112, 143); border-col=
or: rgb(49, 112, 143); }

.list-group-item-warning { color: rgb(138, 109, 59); background-color: rgb(=
252, 248, 227); }

a.list-group-item-warning, button.list-group-item-warning { color: rgb(138,=
 109, 59); }

a.list-group-item-warning .list-group-item-heading, button.list-group-item-=
warning .list-group-item-heading { color: inherit; }

a.list-group-item-warning:focus, a.list-group-item-warning:hover, button.li=
st-group-item-warning:focus, button.list-group-item-warning:hover { color: =
rgb(138, 109, 59); background-color: rgb(250, 242, 204); }

a.list-group-item-warning.active, a.list-group-item-warning.active:focus, a=
.list-group-item-warning.active:hover, button.list-group-item-warning.activ=
e, button.list-group-item-warning.active:focus, button.list-group-item-warn=
ing.active:hover { color: rgb(255, 255, 255); background-color: rgb(138, 10=
9, 59); border-color: rgb(138, 109, 59); }

.list-group-item-danger { color: rgb(169, 68, 66); background-color: rgb(24=
2, 222, 222); }

a.list-group-item-danger, button.list-group-item-danger { color: rgb(169, 6=
8, 66); }

a.list-group-item-danger .list-group-item-heading, button.list-group-item-d=
anger .list-group-item-heading { color: inherit; }

a.list-group-item-danger:focus, a.list-group-item-danger:hover, button.list=
-group-item-danger:focus, button.list-group-item-danger:hover { color: rgb(=
169, 68, 66); background-color: rgb(235, 204, 204); }

a.list-group-item-danger.active, a.list-group-item-danger.active:focus, a.l=
ist-group-item-danger.active:hover, button.list-group-item-danger.active, b=
utton.list-group-item-danger.active:focus, button.list-group-item-danger.ac=
tive:hover { color: rgb(255, 255, 255); background-color: rgb(169, 68, 66);=
 border-color: rgb(169, 68, 66); }

.list-group-item-heading { margin-top: 0px; margin-bottom: 5px; }

.list-group-item-text { margin-bottom: 0px; line-height: 1.3; }

.panel { margin-bottom: 20px; background-color: rgb(255, 255, 255); border:=
 1px solid transparent; border-radius: 4px; box-shadow: rgba(0, 0, 0, 0.05)=
 0px 1px 1px; }

.panel-body { padding: 15px; }

.panel-heading { padding: 10px 15px; border-bottom: 1px solid transparent; =
border-top-left-radius: 3px; border-top-right-radius: 3px; }

.panel-heading > .dropdown .dropdown-toggle { color: inherit; }

.panel-title { margin-top: 0px; margin-bottom: 0px; font-size: 16px; color:=
 inherit; }

.panel-title > .small, .panel-title > .small > a, .panel-title > a, .panel-=
title > small, .panel-title > small > a { color: inherit; }

.panel-footer { padding: 10px 15px; background-color: rgb(245, 245, 245); b=
order-top: 1px solid rgb(221, 221, 221); border-bottom-right-radius: 3px; b=
order-bottom-left-radius: 3px; }

.panel > .list-group, .panel > .panel-collapse > .list-group { margin-botto=
m: 0px; }

.panel > .list-group .list-group-item, .panel > .panel-collapse > .list-gro=
up .list-group-item { border-width: 1px 0px; border-radius: 0px; }

.panel > .list-group:first-child .list-group-item:first-child, .panel > .pa=
nel-collapse > .list-group:first-child .list-group-item:first-child { borde=
r-top: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; }

.panel > .list-group:last-child .list-group-item:last-child, .panel > .pane=
l-collapse > .list-group:last-child .list-group-item:last-child { border-bo=
ttom: 0px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;=
 }

.panel > .panel-heading + .panel-collapse > .list-group .list-group-item:fi=
rst-child { border-top-left-radius: 0px; border-top-right-radius: 0px; }

.panel-heading + .list-group .list-group-item:first-child { border-top-widt=
h: 0px; }

.list-group + .panel-footer { border-top-width: 0px; }

.panel > .panel-collapse > .table, .panel > .table, .panel > .table-respons=
ive > .table { margin-bottom: 0px; }

.panel > .panel-collapse > .table caption, .panel > .table caption, .panel =
> .table-responsive > .table caption { padding-right: 15px; padding-left: 1=
5px; }

.panel > .table-responsive:first-child > .table:first-child, .panel > .tabl=
e:first-child { border-top-left-radius: 3px; border-top-right-radius: 3px; =
}

.panel > .table-responsive:first-child > .table:first-child > tbody:first-c=
hild > tr:first-child, .panel > .table-responsive:first-child > .table:firs=
t-child > thead:first-child > tr:first-child, .panel > .table:first-child >=
 tbody:first-child > tr:first-child, .panel > .table:first-child > thead:fi=
rst-child > tr:first-child { border-top-left-radius: 3px; border-top-right-=
radius: 3px; }

.panel > .table-responsive:first-child > .table:first-child > tbody:first-c=
hild > tr:first-child td:first-child, .panel > .table-responsive:first-chil=
d > .table:first-child > tbody:first-child > tr:first-child th:first-child,=
 .panel > .table-responsive:first-child > .table:first-child > thead:first-=
child > tr:first-child td:first-child, .panel > .table-responsive:first-chi=
ld > .table:first-child > thead:first-child > tr:first-child th:first-child=
, .panel > .table:first-child > tbody:first-child > tr:first-child td:first=
-child, .panel > .table:first-child > tbody:first-child > tr:first-child th=
:first-child, .panel > .table:first-child > thead:first-child > tr:first-ch=
ild td:first-child, .panel > .table:first-child > thead:first-child > tr:fi=
rst-child th:first-child { border-top-left-radius: 3px; }

.panel > .table-responsive:first-child > .table:first-child > tbody:first-c=
hild > tr:first-child td:last-child, .panel > .table-responsive:first-child=
 > .table:first-child > tbody:first-child > tr:first-child th:last-child, .=
panel > .table-responsive:first-child > .table:first-child > thead:first-ch=
ild > tr:first-child td:last-child, .panel > .table-responsive:first-child =
> .table:first-child > thead:first-child > tr:first-child th:last-child, .p=
anel > .table:first-child > tbody:first-child > tr:first-child td:last-chil=
d, .panel > .table:first-child > tbody:first-child > tr:first-child th:last=
-child, .panel > .table:first-child > thead:first-child > tr:first-child td=
:last-child, .panel > .table:first-child > thead:first-child > tr:first-chi=
ld th:last-child { border-top-right-radius: 3px; }

.panel > .table-responsive:last-child > .table:last-child, .panel > .table:=
last-child { border-bottom-right-radius: 3px; border-bottom-left-radius: 3p=
x; }

.panel > .table-responsive:last-child > .table:last-child > tbody:last-chil=
d > tr:last-child, .panel > .table-responsive:last-child > .table:last-chil=
d > tfoot:last-child > tr:last-child, .panel > .table:last-child > tbody:la=
st-child > tr:last-child, .panel > .table:last-child > tfoot:last-child > t=
r:last-child { border-bottom-right-radius: 3px; border-bottom-left-radius: =
3px; }

.panel > .table-responsive:last-child > .table:last-child > tbody:last-chil=
d > tr:last-child td:first-child, .panel > .table-responsive:last-child > .=
table:last-child > tbody:last-child > tr:last-child th:first-child, .panel =
> .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:=
last-child td:first-child, .panel > .table-responsive:last-child > .table:l=
ast-child > tfoot:last-child > tr:last-child th:first-child, .panel > .tabl=
e:last-child > tbody:last-child > tr:last-child td:first-child, .panel > .t=
able:last-child > tbody:last-child > tr:last-child th:first-child, .panel >=
 .table:last-child > tfoot:last-child > tr:last-child td:first-child, .pane=
l > .table:last-child > tfoot:last-child > tr:last-child th:first-child { b=
order-bottom-left-radius: 3px; }

.panel > .table-responsive:last-child > .table:last-child > tbody:last-chil=
d > tr:last-child td:last-child, .panel > .table-responsive:last-child > .t=
able:last-child > tbody:last-child > tr:last-child th:last-child, .panel > =
.table-responsive:last-child > .table:last-child > tfoot:last-child > tr:la=
st-child td:last-child, .panel > .table-responsive:last-child > .table:last=
-child > tfoot:last-child > tr:last-child th:last-child, .panel > .table:la=
st-child > tbody:last-child > tr:last-child td:last-child, .panel > .table:=
last-child > tbody:last-child > tr:last-child th:last-child, .panel > .tabl=
e:last-child > tfoot:last-child > tr:last-child td:last-child, .panel > .ta=
ble:last-child > tfoot:last-child > tr:last-child th:last-child { border-bo=
ttom-right-radius: 3px; }

.panel > .panel-body + .table, .panel > .panel-body + .table-responsive, .p=
anel > .table + .panel-body, .panel > .table-responsive + .panel-body { bor=
der-top: 1px solid rgb(221, 221, 221); }

.panel > .table > tbody:first-child > tr:first-child td, .panel > .table > =
tbody:first-child > tr:first-child th { border-top: 0px; }

.panel > .table-bordered, .panel > .table-responsive > .table-bordered { bo=
rder: 0px; }

.panel > .table-bordered > tbody > tr > td:first-child, .panel > .table-bor=
dered > tbody > tr > th:first-child, .panel > .table-bordered > tfoot > tr =
> td:first-child, .panel > .table-bordered > tfoot > tr > th:first-child, .=
panel > .table-bordered > thead > tr > td:first-child, .panel > .table-bord=
ered > thead > tr > th:first-child, .panel > .table-responsive > .table-bor=
dered > tbody > tr > td:first-child, .panel > .table-responsive > .table-bo=
rdered > tbody > tr > th:first-child, .panel > .table-responsive > .table-b=
ordered > tfoot > tr > td:first-child, .panel > .table-responsive > .table-=
bordered > tfoot > tr > th:first-child, .panel > .table-responsive > .table=
-bordered > thead > tr > td:first-child, .panel > .table-responsive > .tabl=
e-bordered > thead > tr > th:first-child { border-left: 0px; }

.panel > .table-bordered > tbody > tr > td:last-child, .panel > .table-bord=
ered > tbody > tr > th:last-child, .panel > .table-bordered > tfoot > tr > =
td:last-child, .panel > .table-bordered > tfoot > tr > th:last-child, .pane=
l > .table-bordered > thead > tr > td:last-child, .panel > .table-bordered =
> thead > tr > th:last-child, .panel > .table-responsive > .table-bordered =
> tbody > tr > td:last-child, .panel > .table-responsive > .table-bordered =
> tbody > tr > th:last-child, .panel > .table-responsive > .table-bordered =
> tfoot > tr > td:last-child, .panel > .table-responsive > .table-bordered =
> tfoot > tr > th:last-child, .panel > .table-responsive > .table-bordered =
> thead > tr > td:last-child, .panel > .table-responsive > .table-bordered =
> thead > tr > th:last-child { border-right: 0px; }

.panel > .table-bordered > tbody > tr:first-child > td, .panel > .table-bor=
dered > tbody > tr:first-child > th, .panel > .table-bordered > thead > tr:=
first-child > td, .panel > .table-bordered > thead > tr:first-child > th, .=
panel > .table-responsive > .table-bordered > tbody > tr:first-child > td, =
.panel > .table-responsive > .table-bordered > tbody > tr:first-child > th,=
 .panel > .table-responsive > .table-bordered > thead > tr:first-child > td=
, .panel > .table-responsive > .table-bordered > thead > tr:first-child > t=
h { border-bottom: 0px; }

.panel > .table-bordered > tbody > tr:last-child > td, .panel > .table-bord=
ered > tbody > tr:last-child > th, .panel > .table-bordered > tfoot > tr:la=
st-child > td, .panel > .table-bordered > tfoot > tr:last-child > th, .pane=
l > .table-responsive > .table-bordered > tbody > tr:last-child > td, .pane=
l > .table-responsive > .table-bordered > tbody > tr:last-child > th, .pane=
l > .table-responsive > .table-bordered > tfoot > tr:last-child > td, .pane=
l > .table-responsive > .table-bordered > tfoot > tr:last-child > th { bord=
er-bottom: 0px; }

.panel > .table-responsive { margin-bottom: 0px; border: 0px; }

.panel-group { margin-bottom: 20px; }

.panel-group .panel { margin-bottom: 0px; border-radius: 4px; }

.panel-group .panel + .panel { margin-top: 5px; }

.panel-group .panel-heading { border-bottom: 0px; }

.panel-group .panel-heading + .panel-collapse > .list-group, .panel-group .=
panel-heading + .panel-collapse > .panel-body { border-top: 1px solid rgb(2=
21, 221, 221); }

.panel-group .panel-footer { border-top: 0px; }

.panel-group .panel-footer + .panel-collapse .panel-body { border-bottom: 1=
px solid rgb(221, 221, 221); }

.panel-default { border-color: rgb(221, 221, 221); }

.panel-default > .panel-heading { color: rgb(51, 51, 51); background-color:=
 rgb(245, 245, 245); border-color: rgb(221, 221, 221); }

.panel-default > .panel-heading + .panel-collapse > .panel-body { border-to=
p-color: rgb(221, 221, 221); }

.panel-default > .panel-heading .badge { color: rgb(245, 245, 245); backgro=
und-color: rgb(51, 51, 51); }

.panel-default > .panel-footer + .panel-collapse > .panel-body { border-bot=
tom-color: rgb(221, 221, 221); }

.panel-primary { border-color: rgb(51, 122, 183); }

.panel-primary > .panel-heading { color: rgb(255, 255, 255); background-col=
or: rgb(51, 122, 183); border-color: rgb(51, 122, 183); }

.panel-primary > .panel-heading + .panel-collapse > .panel-body { border-to=
p-color: rgb(51, 122, 183); }

.panel-primary > .panel-heading .badge { color: rgb(51, 122, 183); backgrou=
nd-color: rgb(255, 255, 255); }

.panel-primary > .panel-footer + .panel-collapse > .panel-body { border-bot=
tom-color: rgb(51, 122, 183); }

.panel-success { border-color: rgb(214, 233, 198); }

.panel-success > .panel-heading { color: rgb(60, 118, 61); background-color=
: rgb(223, 240, 216); border-color: rgb(214, 233, 198); }

.panel-success > .panel-heading + .panel-collapse > .panel-body { border-to=
p-color: rgb(214, 233, 198); }

.panel-success > .panel-heading .badge { color: rgb(223, 240, 216); backgro=
und-color: rgb(60, 118, 61); }

.panel-success > .panel-footer + .panel-collapse > .panel-body { border-bot=
tom-color: rgb(214, 233, 198); }

.panel-info { border-color: rgb(188, 232, 241); }

.panel-info > .panel-heading { color: rgb(49, 112, 143); background-color: =
rgb(217, 237, 247); border-color: rgb(188, 232, 241); }

.panel-info > .panel-heading + .panel-collapse > .panel-body { border-top-c=
olor: rgb(188, 232, 241); }

.panel-info > .panel-heading .badge { color: rgb(217, 237, 247); background=
-color: rgb(49, 112, 143); }

.panel-info > .panel-footer + .panel-collapse > .panel-body { border-bottom=
-color: rgb(188, 232, 241); }

.panel-warning { border-color: rgb(250, 235, 204); }

.panel-warning > .panel-heading { color: rgb(138, 109, 59); background-colo=
r: rgb(252, 248, 227); border-color: rgb(250, 235, 204); }

.panel-warning > .panel-heading + .panel-collapse > .panel-body { border-to=
p-color: rgb(250, 235, 204); }

.panel-warning > .panel-heading .badge { color: rgb(252, 248, 227); backgro=
und-color: rgb(138, 109, 59); }

.panel-warning > .panel-footer + .panel-collapse > .panel-body { border-bot=
tom-color: rgb(250, 235, 204); }

.panel-danger { border-color: rgb(235, 204, 209); }

.panel-danger > .panel-heading { color: rgb(169, 68, 66); background-color:=
 rgb(242, 222, 222); border-color: rgb(235, 204, 209); }

.panel-danger > .panel-heading + .panel-collapse > .panel-body { border-top=
-color: rgb(235, 204, 209); }

.panel-danger > .panel-heading .badge { color: rgb(242, 222, 222); backgrou=
nd-color: rgb(169, 68, 66); }

.panel-danger > .panel-footer + .panel-collapse > .panel-body { border-bott=
om-color: rgb(235, 204, 209); }

.embed-responsive { position: relative; display: block; height: 0px; paddin=
g: 0px; overflow: hidden; }

.embed-responsive .embed-responsive-item, .embed-responsive embed, .embed-r=
esponsive iframe, .embed-responsive object, .embed-responsive video { posit=
ion: absolute; top: 0px; bottom: 0px; left: 0px; width: 100%; height: 100%;=
 border: 0px; }

.embed-responsive-16by9 { padding-bottom: 56.25%; }

.embed-responsive-4by3 { padding-bottom: 75%; }

.well { min-height: 20px; padding: 19px; margin-bottom: 20px; background-co=
lor: rgb(245, 245, 245); border: 1px solid rgb(227, 227, 227); border-radiu=
s: 4px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; }

.well blockquote { border-color: rgba(0, 0, 0, 0.15); }

.well-lg { padding: 24px; border-radius: 6px; }

.well-sm { padding: 9px; border-radius: 3px; }

.close { float: right; font-size: 21px; font-weight: 700; line-height: 1; c=
olor: rgb(0, 0, 0); text-shadow: rgb(255, 255, 255) 0px 1px 0px; opacity: 0=
.2; }

.close:focus, .close:hover { color: rgb(0, 0, 0); text-decoration: none; cu=
rsor: pointer; opacity: 0.5; }

button.close { appearance: none; padding: 0px; cursor: pointer; background:=
 0px 0px; border: 0px; }

.modal-open { overflow: hidden; }

.modal { position: fixed; inset: 0px; z-index: 1050; display: none; overflo=
w: hidden; outline: 0px; }

.modal.fade .modal-dialog { transition: transform 0.3s ease-out 0s; transfo=
rm: translate(0px, -25%); }

.modal.in .modal-dialog { transform: translate(0px, 0px); }

.modal-open .modal { overflow: hidden auto; }

.modal-dialog { position: relative; width: auto; margin: 10px; }

.modal-content { position: relative; background-color: rgb(255, 255, 255); =
background-clip: padding-box; border: 1px solid rgba(0, 0, 0, 0.2); border-=
radius: 6px; outline: 0px; box-shadow: rgba(0, 0, 0, 0.5) 0px 3px 9px; }

.modal-backdrop { position: fixed; inset: 0px; z-index: 1040; background-co=
lor: rgb(0, 0, 0); }

.modal-backdrop.fade { opacity: 0; }

.modal-backdrop.in { opacity: 0.5; }

.modal-header { padding: 15px; border-bottom: 1px solid rgb(229, 229, 229);=
 }

.modal-header .close { margin-top: -2px; }

.modal-title { margin: 0px; line-height: 1.42857; }

.modal-body { position: relative; padding: 15px; }

.modal-footer { padding: 15px; text-align: right; border-top: 1px solid rgb=
(229, 229, 229); }

.modal-footer .btn + .btn { margin-bottom: 0px; margin-left: 5px; }

.modal-footer .btn-group .btn + .btn { margin-left: -1px; }

.modal-footer .btn-block + .btn-block { margin-left: 0px; }

.modal-scrollbar-measure { position: absolute; top: -9999px; width: 50px; h=
eight: 50px; overflow: scroll; }

@media (min-width: 768px) {
  .modal-dialog { width: 600px; margin: 30px auto; }
  .modal-content { box-shadow: rgba(0, 0, 0, 0.5) 0px 5px 15px; }
  .modal-sm { width: 300px; }
}

@media (min-width: 992px) {
  .modal-lg { width: 900px; }
}

.tooltip { position: absolute; z-index: 1070; display: block; font-family: =
"Helvetica Neue", Helvetica, Arial, sans-serif; font-size: 12px; font-style=
: normal; font-weight: 400; line-height: 1.42857; text-align: start; text-d=
ecoration: none; text-shadow: none; text-transform: none; letter-spacing: n=
ormal; word-break: normal; word-spacing: normal; overflow-wrap: normal; whi=
te-space: normal; opacity: 0; line-break: auto; }

.tooltip.in { opacity: 0.9; }

.tooltip.top { padding: 5px 0px; margin-top: -3px; }

.tooltip.right { padding: 0px 5px; margin-left: 3px; }

.tooltip.bottom { padding: 5px 0px; margin-top: 3px; }

.tooltip.left { padding: 0px 5px; margin-left: -3px; }

.tooltip-inner { max-width: 200px; padding: 3px 8px; color: rgb(255, 255, 2=
55); text-align: center; background-color: rgb(0, 0, 0); border-radius: 4px=
; }

.tooltip-arrow { position: absolute; width: 0px; height: 0px; border-color:=
 transparent; border-style: solid; }

.tooltip.top .tooltip-arrow { bottom: 0px; left: 50%; margin-left: -5px; bo=
rder-width: 5px 5px 0px; border-top-color: rgb(0, 0, 0); }

.tooltip.top-left .tooltip-arrow { right: 5px; bottom: 0px; margin-bottom: =
-5px; border-width: 5px 5px 0px; border-top-color: rgb(0, 0, 0); }

.tooltip.top-right .tooltip-arrow { bottom: 0px; left: 5px; margin-bottom: =
-5px; border-width: 5px 5px 0px; border-top-color: rgb(0, 0, 0); }

.tooltip.right .tooltip-arrow { top: 50%; left: 0px; margin-top: -5px; bord=
er-width: 5px 5px 5px 0px; border-right-color: rgb(0, 0, 0); }

.tooltip.left .tooltip-arrow { top: 50%; right: 0px; margin-top: -5px; bord=
er-width: 5px 0px 5px 5px; border-left-color: rgb(0, 0, 0); }

.tooltip.bottom .tooltip-arrow { top: 0px; left: 50%; margin-left: -5px; bo=
rder-width: 0px 5px 5px; border-bottom-color: rgb(0, 0, 0); }

.tooltip.bottom-left .tooltip-arrow { top: 0px; right: 5px; margin-top: -5p=
x; border-width: 0px 5px 5px; border-bottom-color: rgb(0, 0, 0); }

.tooltip.bottom-right .tooltip-arrow { top: 0px; left: 5px; margin-top: -5p=
x; border-width: 0px 5px 5px; border-bottom-color: rgb(0, 0, 0); }

.popover { position: absolute; top: 0px; left: 0px; z-index: 1060; display:=
 none; max-width: 276px; padding: 1px; font-family: "Helvetica Neue", Helve=
tica, Arial, sans-serif; font-size: 14px; font-style: normal; font-weight: =
400; line-height: 1.42857; text-align: start; text-decoration: none; text-s=
hadow: none; text-transform: none; letter-spacing: normal; word-break: norm=
al; word-spacing: normal; overflow-wrap: normal; white-space: normal; backg=
round-color: rgb(255, 255, 255); background-clip: padding-box; border: 1px =
solid rgba(0, 0, 0, 0.2); border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2=
) 0px 5px 10px; line-break: auto; }

.popover.top { margin-top: -10px; }

.popover.right { margin-left: 10px; }

.popover.bottom { margin-top: 10px; }

.popover.left { margin-left: -10px; }

.popover-title { padding: 8px 14px; margin: 0px; font-size: 14px; backgroun=
d-color: rgb(247, 247, 247); border-bottom: 1px solid rgb(235, 235, 235); b=
order-radius: 5px 5px 0px 0px; }

.popover-content { padding: 9px 14px; }

.popover > .arrow, .popover > .arrow::after { position: absolute; display: =
block; width: 0px; height: 0px; border-color: transparent; border-style: so=
lid; }

.popover > .arrow { border-width: 11px; }

.popover > .arrow::after { content: ""; border-width: 10px; }

.popover.top > .arrow { bottom: -11px; left: 50%; margin-left: -11px; borde=
r-top-color: rgba(0, 0, 0, 0.25); border-bottom-width: 0px; }

.popover.top > .arrow::after { bottom: 1px; margin-left: -10px; content: " =
"; border-top-color: rgb(255, 255, 255); border-bottom-width: 0px; }

.popover.right > .arrow { top: 50%; left: -11px; margin-top: -11px; border-=
right-color: rgba(0, 0, 0, 0.25); border-left-width: 0px; }

.popover.right > .arrow::after { bottom: -10px; left: 1px; content: " "; bo=
rder-right-color: rgb(255, 255, 255); border-left-width: 0px; }

.popover.bottom > .arrow { top: -11px; left: 50%; margin-left: -11px; borde=
r-top-width: 0px; border-bottom-color: rgba(0, 0, 0, 0.25); }

.popover.bottom > .arrow::after { top: 1px; margin-left: -10px; content: " =
"; border-top-width: 0px; border-bottom-color: rgb(255, 255, 255); }

.popover.left > .arrow { top: 50%; right: -11px; margin-top: -11px; border-=
right-width: 0px; border-left-color: rgba(0, 0, 0, 0.25); }

.popover.left > .arrow::after { right: 1px; bottom: -10px; content: " "; bo=
rder-right-width: 0px; border-left-color: rgb(255, 255, 255); }

.carousel { position: relative; }

.carousel-inner { position: relative; width: 100%; overflow: hidden; }

.carousel-inner > .item { position: relative; display: none; transition: le=
ft 0.6s ease-in-out 0s; }

.carousel-inner > .item > a > img, .carousel-inner > .item > img { line-hei=
ght: 1; }

@media not all, (-webkit-transform-3d) {
  .carousel-inner > .item { transition: transform 0.6s ease-in-out 0s; back=
face-visibility: hidden; perspective: 1000px; }
  .carousel-inner > .item.active.right, .carousel-inner > .item.next { left=
: 0px; transform: translate3d(100%, 0px, 0px); }
  .carousel-inner > .item.active.left, .carousel-inner > .item.prev { left:=
 0px; transform: translate3d(-100%, 0px, 0px); }
  .carousel-inner > .item.active, .carousel-inner > .item.next.left, .carou=
sel-inner > .item.prev.right { left: 0px; transform: translate3d(0px, 0px, =
0px); }
}

.carousel-inner > .active, .carousel-inner > .next, .carousel-inner > .prev=
 { display: block; }

.carousel-inner > .active { left: 0px; }

.carousel-inner > .next, .carousel-inner > .prev { position: absolute; top:=
 0px; width: 100%; }

.carousel-inner > .next { left: 100%; }

.carousel-inner > .prev { left: -100%; }

.carousel-inner > .next.left, .carousel-inner > .prev.right { left: 0px; }

.carousel-inner > .active.left { left: -100%; }

.carousel-inner > .active.right { left: 100%; }

.carousel-control { position: absolute; top: 0px; bottom: 0px; left: 0px; w=
idth: 15%; font-size: 20px; color: rgb(255, 255, 255); text-align: center; =
text-shadow: rgba(0, 0, 0, 0.6) 0px 1px 2px; background-color: rgba(0, 0, 0=
, 0); opacity: 0.5; }

.carousel-control.left { background-image: linear-gradient(to right, rgba(0=
, 0, 0, 0.5) 0px, rgba(0, 0, 0, 0) 100%); background-repeat: repeat-x; }

.carousel-control.right { right: 0px; left: auto; background-image: linear-=
gradient(to right, rgba(0, 0, 0, 0) 0px, rgba(0, 0, 0, 0.5) 100%); backgrou=
nd-repeat: repeat-x; }

.carousel-control:focus, .carousel-control:hover { color: rgb(255, 255, 255=
); text-decoration: none; outline: 0px; opacity: 0.9; }

.carousel-control .glyphicon-chevron-left, .carousel-control .glyphicon-che=
vron-right, .carousel-control .icon-next, .carousel-control .icon-prev { po=
sition: absolute; top: 50%; z-index: 5; display: inline-block; margin-top: =
-10px; }

.carousel-control .glyphicon-chevron-left, .carousel-control .icon-prev { l=
eft: 50%; margin-left: -10px; }

.carousel-control .glyphicon-chevron-right, .carousel-control .icon-next { =
right: 50%; margin-right: -10px; }

.carousel-control .icon-next, .carousel-control .icon-prev { width: 20px; h=
eight: 20px; font-family: serif; line-height: 1; }

.carousel-control .icon-prev::before { content: "=E2=80=B9"; }

.carousel-control .icon-next::before { content: "=E2=80=BA"; }

.carousel-indicators { position: absolute; bottom: 10px; left: 50%; z-index=
: 15; width: 60%; padding-left: 0px; margin-left: -30%; text-align: center;=
 list-style: none; }

.carousel-indicators li { display: inline-block; width: 10px; height: 10px;=
 margin: 1px; text-indent: -999px; cursor: pointer; background-color: rgba(=
0, 0, 0, 0); border: 1px solid rgb(255, 255, 255); border-radius: 10px; }

.carousel-indicators .active { width: 12px; height: 12px; margin: 0px; back=
ground-color: rgb(255, 255, 255); }

.carousel-caption { position: absolute; right: 15%; bottom: 20px; left: 15%=
; z-index: 10; padding-top: 20px; padding-bottom: 20px; color: rgb(255, 255=
, 255); text-align: center; text-shadow: rgba(0, 0, 0, 0.6) 0px 1px 2px; }

.carousel-caption .btn { text-shadow: none; }

@media screen and (min-width: 768px) {
  .carousel-control .glyphicon-chevron-left, .carousel-control .glyphicon-c=
hevron-right, .carousel-control .icon-next, .carousel-control .icon-prev { =
width: 30px; height: 30px; margin-top: -10px; font-size: 30px; }
  .carousel-control .glyphicon-chevron-left, .carousel-control .icon-prev {=
 margin-left: -10px; }
  .carousel-control .glyphicon-chevron-right, .carousel-control .icon-next =
{ margin-right: -10px; }
  .carousel-caption { right: 20%; left: 20%; padding-bottom: 30px; }
  .carousel-indicators { bottom: 20px; }
}

.btn-group-vertical > .btn-group::after, .btn-group-vertical > .btn-group::=
before, .btn-toolbar::after, .btn-toolbar::before, .clearfix::after, .clear=
fix::before, .container-fluid::after, .container-fluid::before, .container:=
:after, .container::before, .dl-horizontal dd::after, .dl-horizontal dd::be=
fore, .form-horizontal .form-group::after, .form-horizontal .form-group::be=
fore, .modal-footer::after, .modal-footer::before, .modal-header::after, .m=
odal-header::before, .nav::after, .nav::before, .navbar-collapse::after, .n=
avbar-collapse::before, .navbar-header::after, .navbar-header::before, .nav=
bar::after, .navbar::before, .pager::after, .pager::before, .panel-body::af=
ter, .panel-body::before, .row::after, .row::before { display: table; conte=
nt: " "; }

.btn-group-vertical > .btn-group::after, .btn-toolbar::after, .clearfix::af=
ter, .container-fluid::after, .container::after, .dl-horizontal dd::after, =
.form-horizontal .form-group::after, .modal-footer::after, .modal-header::a=
fter, .nav::after, .navbar-collapse::after, .navbar-header::after, .navbar:=
:after, .pager::after, .panel-body::after, .row::after { clear: both; }

.center-block { display: block; margin-right: auto; margin-left: auto; }

.pull-right { float: right !important; }

.pull-left { float: left !important; }

.hide { display: none !important; }

.show { display: block !important; }

.invisible { visibility: hidden; }

.text-hide { font: 0px / 0 a; color: transparent; text-shadow: none; backgr=
ound-color: transparent; border: 0px; }

.hidden { display: none !important; }

.affix { position: fixed; }

.visible-lg, .visible-md, .visible-sm, .visible-xs { display: none !importa=
nt; }

.visible-lg-block, .visible-lg-inline, .visible-lg-inline-block, .visible-m=
d-block, .visible-md-inline, .visible-md-inline-block, .visible-sm-block, .=
visible-sm-inline, .visible-sm-inline-block, .visible-xs-block, .visible-xs=
-inline, .visible-xs-inline-block { display: none !important; }

@media (max-width: 767px) {
  .visible-xs { display: block !important; }
  table.visible-xs { display: table !important; }
  tr.visible-xs { display: table-row !important; }
  td.visible-xs, th.visible-xs { display: table-cell !important; }
}

@media (max-width: 767px) {
  .visible-xs-block { display: block !important; }
}

@media (max-width: 767px) {
  .visible-xs-inline { display: inline !important; }
}

@media (max-width: 767px) {
  .visible-xs-inline-block { display: inline-block !important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm { display: block !important; }
  table.visible-sm { display: table !important; }
  tr.visible-sm { display: table-row !important; }
  td.visible-sm, th.visible-sm { display: table-cell !important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm-block { display: block !important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm-inline { display: inline !important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm-inline-block { display: inline-block !important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md { display: block !important; }
  table.visible-md { display: table !important; }
  tr.visible-md { display: table-row !important; }
  td.visible-md, th.visible-md { display: table-cell !important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md-block { display: block !important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md-inline { display: inline !important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md-inline-block { display: inline-block !important; }
}

@media (min-width: 1200px) {
  .visible-lg { display: block !important; }
  table.visible-lg { display: table !important; }
  tr.visible-lg { display: table-row !important; }
  td.visible-lg, th.visible-lg { display: table-cell !important; }
}

@media (min-width: 1200px) {
  .visible-lg-block { display: block !important; }
}

@media (min-width: 1200px) {
  .visible-lg-inline { display: inline !important; }
}

@media (min-width: 1200px) {
  .visible-lg-inline-block { display: inline-block !important; }
}

@media (max-width: 767px) {
  .hidden-xs { display: none !important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .hidden-sm { display: none !important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .hidden-md { display: none !important; }
}

@media (min-width: 1200px) {
  .hidden-lg { display: none !important; }
}

.visible-print { display: none !important; }

@media print {
  .visible-print { display: block !important; }
  table.visible-print { display: table !important; }
  tr.visible-print { display: table-row !important; }
  td.visible-print, th.visible-print { display: table-cell !important; }
}

.visible-print-block { display: none !important; }

@media print {
  .visible-print-block { display: block !important; }
}

.visible-print-inline { display: none !important; }

@media print {
  .visible-print-inline { display: inline !important; }
}

.visible-print-inline-block { display: none !important; }

@media print {
  .visible-print-inline-block { display: inline-block !important; }
}

@media print {
  .hidden-print { display: none !important; }
}

@font-face { font-family: FontAwesome; src: url("/assets/fontawesome-webfon=
t-82ff0fe46a6f60e0ab3c4a9891a0ae0a1f7b7e84c625f55358379177a2dcb202.eot?#ief=
ix") format("embedded-opentype"), url("/assets/fontawesome-webfont-fa79d127=
baca4558a0b973f5f514b90fc5ef43314c41095f5cb285ffaa0a4029.woff2") format("wo=
ff2"), url("/assets/fontawesome-webfont-c9a0a23a23a3f6f7165cba218b40483a0b1=
750d92b49c40842f1d8f566f5f421.woff") format("woff"), url("/assets/fontaweso=
me-webfont-2794b002e3568f5abce8991e2431ca79e0ce84a08ea1268884b4e097b62762a6=
.ttf") format("truetype"), url("/assets/fontawesome-webfont-67c6c8e9ffb0fcd=
7c7c64eaff12a298abf5b54a54b54f0e6c4c49161dba62d6d.svg#fontawesomeregular") =
format("svg"); font-weight: normal; font-style: normal; }

.fa { display: inline-block; font-style: normal; font-variant: normal; font=
-weight: normal; font-stretch: normal; line-height: 1; font-family: FontAwe=
some; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: ant=
ialiased; }

.fa-lg { font-size: 1.33333em; line-height: 0.75em; vertical-align: -15%; }

.fa-2x { font-size: 2em; }

.fa-3x { font-size: 3em; }

.fa-4x { font-size: 4em; }

.fa-5x { font-size: 5em; }

.fa-fw { width: 1.28571em; text-align: center; }

.fa-ul { padding-left: 0px; margin-left: 2.14286em; list-style-type: none; =
}

.fa-ul > li { position: relative; }

.fa-li { position: absolute; left: -2.14286em; width: 2.14286em; top: 0.142=
857em; text-align: center; }

.fa-li.fa-lg { left: -1.85714em; }

.fa-border { padding: 0.2em 0.25em 0.15em; border: 0.08em solid rgb(238, 23=
8, 238); border-radius: 0.1em; }

.fa-pull-left { float: left; }

.fa-pull-right { float: right; }

.fa.fa-pull-left { margin-right: 0.3em; }

.fa.fa-pull-right { margin-left: 0.3em; }

.pull-right { float: right; }

.pull-left { float: left; }

.fa.pull-left { margin-right: 0.3em; }

.fa.pull-right { margin-left: 0.3em; }

.fa-spin { animation: 2s linear 0s infinite normal none running fa-spin; }

.fa-pulse { animation: 1s steps(8) 0s infinite normal none running fa-spin;=
 }

@-webkit-keyframes fa-spin {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(359deg); }
}

@keyframes fa-spin {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(359deg); }
}

.fa-rotate-90 { transform: rotate(90deg); }

.fa-rotate-180 { transform: rotate(180deg); }

.fa-rotate-270 { transform: rotate(270deg); }

.fa-flip-horizontal { transform: scale(-1, 1); }

.fa-flip-vertical { transform: scale(1, -1); }

:root .fa-rotate-90, :root .fa-rotate-180, :root .fa-rotate-270, :root .fa-=
flip-horizontal, :root .fa-flip-vertical { filter: none; }

.fa-stack { position: relative; display: inline-block; width: 2em; height: =
2em; line-height: 2em; vertical-align: middle; }

.fa-stack-1x, .fa-stack-2x { position: absolute; left: 0px; width: 100%; te=
xt-align: center; }

.fa-stack-1x { line-height: inherit; }

.fa-stack-2x { font-size: 2em; }

.fa-inverse { color: rgb(255, 255, 255); }

.fa-glass::before { content: "=EF=80=80"; }

.fa-music::before { content: "=EF=80=81"; }

.fa-search::before { content: "=EF=80=82"; }

.fa-envelope-o::before { content: "=EF=80=83"; }

.fa-heart::before { content: "=EF=80=84"; }

.fa-star::before { content: "=EF=80=85"; }

.fa-star-o::before { content: "=EF=80=86"; }

.fa-user::before { content: "=EF=80=87"; }

.fa-film::before { content: "=EF=80=88"; }

.fa-th-large::before { content: "=EF=80=89"; }

.fa-th::before { content: "=EF=80=8A"; }

.fa-th-list::before { content: "=EF=80=8B"; }

.fa-check::before { content: "=EF=80=8C"; }

.fa-remove::before, .fa-close::before, .fa-times::before { content: "=EF=80=
=8D"; }

.fa-search-plus::before { content: "=EF=80=8E"; }

.fa-search-minus::before { content: "=EF=80=90"; }

.fa-power-off::before { content: "=EF=80=91"; }

.fa-signal::before { content: "=EF=80=92"; }

.fa-gear::before, .fa-cog::before { content: "=EF=80=93"; }

.fa-trash-o::before { content: "=EF=80=94"; }

.fa-home::before { content: "=EF=80=95"; }

.fa-file-o::before { content: "=EF=80=96"; }

.fa-clock-o::before { content: "=EF=80=97"; }

.fa-road::before { content: "=EF=80=98"; }

.fa-download::before { content: "=EF=80=99"; }

.fa-arrow-circle-o-down::before { content: "=EF=80=9A"; }

.fa-arrow-circle-o-up::before { content: "=EF=80=9B"; }

.fa-inbox::before { content: "=EF=80=9C"; }

.fa-play-circle-o::before { content: "=EF=80=9D"; }

.fa-rotate-right::before, .fa-repeat::before { content: "=EF=80=9E"; }

.fa-refresh::before { content: "=EF=80=A1"; }

.fa-list-alt::before { content: "=EF=80=A2"; }

.fa-lock::before { content: "=EF=80=A3"; }

.fa-flag::before { content: "=EF=80=A4"; }

.fa-headphones::before { content: "=EF=80=A5"; }

.fa-volume-off::before { content: "=EF=80=A6"; }

.fa-volume-down::before { content: "=EF=80=A7"; }

.fa-volume-up::before { content: "=EF=80=A8"; }

.fa-qrcode::before { content: "=EF=80=A9"; }

.fa-barcode::before { content: "=EF=80=AA"; }

.fa-tag::before { content: "=EF=80=AB"; }

.fa-tags::before { content: "=EF=80=AC"; }

.fa-book::before { content: "=EF=80=AD"; }

.fa-bookmark::before { content: "=EF=80=AE"; }

.fa-print::before { content: "=EF=80=AF"; }

.fa-camera::before { content: "=EF=80=B0"; }

.fa-font::before { content: "=EF=80=B1"; }

.fa-bold::before { content: "=EF=80=B2"; }

.fa-italic::before { content: "=EF=80=B3"; }

.fa-text-height::before { content: "=EF=80=B4"; }

.fa-text-width::before { content: "=EF=80=B5"; }

.fa-align-left::before { content: "=EF=80=B6"; }

.fa-align-center::before { content: "=EF=80=B7"; }

.fa-align-right::before { content: "=EF=80=B8"; }

.fa-align-justify::before { content: "=EF=80=B9"; }

.fa-list::before { content: "=EF=80=BA"; }

.fa-dedent::before, .fa-outdent::before { content: "=EF=80=BB"; }

.fa-indent::before { content: "=EF=80=BC"; }

.fa-video-camera::before { content: "=EF=80=BD"; }

.fa-photo::before, .fa-image::before, .fa-picture-o::before { content: "=EF=
=80=BE"; }

.fa-pencil::before { content: "=EF=81=80"; }

.fa-map-marker::before { content: "=EF=81=81"; }

.fa-adjust::before { content: "=EF=81=82"; }

.fa-tint::before { content: "=EF=81=83"; }

.fa-edit::before, .fa-pencil-square-o::before { content: "=EF=81=84"; }

.fa-share-square-o::before { content: "=EF=81=85"; }

.fa-check-square-o::before { content: "=EF=81=86"; }

.fa-arrows::before { content: "=EF=81=87"; }

.fa-step-backward::before { content: "=EF=81=88"; }

.fa-fast-backward::before { content: "=EF=81=89"; }

.fa-backward::before { content: "=EF=81=8A"; }

.fa-play::before { content: "=EF=81=8B"; }

.fa-pause::before { content: "=EF=81=8C"; }

.fa-stop::before { content: "=EF=81=8D"; }

.fa-forward::before { content: "=EF=81=8E"; }

.fa-fast-forward::before { content: "=EF=81=90"; }

.fa-step-forward::before { content: "=EF=81=91"; }

.fa-eject::before { content: "=EF=81=92"; }

.fa-chevron-left::before { content: "=EF=81=93"; }

.fa-chevron-right::before { content: "=EF=81=94"; }

.fa-plus-circle::before { content: "=EF=81=95"; }

.fa-minus-circle::before { content: "=EF=81=96"; }

.fa-times-circle::before { content: "=EF=81=97"; }

.fa-check-circle::before { content: "=EF=81=98"; }

.fa-question-circle::before { content: "=EF=81=99"; }

.fa-info-circle::before { content: "=EF=81=9A"; }

.fa-crosshairs::before { content: "=EF=81=9B"; }

.fa-times-circle-o::before { content: "=EF=81=9C"; }

.fa-check-circle-o::before { content: "=EF=81=9D"; }

.fa-ban::before { content: "=EF=81=9E"; }

.fa-arrow-left::before { content: "=EF=81=A0"; }

.fa-arrow-right::before { content: "=EF=81=A1"; }

.fa-arrow-up::before { content: "=EF=81=A2"; }

.fa-arrow-down::before { content: "=EF=81=A3"; }

.fa-mail-forward::before, .fa-share::before { content: "=EF=81=A4"; }

.fa-expand::before { content: "=EF=81=A5"; }

.fa-compress::before { content: "=EF=81=A6"; }

.fa-plus::before { content: "=EF=81=A7"; }

.fa-minus::before { content: "=EF=81=A8"; }

.fa-asterisk::before { content: "=EF=81=A9"; }

.fa-exclamation-circle::before { content: "=EF=81=AA"; }

.fa-gift::before { content: "=EF=81=AB"; }

.fa-leaf::before { content: "=EF=81=AC"; }

.fa-fire::before { content: "=EF=81=AD"; }

.fa-eye::before { content: "=EF=81=AE"; }

.fa-eye-slash::before { content: "=EF=81=B0"; }

.fa-warning::before, .fa-exclamation-triangle::before { content: "=EF=81=B1=
"; }

.fa-plane::before { content: "=EF=81=B2"; }

.fa-calendar::before { content: "=EF=81=B3"; }

.fa-random::before { content: "=EF=81=B4"; }

.fa-comment::before { content: "=EF=81=B5"; }

.fa-magnet::before { content: "=EF=81=B6"; }

.fa-chevron-up::before { content: "=EF=81=B7"; }

.fa-chevron-down::before { content: "=EF=81=B8"; }

.fa-retweet::before { content: "=EF=81=B9"; }

.fa-shopping-cart::before { content: "=EF=81=BA"; }

.fa-folder::before { content: "=EF=81=BB"; }

.fa-folder-open::before { content: "=EF=81=BC"; }

.fa-arrows-v::before { content: "=EF=81=BD"; }

.fa-arrows-h::before { content: "=EF=81=BE"; }

.fa-bar-chart-o::before, .fa-bar-chart::before { content: "=EF=82=80"; }

.fa-twitter-square::before { content: "=EF=82=81"; }

.fa-facebook-square::before { content: "=EF=82=82"; }

.fa-camera-retro::before { content: "=EF=82=83"; }

.fa-key::before { content: "=EF=82=84"; }

.fa-gears::before, .fa-cogs::before { content: "=EF=82=85"; }

.fa-comments::before { content: "=EF=82=86"; }

.fa-thumbs-o-up::before { content: "=EF=82=87"; }

.fa-thumbs-o-down::before { content: "=EF=82=88"; }

.fa-star-half::before { content: "=EF=82=89"; }

.fa-heart-o::before { content: "=EF=82=8A"; }

.fa-sign-out::before { content: "=EF=82=8B"; }

.fa-linkedin-square::before { content: "=EF=82=8C"; }

.fa-thumb-tack::before { content: "=EF=82=8D"; }

.fa-external-link::before { content: "=EF=82=8E"; }

.fa-sign-in::before { content: "=EF=82=90"; }

.fa-trophy::before { content: "=EF=82=91"; }

.fa-github-square::before { content: "=EF=82=92"; }

.fa-upload::before { content: "=EF=82=93"; }

.fa-lemon-o::before { content: "=EF=82=94"; }

.fa-phone::before { content: "=EF=82=95"; }

.fa-square-o::before { content: "=EF=82=96"; }

.fa-bookmark-o::before { content: "=EF=82=97"; }

.fa-phone-square::before { content: "=EF=82=98"; }

.fa-twitter::before { content: "=EF=82=99"; }

.fa-facebook-f::before, .fa-facebook::before { content: "=EF=82=9A"; }

.fa-github::before { content: "=EF=82=9B"; }

.fa-unlock::before { content: "=EF=82=9C"; }

.fa-credit-card::before { content: "=EF=82=9D"; }

.fa-feed::before, .fa-rss::before { content: "=EF=82=9E"; }

.fa-hdd-o::before { content: "=EF=82=A0"; }

.fa-bullhorn::before { content: "=EF=82=A1"; }

.fa-bell::before { content: "=EF=83=B3"; }

.fa-certificate::before { content: "=EF=82=A3"; }

.fa-hand-o-right::before { content: "=EF=82=A4"; }

.fa-hand-o-left::before { content: "=EF=82=A5"; }

.fa-hand-o-up::before { content: "=EF=82=A6"; }

.fa-hand-o-down::before { content: "=EF=82=A7"; }

.fa-arrow-circle-left::before { content: "=EF=82=A8"; }

.fa-arrow-circle-right::before { content: "=EF=82=A9"; }

.fa-arrow-circle-up::before { content: "=EF=82=AA"; }

.fa-arrow-circle-down::before { content: "=EF=82=AB"; }

.fa-globe::before { content: "=EF=82=AC"; }

.fa-wrench::before { content: "=EF=82=AD"; }

.fa-tasks::before { content: "=EF=82=AE"; }

.fa-filter::before { content: "=EF=82=B0"; }

.fa-briefcase::before { content: "=EF=82=B1"; }

.fa-arrows-alt::before { content: "=EF=82=B2"; }

.fa-group::before, .fa-users::before { content: "=EF=83=80"; }

.fa-chain::before, .fa-link::before { content: "=EF=83=81"; }

.fa-cloud::before { content: "=EF=83=82"; }

.fa-flask::before { content: "=EF=83=83"; }

.fa-cut::before, .fa-scissors::before { content: "=EF=83=84"; }

.fa-copy::before, .fa-files-o::before { content: "=EF=83=85"; }

.fa-paperclip::before { content: "=EF=83=86"; }

.fa-save::before, .fa-floppy-o::before { content: "=EF=83=87"; }

.fa-square::before { content: "=EF=83=88"; }

.fa-navicon::before, .fa-reorder::before, .fa-bars::before { content: "=EF=
=83=89"; }

.fa-list-ul::before { content: "=EF=83=8A"; }

.fa-list-ol::before { content: "=EF=83=8B"; }

.fa-strikethrough::before { content: "=EF=83=8C"; }

.fa-underline::before { content: "=EF=83=8D"; }

.fa-table::before { content: "=EF=83=8E"; }

.fa-magic::before { content: "=EF=83=90"; }

.fa-truck::before { content: "=EF=83=91"; }

.fa-pinterest::before { content: "=EF=83=92"; }

.fa-pinterest-square::before { content: "=EF=83=93"; }

.fa-google-plus-square::before { content: "=EF=83=94"; }

.fa-google-plus::before { content: "=EF=83=95"; }

.fa-money::before { content: "=EF=83=96"; }

.fa-caret-down::before { content: "=EF=83=97"; }

.fa-caret-up::before { content: "=EF=83=98"; }

.fa-caret-left::before { content: "=EF=83=99"; }

.fa-caret-right::before { content: "=EF=83=9A"; }

.fa-columns::before { content: "=EF=83=9B"; }

.fa-unsorted::before, .fa-sort::before { content: "=EF=83=9C"; }

.fa-sort-down::before, .fa-sort-desc::before { content: "=EF=83=9D"; }

.fa-sort-up::before, .fa-sort-asc::before { content: "=EF=83=9E"; }

.fa-envelope::before { content: "=EF=83=A0"; }

.fa-linkedin::before { content: "=EF=83=A1"; }

.fa-rotate-left::before, .fa-undo::before { content: "=EF=83=A2"; }

.fa-legal::before, .fa-gavel::before { content: "=EF=83=A3"; }

.fa-dashboard::before, .fa-tachometer::before { content: "=EF=83=A4"; }

.fa-comment-o::before { content: "=EF=83=A5"; }

.fa-comments-o::before { content: "=EF=83=A6"; }

.fa-flash::before, .fa-bolt::before { content: "=EF=83=A7"; }

.fa-sitemap::before { content: "=EF=83=A8"; }

.fa-umbrella::before { content: "=EF=83=A9"; }

.fa-paste::before, .fa-clipboard::before { content: "=EF=83=AA"; }

.fa-lightbulb-o::before { content: "=EF=83=AB"; }

.fa-exchange::before { content: "=EF=83=AC"; }

.fa-cloud-download::before { content: "=EF=83=AD"; }

.fa-cloud-upload::before { content: "=EF=83=AE"; }

.fa-user-md::before { content: "=EF=83=B0"; }

.fa-stethoscope::before { content: "=EF=83=B1"; }

.fa-suitcase::before { content: "=EF=83=B2"; }

.fa-bell-o::before { content: "=EF=82=A2"; }

.fa-coffee::before { content: "=EF=83=B4"; }

.fa-cutlery::before { content: "=EF=83=B5"; }

.fa-file-text-o::before { content: "=EF=83=B6"; }

.fa-building-o::before { content: "=EF=83=B7"; }

.fa-hospital-o::before { content: "=EF=83=B8"; }

.fa-ambulance::before { content: "=EF=83=B9"; }

.fa-medkit::before { content: "=EF=83=BA"; }

.fa-fighter-jet::before { content: "=EF=83=BB"; }

.fa-beer::before { content: "=EF=83=BC"; }

.fa-h-square::before { content: "=EF=83=BD"; }

.fa-plus-square::before { content: "=EF=83=BE"; }

.fa-angle-double-left::before { content: "=EF=84=80"; }

.fa-angle-double-right::before { content: "=EF=84=81"; }

.fa-angle-double-up::before { content: "=EF=84=82"; }

.fa-angle-double-down::before { content: "=EF=84=83"; }

.fa-angle-left::before { content: "=EF=84=84"; }

.fa-angle-right::before { content: "=EF=84=85"; }

.fa-angle-up::before { content: "=EF=84=86"; }

.fa-angle-down::before { content: "=EF=84=87"; }

.fa-desktop::before { content: "=EF=84=88"; }

.fa-laptop::before { content: "=EF=84=89"; }

.fa-tablet::before { content: "=EF=84=8A"; }

.fa-mobile-phone::before, .fa-mobile::before { content: "=EF=84=8B"; }

.fa-circle-o::before { content: "=EF=84=8C"; }

.fa-quote-left::before { content: "=EF=84=8D"; }

.fa-quote-right::before { content: "=EF=84=8E"; }

.fa-spinner::before { content: "=EF=84=90"; }

.fa-circle::before { content: "=EF=84=91"; }

.fa-mail-reply::before, .fa-reply::before { content: "=EF=84=92"; }

.fa-github-alt::before { content: "=EF=84=93"; }

.fa-folder-o::before { content: "=EF=84=94"; }

.fa-folder-open-o::before { content: "=EF=84=95"; }

.fa-smile-o::before { content: "=EF=84=98"; }

.fa-frown-o::before { content: "=EF=84=99"; }

.fa-meh-o::before { content: "=EF=84=9A"; }

.fa-gamepad::before { content: "=EF=84=9B"; }

.fa-keyboard-o::before { content: "=EF=84=9C"; }

.fa-flag-o::before { content: "=EF=84=9D"; }

.fa-flag-checkered::before { content: "=EF=84=9E"; }

.fa-terminal::before { content: "=EF=84=A0"; }

.fa-code::before { content: "=EF=84=A1"; }

.fa-mail-reply-all::before, .fa-reply-all::before { content: "=EF=84=A2"; }

.fa-star-half-empty::before, .fa-star-half-full::before, .fa-star-half-o::b=
efore { content: "=EF=84=A3"; }

.fa-location-arrow::before { content: "=EF=84=A4"; }

.fa-crop::before { content: "=EF=84=A5"; }

.fa-code-fork::before { content: "=EF=84=A6"; }

.fa-unlink::before, .fa-chain-broken::before { content: "=EF=84=A7"; }

.fa-question::before { content: "=EF=84=A8"; }

.fa-info::before { content: "=EF=84=A9"; }

.fa-exclamation::before { content: "=EF=84=AA"; }

.fa-superscript::before { content: "=EF=84=AB"; }

.fa-subscript::before { content: "=EF=84=AC"; }

.fa-eraser::before { content: "=EF=84=AD"; }

.fa-puzzle-piece::before { content: "=EF=84=AE"; }

.fa-microphone::before { content: "=EF=84=B0"; }

.fa-microphone-slash::before { content: "=EF=84=B1"; }

.fa-shield::before { content: "=EF=84=B2"; }

.fa-calendar-o::before { content: "=EF=84=B3"; }

.fa-fire-extinguisher::before { content: "=EF=84=B4"; }

.fa-rocket::before { content: "=EF=84=B5"; }

.fa-maxcdn::before { content: "=EF=84=B6"; }

.fa-chevron-circle-left::before { content: "=EF=84=B7"; }

.fa-chevron-circle-right::before { content: "=EF=84=B8"; }

.fa-chevron-circle-up::before { content: "=EF=84=B9"; }

.fa-chevron-circle-down::before { content: "=EF=84=BA"; }

.fa-html5::before { content: "=EF=84=BB"; }

.fa-css3::before { content: "=EF=84=BC"; }

.fa-anchor::before { content: "=EF=84=BD"; }

.fa-unlock-alt::before { content: "=EF=84=BE"; }

.fa-bullseye::before { content: "=EF=85=80"; }

.fa-ellipsis-h::before { content: "=EF=85=81"; }

.fa-ellipsis-v::before { content: "=EF=85=82"; }

.fa-rss-square::before { content: "=EF=85=83"; }

.fa-play-circle::before { content: "=EF=85=84"; }

.fa-ticket::before { content: "=EF=85=85"; }

.fa-minus-square::before { content: "=EF=85=86"; }

.fa-minus-square-o::before { content: "=EF=85=87"; }

.fa-level-up::before { content: "=EF=85=88"; }

.fa-level-down::before { content: "=EF=85=89"; }

.fa-check-square::before { content: "=EF=85=8A"; }

.fa-pencil-square::before { content: "=EF=85=8B"; }

.fa-external-link-square::before { content: "=EF=85=8C"; }

.fa-share-square::before { content: "=EF=85=8D"; }

.fa-compass::before { content: "=EF=85=8E"; }

.fa-toggle-down::before, .fa-caret-square-o-down::before { content: "=EF=85=
=90"; }

.fa-toggle-up::before, .fa-caret-square-o-up::before { content: "=EF=85=91"=
; }

.fa-toggle-right::before, .fa-caret-square-o-right::before { content: "=EF=
=85=92"; }

.fa-euro::before, .fa-eur::before { content: "=EF=85=93"; }

.fa-gbp::before { content: "=EF=85=94"; }

.fa-dollar::before, .fa-usd::before { content: "=EF=85=95"; }

.fa-rupee::before, .fa-inr::before { content: "=EF=85=96"; }

.fa-cny::before, .fa-rmb::before, .fa-yen::before, .fa-jpy::before { conten=
t: "=EF=85=97"; }

.fa-ruble::before, .fa-rouble::before, .fa-rub::before { content: "=EF=85=
=98"; }

.fa-won::before, .fa-krw::before { content: "=EF=85=99"; }

.fa-bitcoin::before, .fa-btc::before { content: "=EF=85=9A"; }

.fa-file::before { content: "=EF=85=9B"; }

.fa-file-text::before { content: "=EF=85=9C"; }

.fa-sort-alpha-asc::before { content: "=EF=85=9D"; }

.fa-sort-alpha-desc::before { content: "=EF=85=9E"; }

.fa-sort-amount-asc::before { content: "=EF=85=A0"; }

.fa-sort-amount-desc::before { content: "=EF=85=A1"; }

.fa-sort-numeric-asc::before { content: "=EF=85=A2"; }

.fa-sort-numeric-desc::before { content: "=EF=85=A3"; }

.fa-thumbs-up::before { content: "=EF=85=A4"; }

.fa-thumbs-down::before { content: "=EF=85=A5"; }

.fa-youtube-square::before { content: "=EF=85=A6"; }

.fa-youtube::before { content: "=EF=85=A7"; }

.fa-xing::before { content: "=EF=85=A8"; }

.fa-xing-square::before { content: "=EF=85=A9"; }

.fa-youtube-play::before { content: "=EF=85=AA"; }

.fa-dropbox::before { content: "=EF=85=AB"; }

.fa-stack-overflow::before { content: "=EF=85=AC"; }

.fa-instagram::before { content: "=EF=85=AD"; }

.fa-flickr::before { content: "=EF=85=AE"; }

.fa-adn::before { content: "=EF=85=B0"; }

.fa-bitbucket::before { content: "=EF=85=B1"; }

.fa-bitbucket-square::before { content: "=EF=85=B2"; }

.fa-tumblr::before { content: "=EF=85=B3"; }

.fa-tumblr-square::before { content: "=EF=85=B4"; }

.fa-long-arrow-down::before { content: "=EF=85=B5"; }

.fa-long-arrow-up::before { content: "=EF=85=B6"; }

.fa-long-arrow-left::before { content: "=EF=85=B7"; }

.fa-long-arrow-right::before { content: "=EF=85=B8"; }

.fa-apple::before { content: "=EF=85=B9"; }

.fa-windows::before { content: "=EF=85=BA"; }

.fa-android::before { content: "=EF=85=BB"; }

.fa-linux::before { content: "=EF=85=BC"; }

.fa-dribbble::before { content: "=EF=85=BD"; }

.fa-skype::before { content: "=EF=85=BE"; }

.fa-foursquare::before { content: "=EF=86=80"; }

.fa-trello::before { content: "=EF=86=81"; }

.fa-female::before { content: "=EF=86=82"; }

.fa-male::before { content: "=EF=86=83"; }

.fa-gittip::before, .fa-gratipay::before { content: "=EF=86=84"; }

.fa-sun-o::before { content: "=EF=86=85"; }

.fa-moon-o::before { content: "=EF=86=86"; }

.fa-archive::before { content: "=EF=86=87"; }

.fa-bug::before { content: "=EF=86=88"; }

.fa-vk::before { content: "=EF=86=89"; }

.fa-weibo::before { content: "=EF=86=8A"; }

.fa-renren::before { content: "=EF=86=8B"; }

.fa-pagelines::before { content: "=EF=86=8C"; }

.fa-stack-exchange::before { content: "=EF=86=8D"; }

.fa-arrow-circle-o-right::before { content: "=EF=86=8E"; }

.fa-arrow-circle-o-left::before { content: "=EF=86=90"; }

.fa-toggle-left::before, .fa-caret-square-o-left::before { content: "=EF=86=
=91"; }

.fa-dot-circle-o::before { content: "=EF=86=92"; }

.fa-wheelchair::before { content: "=EF=86=93"; }

.fa-vimeo-square::before { content: "=EF=86=94"; }

.fa-turkish-lira::before, .fa-try::before { content: "=EF=86=95"; }

.fa-plus-square-o::before { content: "=EF=86=96"; }

.fa-space-shuttle::before { content: "=EF=86=97"; }

.fa-slack::before { content: "=EF=86=98"; }

.fa-envelope-square::before { content: "=EF=86=99"; }

.fa-wordpress::before { content: "=EF=86=9A"; }

.fa-openid::before { content: "=EF=86=9B"; }

.fa-institution::before, .fa-bank::before, .fa-university::before { content=
: "=EF=86=9C"; }

.fa-mortar-board::before, .fa-graduation-cap::before { content: "=EF=86=9D"=
; }

.fa-yahoo::before { content: "=EF=86=9E"; }

.fa-google::before { content: "=EF=86=A0"; }

.fa-reddit::before { content: "=EF=86=A1"; }

.fa-reddit-square::before { content: "=EF=86=A2"; }

.fa-stumbleupon-circle::before { content: "=EF=86=A3"; }

.fa-stumbleupon::before { content: "=EF=86=A4"; }

.fa-delicious::before { content: "=EF=86=A5"; }

.fa-digg::before { content: "=EF=86=A6"; }

.fa-pied-piper-pp::before { content: "=EF=86=A7"; }

.fa-pied-piper-alt::before { content: "=EF=86=A8"; }

.fa-drupal::before { content: "=EF=86=A9"; }

.fa-joomla::before { content: "=EF=86=AA"; }

.fa-language::before { content: "=EF=86=AB"; }

.fa-fax::before { content: "=EF=86=AC"; }

.fa-building::before { content: "=EF=86=AD"; }

.fa-child::before { content: "=EF=86=AE"; }

.fa-paw::before { content: "=EF=86=B0"; }

.fa-spoon::before { content: "=EF=86=B1"; }

.fa-cube::before { content: "=EF=86=B2"; }

.fa-cubes::before { content: "=EF=86=B3"; }

.fa-behance::before { content: "=EF=86=B4"; }

.fa-behance-square::before { content: "=EF=86=B5"; }

.fa-steam::before { content: "=EF=86=B6"; }

.fa-steam-square::before { content: "=EF=86=B7"; }

.fa-recycle::before { content: "=EF=86=B8"; }

.fa-automobile::before, .fa-car::before { content: "=EF=86=B9"; }

.fa-cab::before, .fa-taxi::before { content: "=EF=86=BA"; }

.fa-tree::before { content: "=EF=86=BB"; }

.fa-spotify::before { content: "=EF=86=BC"; }

.fa-deviantart::before { content: "=EF=86=BD"; }

.fa-soundcloud::before { content: "=EF=86=BE"; }

.fa-database::before { content: "=EF=87=80"; }

.fa-file-pdf-o::before { content: "=EF=87=81"; }

.fa-file-word-o::before { content: "=EF=87=82"; }

.fa-file-excel-o::before { content: "=EF=87=83"; }

.fa-file-powerpoint-o::before { content: "=EF=87=84"; }

.fa-file-photo-o::before, .fa-file-picture-o::before, .fa-file-image-o::bef=
ore { content: "=EF=87=85"; }

.fa-file-zip-o::before, .fa-file-archive-o::before { content: "=EF=87=86"; =
}

.fa-file-sound-o::before, .fa-file-audio-o::before { content: "=EF=87=87"; =
}

.fa-file-movie-o::before, .fa-file-video-o::before { content: "=EF=87=88"; =
}

.fa-file-code-o::before { content: "=EF=87=89"; }

.fa-vine::before { content: "=EF=87=8A"; }

.fa-codepen::before { content: "=EF=87=8B"; }

.fa-jsfiddle::before { content: "=EF=87=8C"; }

.fa-life-bouy::before, .fa-life-buoy::before, .fa-life-saver::before, .fa-s=
upport::before, .fa-life-ring::before { content: "=EF=87=8D"; }

.fa-circle-o-notch::before { content: "=EF=87=8E"; }

.fa-ra::before, .fa-resistance::before, .fa-rebel::before { content: "=EF=
=87=90"; }

.fa-ge::before, .fa-empire::before { content: "=EF=87=91"; }

.fa-git-square::before { content: "=EF=87=92"; }

.fa-git::before { content: "=EF=87=93"; }

.fa-y-combinator-square::before, .fa-yc-square::before, .fa-hacker-news::be=
fore { content: "=EF=87=94"; }

.fa-tencent-weibo::before { content: "=EF=87=95"; }

.fa-qq::before { content: "=EF=87=96"; }

.fa-wechat::before, .fa-weixin::before { content: "=EF=87=97"; }

.fa-send::before, .fa-paper-plane::before { content: "=EF=87=98"; }

.fa-send-o::before, .fa-paper-plane-o::before { content: "=EF=87=99"; }

.fa-history::before { content: "=EF=87=9A"; }

.fa-circle-thin::before { content: "=EF=87=9B"; }

.fa-header::before { content: "=EF=87=9C"; }

.fa-paragraph::before { content: "=EF=87=9D"; }

.fa-sliders::before { content: "=EF=87=9E"; }

.fa-share-alt::before { content: "=EF=87=A0"; }

.fa-share-alt-square::before { content: "=EF=87=A1"; }

.fa-bomb::before { content: "=EF=87=A2"; }

.fa-soccer-ball-o::before, .fa-futbol-o::before { content: "=EF=87=A3"; }

.fa-tty::before { content: "=EF=87=A4"; }

.fa-binoculars::before { content: "=EF=87=A5"; }

.fa-plug::before { content: "=EF=87=A6"; }

.fa-slideshare::before { content: "=EF=87=A7"; }

.fa-twitch::before { content: "=EF=87=A8"; }

.fa-yelp::before { content: "=EF=87=A9"; }

.fa-newspaper-o::before { content: "=EF=87=AA"; }

.fa-wifi::before { content: "=EF=87=AB"; }

.fa-calculator::before { content: "=EF=87=AC"; }

.fa-paypal::before { content: "=EF=87=AD"; }

.fa-google-wallet::before { content: "=EF=87=AE"; }

.fa-cc-visa::before { content: "=EF=87=B0"; }

.fa-cc-mastercard::before { content: "=EF=87=B1"; }

.fa-cc-discover::before { content: "=EF=87=B2"; }

.fa-cc-amex::before { content: "=EF=87=B3"; }

.fa-cc-paypal::before { content: "=EF=87=B4"; }

.fa-cc-stripe::before { content: "=EF=87=B5"; }

.fa-bell-slash::before { content: "=EF=87=B6"; }

.fa-bell-slash-o::before { content: "=EF=87=B7"; }

.fa-trash::before { content: "=EF=87=B8"; }

.fa-copyright::before { content: "=EF=87=B9"; }

.fa-at::before { content: "=EF=87=BA"; }

.fa-eyedropper::before { content: "=EF=87=BB"; }

.fa-paint-brush::before { content: "=EF=87=BC"; }

.fa-birthday-cake::before { content: "=EF=87=BD"; }

.fa-area-chart::before { content: "=EF=87=BE"; }

.fa-pie-chart::before { content: "=EF=88=80"; }

.fa-line-chart::before { content: "=EF=88=81"; }

.fa-lastfm::before { content: "=EF=88=82"; }

.fa-lastfm-square::before { content: "=EF=88=83"; }

.fa-toggle-off::before { content: "=EF=88=84"; }

.fa-toggle-on::before { content: "=EF=88=85"; }

.fa-bicycle::before { content: "=EF=88=86"; }

.fa-bus::before { content: "=EF=88=87"; }

.fa-ioxhost::before { content: "=EF=88=88"; }

.fa-angellist::before { content: "=EF=88=89"; }

.fa-cc::before { content: "=EF=88=8A"; }

.fa-shekel::before, .fa-sheqel::before, .fa-ils::before { content: "=EF=88=
=8B"; }

.fa-meanpath::before { content: "=EF=88=8C"; }

.fa-buysellads::before { content: "=EF=88=8D"; }

.fa-connectdevelop::before { content: "=EF=88=8E"; }

.fa-dashcube::before { content: "=EF=88=90"; }

.fa-forumbee::before { content: "=EF=88=91"; }

.fa-leanpub::before { content: "=EF=88=92"; }

.fa-sellsy::before { content: "=EF=88=93"; }

.fa-shirtsinbulk::before { content: "=EF=88=94"; }

.fa-simplybuilt::before { content: "=EF=88=95"; }

.fa-skyatlas::before { content: "=EF=88=96"; }

.fa-cart-plus::before { content: "=EF=88=97"; }

.fa-cart-arrow-down::before { content: "=EF=88=98"; }

.fa-diamond::before { content: "=EF=88=99"; }

.fa-ship::before { content: "=EF=88=9A"; }

.fa-user-secret::before { content: "=EF=88=9B"; }

.fa-motorcycle::before { content: "=EF=88=9C"; }

.fa-street-view::before { content: "=EF=88=9D"; }

.fa-heartbeat::before { content: "=EF=88=9E"; }

.fa-venus::before { content: "=EF=88=A1"; }

.fa-mars::before { content: "=EF=88=A2"; }

.fa-mercury::before { content: "=EF=88=A3"; }

.fa-intersex::before, .fa-transgender::before { content: "=EF=88=A4"; }

.fa-transgender-alt::before { content: "=EF=88=A5"; }

.fa-venus-double::before { content: "=EF=88=A6"; }

.fa-mars-double::before { content: "=EF=88=A7"; }

.fa-venus-mars::before { content: "=EF=88=A8"; }

.fa-mars-stroke::before { content: "=EF=88=A9"; }

.fa-mars-stroke-v::before { content: "=EF=88=AA"; }

.fa-mars-stroke-h::before { content: "=EF=88=AB"; }

.fa-neuter::before { content: "=EF=88=AC"; }

.fa-genderless::before { content: "=EF=88=AD"; }

.fa-facebook-official::before { content: "=EF=88=B0"; }

.fa-pinterest-p::before { content: "=EF=88=B1"; }

.fa-whatsapp::before { content: "=EF=88=B2"; }

.fa-server::before { content: "=EF=88=B3"; }

.fa-user-plus::before { content: "=EF=88=B4"; }

.fa-user-times::before { content: "=EF=88=B5"; }

.fa-hotel::before, .fa-bed::before { content: "=EF=88=B6"; }

.fa-viacoin::before { content: "=EF=88=B7"; }

.fa-train::before { content: "=EF=88=B8"; }

.fa-subway::before { content: "=EF=88=B9"; }

.fa-medium::before { content: "=EF=88=BA"; }

.fa-yc::before, .fa-y-combinator::before { content: "=EF=88=BB"; }

.fa-optin-monster::before { content: "=EF=88=BC"; }

.fa-opencart::before { content: "=EF=88=BD"; }

.fa-expeditedssl::before { content: "=EF=88=BE"; }

.fa-battery-4::before, .fa-battery::before, .fa-battery-full::before { cont=
ent: "=EF=89=80"; }

.fa-battery-3::before, .fa-battery-three-quarters::before { content: "=EF=
=89=81"; }

.fa-battery-2::before, .fa-battery-half::before { content: "=EF=89=82"; }

.fa-battery-1::before, .fa-battery-quarter::before { content: "=EF=89=83"; =
}

.fa-battery-0::before, .fa-battery-empty::before { content: "=EF=89=84"; }

.fa-mouse-pointer::before { content: "=EF=89=85"; }

.fa-i-cursor::before { content: "=EF=89=86"; }

.fa-object-group::before { content: "=EF=89=87"; }

.fa-object-ungroup::before { content: "=EF=89=88"; }

.fa-sticky-note::before { content: "=EF=89=89"; }

.fa-sticky-note-o::before { content: "=EF=89=8A"; }

.fa-cc-jcb::before { content: "=EF=89=8B"; }

.fa-cc-diners-club::before { content: "=EF=89=8C"; }

.fa-clone::before { content: "=EF=89=8D"; }

.fa-balance-scale::before { content: "=EF=89=8E"; }

.fa-hourglass-o::before { content: "=EF=89=90"; }

.fa-hourglass-1::before, .fa-hourglass-start::before { content: "=EF=89=91"=
; }

.fa-hourglass-2::before, .fa-hourglass-half::before { content: "=EF=89=92";=
 }

.fa-hourglass-3::before, .fa-hourglass-end::before { content: "=EF=89=93"; =
}

.fa-hourglass::before { content: "=EF=89=94"; }

.fa-hand-grab-o::before, .fa-hand-rock-o::before { content: "=EF=89=95"; }

.fa-hand-stop-o::before, .fa-hand-paper-o::before { content: "=EF=89=96"; }

.fa-hand-scissors-o::before { content: "=EF=89=97"; }

.fa-hand-lizard-o::before { content: "=EF=89=98"; }

.fa-hand-spock-o::before { content: "=EF=89=99"; }

.fa-hand-pointer-o::before { content: "=EF=89=9A"; }

.fa-hand-peace-o::before { content: "=EF=89=9B"; }

.fa-trademark::before { content: "=EF=89=9C"; }

.fa-registered::before { content: "=EF=89=9D"; }

.fa-creative-commons::before { content: "=EF=89=9E"; }

.fa-gg::before { content: "=EF=89=A0"; }

.fa-gg-circle::before { content: "=EF=89=A1"; }

.fa-tripadvisor::before { content: "=EF=89=A2"; }

.fa-odnoklassniki::before { content: "=EF=89=A3"; }

.fa-odnoklassniki-square::before { content: "=EF=89=A4"; }

.fa-get-pocket::before { content: "=EF=89=A5"; }

.fa-wikipedia-w::before { content: "=EF=89=A6"; }

.fa-safari::before { content: "=EF=89=A7"; }

.fa-chrome::before { content: "=EF=89=A8"; }

.fa-firefox::before { content: "=EF=89=A9"; }

.fa-opera::before { content: "=EF=89=AA"; }

.fa-internet-explorer::before { content: "=EF=89=AB"; }

.fa-tv::before, .fa-television::before { content: "=EF=89=AC"; }

.fa-contao::before { content: "=EF=89=AD"; }

.fa-500px::before { content: "=EF=89=AE"; }

.fa-amazon::before { content: "=EF=89=B0"; }

.fa-calendar-plus-o::before { content: "=EF=89=B1"; }

.fa-calendar-minus-o::before { content: "=EF=89=B2"; }

.fa-calendar-times-o::before { content: "=EF=89=B3"; }

.fa-calendar-check-o::before { content: "=EF=89=B4"; }

.fa-industry::before { content: "=EF=89=B5"; }

.fa-map-pin::before { content: "=EF=89=B6"; }

.fa-map-signs::before { content: "=EF=89=B7"; }

.fa-map-o::before { content: "=EF=89=B8"; }

.fa-map::before { content: "=EF=89=B9"; }

.fa-commenting::before { content: "=EF=89=BA"; }

.fa-commenting-o::before { content: "=EF=89=BB"; }

.fa-houzz::before { content: "=EF=89=BC"; }

.fa-vimeo::before { content: "=EF=89=BD"; }

.fa-black-tie::before { content: "=EF=89=BE"; }

.fa-fonticons::before { content: "=EF=8A=80"; }

.fa-reddit-alien::before { content: "=EF=8A=81"; }

.fa-edge::before { content: "=EF=8A=82"; }

.fa-credit-card-alt::before { content: "=EF=8A=83"; }

.fa-codiepie::before { content: "=EF=8A=84"; }

.fa-modx::before { content: "=EF=8A=85"; }

.fa-fort-awesome::before { content: "=EF=8A=86"; }

.fa-usb::before { content: "=EF=8A=87"; }

.fa-product-hunt::before { content: "=EF=8A=88"; }

.fa-mixcloud::before { content: "=EF=8A=89"; }

.fa-scribd::before { content: "=EF=8A=8A"; }

.fa-pause-circle::before { content: "=EF=8A=8B"; }

.fa-pause-circle-o::before { content: "=EF=8A=8C"; }

.fa-stop-circle::before { content: "=EF=8A=8D"; }

.fa-stop-circle-o::before { content: "=EF=8A=8E"; }

.fa-shopping-bag::before { content: "=EF=8A=90"; }

.fa-shopping-basket::before { content: "=EF=8A=91"; }

.fa-hashtag::before { content: "=EF=8A=92"; }

.fa-bluetooth::before { content: "=EF=8A=93"; }

.fa-bluetooth-b::before { content: "=EF=8A=94"; }

.fa-percent::before { content: "=EF=8A=95"; }

.fa-gitlab::before { content: "=EF=8A=96"; }

.fa-wpbeginner::before { content: "=EF=8A=97"; }

.fa-wpforms::before { content: "=EF=8A=98"; }

.fa-envira::before { content: "=EF=8A=99"; }

.fa-universal-access::before { content: "=EF=8A=9A"; }

.fa-wheelchair-alt::before { content: "=EF=8A=9B"; }

.fa-question-circle-o::before { content: "=EF=8A=9C"; }

.fa-blind::before { content: "=EF=8A=9D"; }

.fa-audio-description::before { content: "=EF=8A=9E"; }

.fa-volume-control-phone::before { content: "=EF=8A=A0"; }

.fa-braille::before { content: "=EF=8A=A1"; }

.fa-assistive-listening-systems::before { content: "=EF=8A=A2"; }

.fa-asl-interpreting::before, .fa-american-sign-language-interpreting::befo=
re { content: "=EF=8A=A3"; }

.fa-deafness::before, .fa-hard-of-hearing::before, .fa-deaf::before { conte=
nt: "=EF=8A=A4"; }

.fa-glide::before { content: "=EF=8A=A5"; }

.fa-glide-g::before { content: "=EF=8A=A6"; }

.fa-signing::before, .fa-sign-language::before { content: "=EF=8A=A7"; }

.fa-low-vision::before { content: "=EF=8A=A8"; }

.fa-viadeo::before { content: "=EF=8A=A9"; }

.fa-viadeo-square::before { content: "=EF=8A=AA"; }

.fa-snapchat::before { content: "=EF=8A=AB"; }

.fa-snapchat-ghost::before { content: "=EF=8A=AC"; }

.fa-snapchat-square::before { content: "=EF=8A=AD"; }

.fa-pied-piper::before { content: "=EF=8A=AE"; }

.fa-first-order::before { content: "=EF=8A=B0"; }

.fa-yoast::before { content: "=EF=8A=B1"; }

.fa-themeisle::before { content: "=EF=8A=B2"; }

.fa-google-plus-circle::before, .fa-google-plus-official::before { content:=
 "=EF=8A=B3"; }

.fa-fa::before, .fa-font-awesome::before { content: "=EF=8A=B4"; }

.fa-handshake-o::before { content: "=EF=8A=B5"; }

.fa-envelope-open::before { content: "=EF=8A=B6"; }

.fa-envelope-open-o::before { content: "=EF=8A=B7"; }

.fa-linode::before { content: "=EF=8A=B8"; }

.fa-address-book::before { content: "=EF=8A=B9"; }

.fa-address-book-o::before { content: "=EF=8A=BA"; }

.fa-vcard::before, .fa-address-card::before { content: "=EF=8A=BB"; }

.fa-vcard-o::before, .fa-address-card-o::before { content: "=EF=8A=BC"; }

.fa-user-circle::before { content: "=EF=8A=BD"; }

.fa-user-circle-o::before { content: "=EF=8A=BE"; }

.fa-user-o::before { content: "=EF=8B=80"; }

.fa-id-badge::before { content: "=EF=8B=81"; }

.fa-drivers-license::before, .fa-id-card::before { content: "=EF=8B=82"; }

.fa-drivers-license-o::before, .fa-id-card-o::before { content: "=EF=8B=83"=
; }

.fa-quora::before { content: "=EF=8B=84"; }

.fa-free-code-camp::before { content: "=EF=8B=85"; }

.fa-telegram::before { content: "=EF=8B=86"; }

.fa-thermometer-4::before, .fa-thermometer::before, .fa-thermometer-full::b=
efore { content: "=EF=8B=87"; }

.fa-thermometer-3::before, .fa-thermometer-three-quarters::before { content=
: "=EF=8B=88"; }

.fa-thermometer-2::before, .fa-thermometer-half::before { content: "=EF=8B=
=89"; }

.fa-thermometer-1::before, .fa-thermometer-quarter::before { content: "=EF=
=8B=8A"; }

.fa-thermometer-0::before, .fa-thermometer-empty::before { content: "=EF=8B=
=8B"; }

.fa-shower::before { content: "=EF=8B=8C"; }

.fa-bathtub::before, .fa-s15::before, .fa-bath::before { content: "=EF=8B=
=8D"; }

.fa-podcast::before { content: "=EF=8B=8E"; }

.fa-window-maximize::before { content: "=EF=8B=90"; }

.fa-window-minimize::before { content: "=EF=8B=91"; }

.fa-window-restore::before { content: "=EF=8B=92"; }

.fa-times-rectangle::before, .fa-window-close::before { content: "=EF=8B=93=
"; }

.fa-times-rectangle-o::before, .fa-window-close-o::before { content: "=EF=
=8B=94"; }

.fa-bandcamp::before { content: "=EF=8B=95"; }

.fa-grav::before { content: "=EF=8B=96"; }

.fa-etsy::before { content: "=EF=8B=97"; }

.fa-imdb::before { content: "=EF=8B=98"; }

.fa-ravelry::before { content: "=EF=8B=99"; }

.fa-eercast::before { content: "=EF=8B=9A"; }

.fa-microchip::before { content: "=EF=8B=9B"; }

.fa-snowflake-o::before { content: "=EF=8B=9C"; }

.fa-superpowers::before { content: "=EF=8B=9D"; }

.fa-wpexplorer::before { content: "=EF=8B=9E"; }

.fa-meetup::before { content: "=EF=8B=A0"; }

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; margi=
n: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); border: 0px; }

.sr-only-focusable:active, .sr-only-focusable:focus { position: static; wid=
th: auto; height: auto; margin: 0px; overflow: visible; clip: auto; }

.mfp-bg { top: 0px; left: 0px; width: 100%; height: 100%; z-index: 1042; ov=
erflow: hidden; position: fixed; background: rgb(11, 11, 11); opacity: 0.8;=
 }

.mfp-wrap { top: 0px; left: 0px; width: 100%; height: 100%; z-index: 1043; =
position: fixed; backface-visibility: hidden; outline: none !important; }

.mfp-container { text-align: center; position: absolute; width: 100%; heigh=
t: 100%; left: 0px; top: 0px; padding: 0px 8px; box-sizing: border-box; }

.mfp-container::before { content: ""; display: inline-block; height: 100%; =
vertical-align: middle; }

.mfp-align-top .mfp-container::before { display: none; }

.mfp-content { position: absolute; display: inline-block; vertical-align: m=
iddle; margin: 3% auto; left: 0px; text-align: left; z-index: 1045; }

.mfp-inline-holder .mfp-content, .mfp-ajax-holder .mfp-content { width: 100=
%; cursor: auto; }

.mfp-ajax-cur { cursor: progress; }

.mfp-zoom-out-cur, .mfp-zoom-out-cur .mfp-image-holder .mfp-close { cursor:=
 zoom-out; }

.mfp-zoom { cursor: zoom-in; }

.mfp-auto-cursor .mfp-content { cursor: auto; }

.mfp-close, .mfp-arrow, .mfp-preloader, .mfp-counter { user-select: none; }

.mfp-loading.mfp-figure { display: none; }

.mfp-hide { display: none !important; }

.mfp-preloader { color: rgb(204, 204, 204); position: absolute; top: 50%; w=
idth: auto; text-align: center; margin-top: -0.8em; left: 8px; right: 8px; =
z-index: 1044; }

.mfp-preloader a { color: rgb(204, 204, 204); }

.mfp-preloader a:hover { color: rgb(255, 255, 255); }

.mfp-s-ready .mfp-preloader { display: none; }

.mfp-s-error .mfp-content { display: none; }

button.mfp-close, button.mfp-arrow { overflow: visible; cursor: pointer; ba=
ckground: transparent; border: 0px; appearance: none; display: block; outli=
ne: none; padding: 0px; z-index: 1046; box-shadow: none; touch-action: mani=
pulation; }

.mfp-close { width: 44px; height: 44px; line-height: 44px; position: absolu=
te; right: 0px; top: 0px; text-decoration: none; text-align: center; opacit=
y: 0.65; padding: 0px 0px 18px 10px; color: rgb(255, 255, 255); font-style:=
 normal; font-size: 28px; font-family: Arial, Baskerville, monospace; }

.mfp-close:hover, .mfp-close:focus { opacity: 1; }

.mfp-close:active { top: 1px; }

.mfp-close-btn-in .mfp-close { color: rgb(51, 51, 51); }

.mfp-image-holder .mfp-close, .mfp-iframe-holder .mfp-close { color: rgb(25=
5, 255, 255); right: -6px; text-align: right; padding-right: 6px; width: 10=
0%; }

.mfp-counter { position: absolute; top: 0px; right: 0px; color: rgb(204, 20=
4, 204); font-size: 12px; line-height: 18px; white-space: nowrap; }

.mfp-arrow { position: absolute; opacity: 0.65; margin: -55px 0px 0px; top:=
 50%; padding: 0px; width: 90px; height: 110px; -webkit-tap-highlight-color=
: transparent; }

.mfp-arrow:active { margin-top: -54px; }

.mfp-arrow:hover, .mfp-arrow:focus { opacity: 1; }

.mfp-arrow::before, .mfp-arrow::after { content: ""; display: block; width:=
 0px; height: 0px; position: absolute; left: 0px; top: 0px; margin-top: 35p=
x; margin-left: 35px; border: medium inset transparent; }

.mfp-arrow::after { border-top-width: 13px; border-bottom-width: 13px; top:=
 8px; }

.mfp-arrow::before { border-top-width: 21px; border-bottom-width: 21px; opa=
city: 0.7; }

.mfp-arrow-left { left: 0px; }

.mfp-arrow-left::after { border-right: 17px solid rgb(255, 255, 255); margi=
n-left: 31px; }

.mfp-arrow-left::before { margin-left: 25px; border-right: 27px solid rgb(6=
3, 63, 63); }

.mfp-arrow-right { right: 0px; }

.mfp-arrow-right::after { border-left: 17px solid rgb(255, 255, 255); margi=
n-left: 39px; }

.mfp-arrow-right::before { border-left: 27px solid rgb(63, 63, 63); }

.mfp-iframe-holder { padding-top: 40px; padding-bottom: 40px; }

.mfp-iframe-holder .mfp-content { line-height: 0; width: 100%; max-width: 9=
00px; }

.mfp-iframe-holder .mfp-close { top: -40px; }

.mfp-iframe-scaler { width: 100%; height: 0px; overflow: hidden; padding-to=
p: 56.25%; }

.mfp-iframe-scaler iframe { position: absolute; display: block; top: 0px; l=
eft: 0px; width: 100%; height: 100%; box-shadow: rgba(0, 0, 0, 0.6) 0px 0px=
 8px; background: rgb(0, 0, 0); }

img.mfp-img { width: auto; max-width: 100%; height: auto; display: block; l=
ine-height: 0; box-sizing: border-box; padding: 40px 0px; margin: 0px auto;=
 }

.mfp-figure { line-height: 0; }

.mfp-figure::after { content: ""; position: absolute; inset: 40px 0px; disp=
lay: block; width: auto; height: auto; z-index: -1; box-shadow: rgba(0, 0, =
0, 0.6) 0px 0px 8px; background: rgb(68, 68, 68); }

.mfp-figure small { color: rgb(189, 189, 189); display: block; font-size: 1=
2px; line-height: 14px; }

.mfp-figure figure { margin: 0px; }

.mfp-bottom-bar { margin-top: -36px; position: absolute; top: 100%; left: 0=
px; width: 100%; cursor: auto; }

.mfp-title { text-align: left; line-height: 18px; color: rgb(243, 243, 243)=
; overflow-wrap: break-word; padding-right: 36px; }

.mfp-image-holder .mfp-content { max-width: 100%; }

.mfp-gallery .mfp-image-holder .mfp-figure { cursor: pointer; }

@media screen and (max-width: 800px) and (orientation: landscape), screen a=
nd (max-height: 300px) {
  .mfp-img-mobile .mfp-image-holder { padding-left: 0px; padding-right: 0px=
; }
  .mfp-img-mobile img.mfp-img { padding: 0px; }
  .mfp-img-mobile .mfp-figure::after { top: 0px; bottom: 0px; }
  .mfp-img-mobile .mfp-figure small { display: inline; margin-left: 5px; }
  .mfp-img-mobile .mfp-bottom-bar { background: rgba(0, 0, 0, 0.6); bottom:=
 0px; margin: 0px; top: auto; padding: 3px 5px; position: fixed; box-sizing=
: border-box; }
  .mfp-img-mobile .mfp-bottom-bar:empty { padding: 0px; }
  .mfp-img-mobile .mfp-counter { right: 5px; top: 3px; }
  .mfp-img-mobile .mfp-close { top: 0px; right: 0px; width: 35px; height: 3=
5px; line-height: 35px; background: rgba(0, 0, 0, 0.6); position: fixed; te=
xt-align: center; padding: 0px; }
}

@media (max-width: 900px) {
  .mfp-arrow { transform: scale(0.75); }
  .mfp-arrow-left { transform-origin: 0px center; }
  .mfp-arrow-right { transform-origin: 100% center; }
  .mfp-container { padding-left: 6px; padding-right: 6px; }
}

.scrubber { margin-top: 10px; width: 200px; height: 40px; position: relativ=
e; }

.scrubber-vert { margin-left: 10px; width: 40px; height: 200px; position: r=
elative; }

.scrubber .track { position: absolute; top: 50%; left: 0px; width: 100%; he=
ight: 6px; background: rgb(221, 221, 221); border-radius: 3px; margin-top: =
-3px; }

.scrubber-vert .track { position: absolute; top: 0px; height: 100%; left: 5=
0%; width: 6px; background: rgb(221, 221, 221); border-radius: 3px; margin-=
left: -3px; }

.scrubber .thumb { box-sizing: border-box; position: absolute; top: 50%; le=
ft: 0px; width: 22px; height: 22px; margin-left: -11px; margin-top: -11px; =
cursor: pointer; opacity: 0.7; border: 8px solid rgb(190, 207, 228); border=
-radius: 100%; background: rgb(79, 129, 189); transition: border-width 0.2s=
 ease 0s; }

.scrubber-vert .thumb { box-sizing: border-box; position: absolute; top: 10=
0%; left: 50%; width: 22px; height: 22px; margin-top: -11px; margin-left: -=
11px; cursor: pointer; opacity: 0.7; border: 8px solid rgb(190, 207, 228); =
border-radius: 100%; background: rgb(79, 129, 189); transition: border-widt=
h 0.2s ease 0s; }

.scrubber .thumb:hover, .scrubber-vert .thumb:hover, .thumb.dragging { bord=
er-width: 0px; opacity: 1; }
------MultipartBoundary--xuw2UVmZ3Veg0bio4EzmkENqo26lwNH9MTx2EuvV0n----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.rithmschool.com/assets/main-69beda904921e3c333ed21f2aed0c331bf01b1bd1cf64ee9df327720a9ef7e99.css

@charset "utf-8";

@font-face { font-family: GalaxiePolaris-Bold; src: url("/assets/Galaxie-Po=
laris-Bold-af95fbd86d308472fd53baf497a3b75801195ffc5c0ea0769c4eac58261780fa=
.otf") format("truetype"); font-weight: normal; font-style: normal; }

@font-face { font-family: GalaxiePolaris-Book; src: url("/assets/Galaxie-Po=
laris-Book-23c65746ad2a4839e3f61abcbc2cf7c9d4d9810a4f9080ab0e20f271dc0ea73f=
.otf") format("truetype"); font-weight: normal; font-style: normal; }

@font-face { font-family: RobotoMono-LightItalic; src: url("/assets/RobotoM=
ono-LightItalic-9071f1d4f5ec68ec161fc6ae378a7536d92ae9ab730ef079346749a102f=
2d657.ttf") format("truetype"); font-weight: normal; font-style: normal; }

.full-width, .faq { width: 100vw; position: relative; left: 50%; right: 50%=
; margin-left: -50vw; margin-right: -50vw; }

@font-face { font-family: GalaxiePolaris-Bold; src: url("/assets/Galaxie-Po=
laris-Bold-af95fbd86d308472fd53baf497a3b75801195ffc5c0ea0769c4eac58261780fa=
.otf") format("truetype"); font-weight: normal; font-style: normal; }

@font-face { font-family: GalaxiePolaris-Book; src: url("/assets/Galaxie-Po=
laris-Book-23c65746ad2a4839e3f61abcbc2cf7c9d4d9810a4f9080ab0e20f271dc0ea73f=
.otf") format("truetype"); font-weight: normal; font-style: normal; }

@font-face { font-family: RobotoMono-LightItalic; src: url("/assets/RobotoM=
ono-LightItalic-9071f1d4f5ec68ec161fc6ae378a7536d92ae9ab730ef079346749a102f=
2d657.ttf") format("truetype"); font-weight: normal; font-style: normal; }

.full-width, .faq { width: 100vw; position: relative; left: 50%; right: 50%=
; margin-left: -50vw; margin-right: -50vw; }

#blogs { padding: 3rem; }

#blogs .outcomes-heading { text-align: center; }

#blogs .card { margin: 1rem; padding: 0px; border-radius: 5px; }

#blogs .card a { padding: 1rem 2rem; display: flex; flex-direction: column;=
 justify-content: space-between; height: 100%; border-radius: 5px; }

#blogs .card a h5 { margin-left: auto; }

#blogs .card a:hover { text-decoration: none; background-color: rgb(227, 22=
7, 227); }

#blogs .card a:hover h4 { text-decoration: underline; }

@media (min-width: 968px) {
  #blogs .row { display: flex; justify-content: center; }
}

@media (max-width: 968px) {
  #blogs .card:last-child { margin-bottom: 0px; }
}

#blogs a:hover h5 { text-decoration: none; }

.navbar-toggle { margin: 0px; }

@media (max-width: 1200px) {
  nav .container-fluid { display: block !important; }
  .navbar-header { float: none; }
  .navbar-left, .navbar-right { float: none !important; }
  .navbar-toggle { display: block; }
  .navbar-collapse { border-top: 1px solid transparent; box-shadow: rgba(25=
5, 255, 255, 0.1) 0px 1px 0px inset; }
  .navbar-fixed-top { top: 0px; border-width: 0px 0px 1px; }
  .navbar-collapse.collapse { display: none !important; }
  .navbar-nav { margin-top: 7.5px; float: none !important; }
  .navbar-nav > li { float: none; }
  .navbar-nav > li > a { padding-top: 10px; padding-bottom: 10px; }
  .collapse.in { display: block !important; }
}

.navbar-header a { display: flex; align-items: center; }

nav { margin: 20px; }

nav .container-fluid { display: flex; align-items: center; justify-content:=
 center; }

@media (max-width: 900px) {
  nav .container-fluid { display: block; }
}

.email-known { display: block; margin-top: -20px; text-align: center; }

.row.is-flex { display: flex; flex-wrap: wrap; }

.row.is-flex > [class*=3D"col-"] { display: flex; flex-direction: column; }

.social-buttons li { text-align: center; }

.begin-text { text-align: center; }

body { overflow-x: hidden; background: rgb(245, 245, 245); font: 16px / 25p=
x GalaxiePolaris-Book, sans-serif; }

.logo { margin-left: -10px; margin-top: -5px; }

.rotate { margin-top: 50px; font-style: normal !important; }

.text-muted { color: rgb(119, 119, 119); }

.text-primary { color: rgb(248, 97, 97); }

p { font: 16px / 25px GalaxiePolaris-Book, sans-serif; }

p b, p strong, li b, li strong { font-family: GalaxiePolaris-Bold; }

p.large { font-size: 16px; }

a, a:hover, a:focus, a:active, a.active { outline: none; }

a { color: rgb(248, 97, 97); }

a:hover, a:focus { color: rgb(246, 48, 48); }

.img-centered { margin: 0px auto; }

.bg-light-gray { background-color: rgb(238, 238, 238); }

.bg-darkest-gray { background-color: rgb(248, 97, 97); }

.btn-primary { color: black; background-color: rgb(248, 97, 97); border-col=
or: rgb(248, 97, 97); font: 700 16px / 25px GalaxiePolaris-Book, sans-serif=
; }

.btn-primary:hover, .btn-primary:focus, .btn-primary:active, .btn-primary.a=
ctive, .open .dropdown-toggle.btn-primary { color: rgb(0, 0, 0); background=
-color: rgb(248, 97, 97); border-color: rgb(248, 97, 97); }

.btn-primary:active, .btn-primary.active, .open .dropdown-toggle.btn-primar=
y { background-image: none; }

.btn-primary.disabled, .btn-primary[disabled], fieldset[disabled] .btn-prim=
ary, .btn-primary.disabled:hover, .btn-primary[disabled]:hover, fieldset[di=
sabled] .btn-primary:hover, .btn-primary.disabled:focus, .btn-primary[disab=
led]:focus, fieldset[disabled] .btn-primary:focus, .btn-primary.disabled:ac=
tive, .btn-primary[disabled]:active, fieldset[disabled] .btn-primary:active=
, .btn-primary.disabled.active, .btn-primary.active[disabled], fieldset[dis=
abled] .btn-primary.active { background-color: rgb(248, 97, 97); border-col=
or: rgb(248, 97, 97); }

.btn-primary .badge { color: rgb(248, 97, 97); background-color: rgb(0, 0, =
0); }

.btn-xl { color: black; background-color: rgb(248, 97, 97); border-color: r=
gb(248, 97, 97); font: 700 18px / 25px GalaxiePolaris-Book, sans-serif; bor=
der-radius: 3px; padding: 20px 40px; }

.btn-xl:hover, .btn-xl:focus, .btn-xl:active, .btn-xl.active, .open .dropdo=
wn-toggle.btn-xl { color: white; background-color: rgb(246, 48, 48); border=
-color: rgb(246, 48, 48); }

.btn-xl .badge { color: rgb(248, 97, 97); background-color: rgb(0, 0, 0); }

.text-white, .text-white:hover { color: white; }

.navbar-custom { background-color: rgb(245, 245, 245); border-color: transp=
arent; }

.navbar-custom .navbar-brand { color: rgb(248, 97, 97); font-family: "Kaush=
an Script", "Helvetica Neue", Helvetica, Arial, cursive; }

.navbar-custom .navbar-brand:hover, .navbar-custom .navbar-brand:focus, .na=
vbar-custom .navbar-brand:active, .navbar-custom .navbar-brand.active { col=
or: rgb(248, 97, 97); }

.navbar-custom .navbar-collapse { border-color: rgba(255, 255, 255, 0.02); =
}

.navbar-custom .navbar-toggle { background-color: rgb(245, 245, 245); borde=
r-color: rgb(245, 245, 245); font: 12px / 25px GalaxiePolaris-Book, sans-se=
rif; color: rgb(0, 0, 0); }

.navbar-custom .navbar-toggle:hover, .navbar-custom .navbar-toggle:focus { =
background-color: rgb(245, 245, 245); }

.navbar-custom .nav li a { color: rgb(51, 51, 51); font-size: 16px; font-fa=
mily: GalaxiePolaris-Bold; line-height: 1.3; text-transform: none; }

.navbar-custom .nav li a:hover, .navbar-custom .nav li a:focus { color: rgb=
(246, 48, 48); outline: none; }

.navbar-custom .navbar-nav > .active > a { border-radius: 0px; color: rgb(0=
, 0, 0); background-color: rgb(248, 97, 97); }

.navbar-custom .navbar-nav > .active > a:hover, .navbar-custom .navbar-nav =
> .active > a:focus { color: rgb(0, 0, 0); background-color: rgb(248, 97, 9=
7); }

.intro-text { height: 400px; }

.intro-text .heading { margin-bottom: 10px; }

.header-text, .header-text > .heading, .header-text > .text-muted { color: =
rgb(255, 255, 255); text-shadow: black 0px 0px 10px; }

.header-text .text-muted, .header-text > .heading .text-muted, .header-text=
 > .text-muted .text-muted { font-size: 23px; }

.navbar-custom .nav li a.apply-now { color: rgb(255, 255, 255); background:=
 rgb(52, 152, 219); font-size: 15px; letter-spacing: -0.1px; line-height: 1=
.9; width: 140px; text-align: center; border-radius: 10px; padding: 6px; ma=
rgin-top: 6px; margin-left: 10px; }

.navbar-custom .nav li a.apply-now:hover { background: rgb(33, 125, 187); l=
etter-spacing: -0.1px; line-height: 1.9; text-align: center; border-radius:=
 10px; padding: 6px; margin-top: 6px; margin-left: 10px; text-decoration: n=
one; }

.dropdown:hover .dropdown-menu { display: block; }

.dropdown-menu { background-color: rgb(245, 245, 245); }

.dropdown-menu li { padding-top: 3px; padding-bottom: 3px; }

a.apply-now { display: inline-block; font-family: GalaxiePolaris-Bold; colo=
r: rgb(255, 255, 255); background: rgb(52, 152, 219); font-size: 25px; lett=
er-spacing: -0.1px; line-height: 1.9; width: 240px; text-align: center; bor=
der-radius: 10px; padding: 6px; margin-top: 20px; margin-left: 0px; }

a.apply-now:hover { background: rgb(33, 125, 187); letter-spacing: -0.1px; =
line-height: 1.9; text-align: center; border-radius: 10px; padding: 6px; ma=
rgin-top: 20px; margin-left: 0px; text-decoration: none; }

.heading { font: 40px / 1.2 GalaxiePolaris-Bold, sans-serif; text-align: ce=
nter; color: black; letter-spacing: -0.5px; margin-bottom: 20px; }

#mailing-list, .b2b-mailing-list { font-size: 1em; letter-spacing: -0.1px; =
line-height: 1.9; width: 30%; text-align: center; margin-top: 0px; margin-l=
eft: 0px; border: 1px solid rgb(248, 97, 97); color: rgb(248, 97, 97); back=
ground: none; border-radius: 8px; padding: 3px; font-weight: bold; }

#mailing-list:hover, .b2b-mailing-list:hover { background: rgb(33, 125, 187=
); letter-spacing: -0.1px; line-height: 1.9; text-align: center; border-rad=
ius: 10px; padding: 6px; margin-top: 0px; margin-left: 0px; text-decoration=
: none; }

#mailing-list:hover, .b2b-mailing-list:hover { border: 1px solid black; pad=
ding: 3px; color: black; background: none; }

footer .form-inline .form-group { width: 100%; }

.form-inline .form-control.email_signup { width: 60%; margin-right: 10px; }

.thank_you { display: none; }

#banner-alert { text-align: center; width: 100%; color: white; padding: 3px=
 0px; font: 16px / 38px GalaxiePolaris-Book, sans-serif; background: rgb(24=
8, 97, 97); }

#banner-alert:focus { text-decoration: none; }

#banner-alert p.close { font-size: 2em; margin: 5px -5px 0px 0px; padding: =
0px 30px; text-shadow: none; opacity: 0.7; color: white; }

#banner-alert p.close:hover { opacity: 1; }

#banner-alert:hover { background: rgb(246, 48, 48); text-decoration: none; =
}

@media (max-width: 525px) {
  #banner-alert { line-height: 22px; }
  #banner-alert p.close { font-size: 2em; margin: 5px 0px 0px; padding: 0px=
 5px; }
}

@media (min-width: 991px) {
  .navbar-custom { transition: padding 0.3s ease 0s; border: none; }
  .navbar-custom .navbar-brand { font-size: 2em; transition: all 0.3s ease =
0s; }
  .navbar-custom .navbar-nav > .active > a { border-radius: 3px; }
  .navbar-custom.affix { background-color: transparent; padding: 10px 0px; =
}
  .navbar-custom.affix .navbar-brand { font-size: 1.5em; }
}

header { background-repeat: no-repeat; background-attachment: scroll; backg=
round-position: center center; background-size: cover; text-align: center; =
color: rgb(0, 0, 0); }

header .intro-text { padding-bottom: 10px; }

header .intro-text .intro-lead-in { font-family: "Droid Serif", "Helvetica =
Neue", Helvetica, Arial, sans-serif; font-style: italic; font-size: 22px; l=
ine-height: 22px; margin-bottom: 25px; }

header .intro-text .intro-heading { font: 700 30px / 50px GalaxiePolaris-Bo=
ok, sans-serif; margin-bottom: 25px; }

@media (min-width: 991px) {
  header .intro-text .intro-lead-in { font-family: "Droid Serif", "Helvetic=
a Neue", Helvetica, Arial, sans-serif; font-style: italic; font-size: 40px;=
 line-height: 40px; margin-bottom: 25px; }
  header .intro-text .intro-heading { font: 700 50px / 1.42 GalaxiePolaris-=
Book, sans-serif; letter-spacing: 1px; margin-bottom: 50px; }
}

@media (max-width: 991px) {
  .heading { font-size: 36px; }
  #mail-form.form-control { display: inline; width: inherit; }
}

@media (max-width: 992px) {
  .form-inline .form-control.email_signup, #mailing-list, .b2b-mailing-list=
 { margin-top: 5px; margin-bottom: 20px; width: 70%; }
  #mailing-list:hover, .b2b-mailing-list { margin-top: 5px; }
}

@media (max-width: 470px) {
  .heading { font-size: 30px; }
}

.service-heading { text-align: left; font: 30px / 1.1 GalaxiePolaris-Bold, =
sans-serif; text-transform: none; padding: 10px 0px 3px; }

.service-heading h2 { margin-top: 0px; }

footer ul.quicklinks { margin-bottom: 0px; font: 16px / 25px GalaxiePolaris=
-Book, sans-serif; text-transform: none; }

ul.social-buttons { margin-bottom: 0px; }

ul.social-buttons li a { display: block; background-color: rgb(248, 97, 97)=
; height: 40px; width: 40px; border-radius: 100%; font-size: 20px; line-hei=
ght: 40px; color: rgb(0, 0, 0); outline: none; transition: all 0.3s ease 0s=
; }

ul.social-buttons li a:hover, ul.social-buttons li a:focus, ul.social-butto=
ns li a:active { background-color: rgb(248, 97, 97); }

.btn:focus, .btn:active, .btn.active, .btn:active:focus { outline: none; }

::selection { text-shadow: none; background: rgb(248, 97, 97); }

img::selection { background: transparent; }

ul.social-buttons li a:hover { color: white; }

hr { background: darkgrey; width: 100%; height: 1px; margin-top: 15px; }

footer .logo { margin-top: -10px; }

.copyright, .faq-url { display: block; }

@media (max-width: 766px) {
  .logo { display: none; }
  .col-sm-offset-2.col-sm-4 { text-align: center; }
  .copyright, .faq-url { padding: 5px; }
}

.list-inline > li { padding-left: 12px; }

.faq-url { margin-bottom: 7px; }

.copyright { margin: 5px 0px 15px; }

footer { padding-top: 50px; margin-top: 2rem; background-color: rgb(225, 22=
5, 225); }

footer .col-sm-offset-1.col-sm-4 { text-align: left; }

footer span .col-sm-offset-1.col-sm-4 { margin: 5px 0px 0px; }

footer .list-inline.social-buttons { text-align: center; }

.card { background: white; padding: 10px; margin-top: -10px; text-align: le=
ft; }

@media (max-width: 660px) {
  footer { padding: 0px; }
}

.application-info { margin-top: 20px; }

.errors { margin-bottom: 20px; }

#partnerships-unlock-form, #unlock-form { min-height: 502px; box-shadow: rg=
ba(0, 0, 0, 0.2) 0px 2px 4px; background: white; margin: -1% 22%; }

#partnerships-unlock-form label, #unlock-form label { display: block; max-w=
idth: 100%; margin-bottom: 0px; font-weight: normal; }

#partnerships-unlock-form input[type=3D"radio"], #partnerships-unlock-form =
input[type=3D"checkbox"], #unlock-form input[type=3D"radio"], #unlock-form =
input[type=3D"checkbox"] { border-radius: 10px; cursor: pointer; height: 15=
px; margin-right: 3px; position: relative; width: 15px; appearance: none; b=
order: 1px solid rgb(216, 216, 216); display: inline-block; }

#partnerships-unlock-form input[type=3D"radio"]::after, #partnerships-unloc=
k-form input[type=3D"checkbox"]::after, #unlock-form input[type=3D"radio"]:=
:after, #unlock-form input[type=3D"checkbox"]::after { background: white; c=
ontent: ""; display: block; width: 100%; height: 100%; border-radius: 100px=
; }

#partnerships-unlock-form input[type=3D"radio"]:checked::after, #partnershi=
ps-unlock-form input[type=3D"checkbox"]:checked::after, #unlock-form input[=
type=3D"radio"]:checked::after, #unlock-form input[type=3D"checkbox"]:check=
ed::after { background-color: rgb(248, 97, 97); }

#partnerships-unlock-form .form-control, #unlock-form .form-control { borde=
r-radius: 1px; }

#partnerships-unlock-form h1, #unlock-form h1 { font: 30px / 1.3 GalaxiePol=
aris-Bold, sans-serif; margin: 60px 7% 0px; }

#partnerships-unlock-form h5, #unlock-form h5 { font: 16px / 25px GalaxiePo=
laris-Book, sans-serif; }

#partnerships-unlock-form hr, #unlock-form hr { background: rgb(248, 97, 97=
); width: 100px; height: 8px; margin: 20px auto; }

#partnerships-unlock-form .btn-xl, #unlock-form .btn-xl { margin: 20px auto=
 40px; padding: 10px 120px; display: block; color: white; font-family: Gala=
xiePolaris-Bold, sans-serif; }

@media (max-width: 967px) {
  #partnerships-unlock-form, #unlock-form { margin: 0px 1%; }
  #partnerships-unlock-form .btn-xl, #unlock-form .btn-xl { margin: 0px aut=
o; padding: 10px 25%; display: block; color: white; }
  #partnerships-unlock-form .mfp-close, #unlock-form .mfp-close { right: 4%=
; top: 5%; }
}

@media (max-width: 767px) {
  #partnerships-unlock-form, #unlock-form .mfp-close { right: 4%; top: 4%; =
}
  .bottom-dropdown { position: relative; z-index: 1000; }
}

.mfp-bg { background: rgb(216, 216, 216); opacity: 0.8; }

.mfp-close-btn-in .mfp-close { opacity: 1; color: rgb(248, 97, 97); }

.mfp-close, .mfp-close:active { right: 24%; top: 2%; font-size: 4em; }

.faq { background-color: rgb(52, 152, 219); color: white; padding: 5rem; ma=
rgin-top: 10rem; }

.faq a { color: white; font-weight: 700; }

.faq .container { display: flex; flex-direction: column; align-items: flex-=
start; justify-content: center; }

.faq .container .btn-link { color: white; font-weight: bold; font-size: 2re=
m; margin-top: 1rem; overflow-wrap: break-word; text-align: left; padding: =
0px; white-space: normal !important; }

.faq .container .btn-link::before { display: inline-block; font-family: Fon=
tAwesome; content: "=EF=83=9A"; margin-right: 1rem; transition: all 0.3s ea=
se 0s; transform: rotate(0deg); }

.faq .container .btn-link[aria-expanded=3D"true"]::before { transform: rota=
te(90deg); }

.faq .container .btn-link:hover, .faq .container .btn-link:focus { text-dec=
oration: none; }

.faq .panel-body p { font-size: 2rem; padding-left: 1rem; }

@media (max-width: 992px) {
  .faq { margin-top: 0px; }
}
------MultipartBoundary--xuw2UVmZ3Veg0bio4EzmkENqo26lwNH9MTx2EuvV0n----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.rithmschool.com/assets/online_courses-5f5aa0adc079da6096414274ea95cbf5010c9f66e0b55e0e221f2ab002773ba1.css

@charset "utf-8";

@font-face { font-family: GalaxiePolaris-Bold; src: url("/assets/Galaxie-Po=
laris-Bold-af95fbd86d308472fd53baf497a3b75801195ffc5c0ea0769c4eac58261780fa=
.otf") format("truetype"); font-weight: normal; font-style: normal; }

@font-face { font-family: GalaxiePolaris-Book; src: url("/assets/Galaxie-Po=
laris-Book-23c65746ad2a4839e3f61abcbc2cf7c9d4d9810a4f9080ab0e20f271dc0ea73f=
.otf") format("truetype"); font-weight: normal; font-style: normal; }

@font-face { font-family: RobotoMono-LightItalic; src: url("/assets/RobotoM=
ono-LightItalic-9071f1d4f5ec68ec161fc6ae378a7536d92ae9ab730ef079346749a102f=
2d657.ttf") format("truetype"); font-weight: normal; font-style: normal; }

.full-width { width: 100vw; position: relative; left: 50%; right: 50%; marg=
in-left: -50vw; margin-right: -50vw; }

@font-face { font-family: GalaxiePolaris-Bold; src: url("/assets/Galaxie-Po=
laris-Bold-af95fbd86d308472fd53baf497a3b75801195ffc5c0ea0769c4eac58261780fa=
.otf") format("truetype"); font-weight: normal; font-style: normal; }

@font-face { font-family: GalaxiePolaris-Book; src: url("/assets/Galaxie-Po=
laris-Book-23c65746ad2a4839e3f61abcbc2cf7c9d4d9810a4f9080ab0e20f271dc0ea73f=
.otf") format("truetype"); font-weight: normal; font-style: normal; }

@font-face { font-family: RobotoMono-LightItalic; src: url("/assets/RobotoM=
ono-LightItalic-9071f1d4f5ec68ec161fc6ae378a7536d92ae9ab730ef079346749a102f=
2d657.ttf") format("truetype"); font-weight: normal; font-style: normal; }

.full-width { width: 100vw; position: relative; left: 50%; right: 50%; marg=
in-left: -50vw; margin-right: -50vw; }

.CodeRay { background-color: rgb(239, 239, 239); font-family: Monaco, "Cour=
ier New", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", monospace; color:=
 rgb(0, 0, 0); margin-bottom: 14px; }

.CodeRay pre { margin: 0px; padding: 1em; }

span.CodeRay { white-space: pre; border: 0px; padding: 2px; }

table.CodeRay { border-collapse: collapse; width: 100%; padding: 2px; }

table.CodeRay td { padding: 1em 0.5em; vertical-align: top; }

.CodeRay .line-numbers, .CodeRay .no { background-color: rgb(236, 236, 236)=
; color: rgb(170, 170, 170); text-align: right; }

.CodeRay .line-numbers a { color: rgb(170, 170, 170); }

.CodeRay .line-numbers tt { font-weight: bold; }

.CodeRay .line-numbers .highlighted { color: red; }

.CodeRay .line { display: block; float: left; width: 100%; }

.CodeRay span.line-numbers { padding: 0px 4px; }

.CodeRay .code { width: 100%; }

ol.CodeRay { font-size: 10pt; }

ol.CodeRay li { white-space: pre; }

.CodeRay .code pre { overflow: auto; }

.CodeRay .debug { color: white !important; background: blue !important; }

.CodeRay .annotation { color: rgb(0, 0, 119); }

.CodeRay .attribute-name { color: rgb(255, 0, 136); }

.CodeRay .attribute-value { color: rgb(119, 0, 0); }

.CodeRay .binary { color: rgb(85, 0, 153); font-weight: bold; }

.CodeRay .comment { color: rgb(153, 153, 136); font-style: italic; }

.CodeRay .char { color: rgb(0, 68, 221); }

.CodeRay .char .content { color: rgb(0, 68, 221); }

.CodeRay .char .delimiter { color: rgb(0, 51, 153); }

.CodeRay .class { color: rgb(68, 85, 136); font-weight: bold; }

.CodeRay .complex { color: rgb(170, 0, 136); font-weight: bold; }

.CodeRay .constant { color: teal; }

.CodeRay .color { color: rgb(0, 170, 0); }

.CodeRay .class-variable { color: rgb(51, 102, 153); }

.CodeRay .decorator { color: rgb(187, 0, 187); }

.CodeRay .definition { color: rgb(0, 153, 153); font-weight: bold; }

.CodeRay .directive { color: rgb(0, 136, 136); font-weight: bold; }

.CodeRay .delimiter { color: black; }

.CodeRay .doc { color: rgb(153, 119, 0); }

.CodeRay .doctype { color: rgb(51, 68, 187); }

.CodeRay .doc-string { color: rgb(221, 68, 34); font-weight: bold; }

.CodeRay .escape { color: rgb(102, 102, 102); font-weight: bold; }

.CodeRay .entity { color: rgb(136, 0, 0); font-weight: bold; }

.CodeRay .error { color: rgb(255, 0, 0); background-color: rgb(255, 170, 17=
0); }

.CodeRay .exception { color: rgb(204, 0, 0); font-weight: bold; }

.CodeRay .filename { color: rgb(0, 153, 153); }

.CodeRay .function { color: rgb(153, 0, 0); font-weight: bold; }

.CodeRay .global-variable { color: teal; font-weight: bold; }

.CodeRay .hex { color: rgb(0, 85, 136); font-weight: bold; }

.CodeRay .integer { color: rgb(0, 153, 153); }

.CodeRay .include { color: rgb(187, 68, 68); font-weight: bold; }

.CodeRay .inline { color: black; }

.CodeRay .inline .inline { background: rgb(204, 204, 204); }

.CodeRay .inline .inline .inline { background: rgb(187, 187, 187); }

.CodeRay .inline .inline-delimiter { color: rgb(221, 17, 68); }

.CodeRay .inline-delimiter { color: rgb(221, 17, 68); }

.CodeRay .important { color: rgb(255, 0, 0); }

.CodeRay .interpreted { color: rgb(187, 34, 187); font-weight: bold; }

.CodeRay .instance-variable { color: teal; }

.CodeRay .label { color: rgb(153, 119, 0); font-weight: bold; }

.CodeRay .local-variable { color: rgb(153, 102, 51); }

.CodeRay .octal { color: rgb(68, 0, 238); font-weight: bold; }

.CodeRay .predefined-constant { font-weight: bold; }

.CodeRay .predefined { color: rgb(51, 102, 153); font-weight: bold; }

.CodeRay .preprocessor { color: rgb(85, 119, 153); }

.CodeRay .pseudo-class { color: rgb(0, 0, 204); font-weight: bold; }

.CodeRay .predefined-type { color: rgb(0, 119, 68); font-weight: bold; }

.CodeRay .reserved, .keyword { color: rgb(0, 0, 0); font-weight: bold; }

.CodeRay .key { color: rgb(136, 0, 136); }

.CodeRay .key .delimiter { color: rgb(102, 0, 102); }

.CodeRay .key .char { color: rgb(136, 0, 255); }

.CodeRay .value { color: rgb(0, 136, 136); }

.CodeRay .regexp { background-color: rgb(255, 240, 255); }

.CodeRay .regexp .content { color: rgb(136, 0, 136); }

.CodeRay .regexp .delimiter { color: rgb(68, 0, 68); }

.CodeRay .regexp .modifier { color: rgb(204, 34, 204); }

.CodeRay .regexp .function { color: rgb(68, 0, 68); font-weight: bold; }

.CodeRay .string { color: rgb(221, 34, 0); }

.CodeRay .string .string .string { background-color: rgb(255, 208, 208); }

.CodeRay .string .content { color: rgb(221, 17, 68); }

.CodeRay .string .char { color: rgb(221, 17, 68); }

.CodeRay .string .delimiter { color: rgb(221, 17, 68); }

.CodeRay .shell { color: rgb(221, 17, 68); }

.CodeRay .shell .delimiter { color: rgb(221, 17, 68); }

.CodeRay .symbol { color: rgb(153, 0, 115); }

.CodeRay .symbol .content { color: rgb(170, 102, 0); }

.CodeRay .symbol .delimiter { color: rgb(102, 51, 0); }

.CodeRay .tag { color: rgb(0, 119, 0); }

.CodeRay .tag-special { color: rgb(221, 119, 0); font-weight: bold; }

.CodeRay .type { color: rgb(51, 51, 153); font-weight: bold; }

.CodeRay .variable { color: rgb(0, 51, 102); }

.CodeRay .insert { background: rgb(170, 255, 170); }

.CodeRay .delete { background: rgb(255, 170, 170); }

.CodeRay .change { color: rgb(170, 170, 255); background: rgb(0, 0, 119); }

.CodeRay .head { color: rgb(255, 136, 255); background: rgb(85, 0, 85); }

.CodeRay .insert .insert { color: rgb(0, 136, 0); font-weight: bold; }

.CodeRay .delete .delete { color: rgb(136, 0, 0); font-weight: bold; }

.CodeRay .change .change { color: rgb(102, 102, 255); }

.CodeRay .head .head { color: rgb(255, 68, 255); }

.autocomplete-suggestions { border: 1px solid rgb(153, 153, 153); backgroun=
d: rgb(255, 255, 255); overflow: auto; }

.autocomplete-suggestion { padding: 2px 5px; white-space: nowrap; overflow:=
 hidden; }

.autocomplete-selected { background: rgb(240, 240, 240); }

.autocomplete-suggestions strong { font-weight: normal; color: rgb(248, 97,=
 97); }

.autocomplete-group { padding: 2px 5px; }

.autocomplete-group strong { display: block; border-bottom: 1px solid rgb(0=
, 0, 0); }

.autocomplete-suggestion { cursor: pointer; }

.course-button-container a { display: inline-flex; align-items: center; jus=
tify-content: center; padding: 30px; background: white; color: black; borde=
r: none; margin: 5px; white-space: pre-line; width: 9em; }

h3 { margin-top: 0px; }

label, h5 { font: 16px / 25px GalaxiePolaris-Book, sans-serif; margin: 0px;=
 }

a:hover { text-decoration: none; }

.apply-now:focus, .apply-now:hover { text-decoration: none; }

.btn-primary:hover, .btn-primary:focus, .btn-primary:active, .btn-primary.a=
ctive, .open .dropdown-toggle.btn-primary, .btn-primary.active.focus, .btn-=
primary.active:focus, .btn-primary.active:hover, .btn-primary.focus:active,=
 .btn-primary:active:focus, .btn-primary:active:hover, .open > .dropdown-to=
ggle.btn-primary.focus, .open > .dropdown-toggle.btn-primary:focus, .open >=
 .dropdown-toggle.btn-primary:hover { background: rgb(238, 238, 238); curso=
r: pointer; color: black; }

.heading { margin-bottom: 40px; margin-top: 10px; padding-top: 10px; }

.prep-welcome { font: 16px / 25px GalaxiePolaris-Book, sans-serif; }

.prep-welcome + .row > a:hover { text-decoration: none; }

@media (max-width: 1200px) {
  .get-started-box { display: none; }
}

.intro { margin-top: 40px; }

#courses-index .row { margin-bottom: 20px; }

.get-started-box { padding: 20px 30px 30px; text-align: center; border: 1px=
 solid rgb(248, 97, 97); }

.time-header, .topics-header, .section-title { font: 10px / 14px GalaxiePol=
aris-Bold, sans-serif; letter-spacing: 3px; text-transform: uppercase; disp=
lay: flex; align-items: center; }

.topics-header, .time-header { justify-content: center; color: black; }

.section-title { color: white; background: rgb(248, 107, 107); height: 40px=
; margin-bottom: 20px; font-size: 12px; }

.image-cover { padding: 50px; font-size: 40px; line-height: 43px; font-fami=
ly: GalaxiePolaris-Bold, serif, serif; color: white; height: 220px; opacity=
: 0.9; }

#courses-hero { background: linear-gradient(transparent, transparent) left =
center / cover no-repeat fixed, url("/assets/courses_hero-605405f8e630acf54=
096b0420b6ebaaa751d6af6429b11e943ed143fdac17a83.png"); display: flex; justi=
fy-content: center; align-items: center; height: 300px; }

@media only screen and (min-device-width: 768px) and (max-device-width: 102=
4px) {
  #courses-hero { background-attachment: scroll; }
}

@media only screen and (min-device-width: 768px) and (max-device-width: 102=
4px) and (-webkit-device-pixel-ratio: 2) {
  #courses-hero { background-attachment: scroll; }
}

@media only screen and (min-device-width: 320px) and (max-device-width: 480=
px) and (device-aspect-ratio: 2 / 3) and (-webkit-device-pixel-ratio: 2) {
  #courses-hero { background-attachment: scroll; }
}

@media only screen and (min-device-width: 320px) and (max-device-width: 568=
px) and (device-aspect-ratio: 40 / 71) and (-webkit-device-pixel-ratio: 2) =
{
  #courses-hero { background-attachment: scroll; }
}

@media only screen and (min-device-width: 375px) and (max-device-width: 667=
px) and (-webkit-device-pixel-ratio: 2) {
  #courses-hero { background-attachment: scroll; }
}

@media only screen and (min-device-width: 414px) and (max-device-width: 736=
px) and (-webkit-device-pixel-ratio: 3) {
  #courses-hero { background-attachment: scroll; }
}

.col-sm-4 { width: 32.3333%; }

.second { margin: 0px 1.5%; }

@media (max-width: 766px) {
  .col-sm-4 { width: 100%; }
  .second { margin: 0px; }
  .new-card { margin: 10px 0px; }
  .course-button-container a { width: 100%; }
  .autocomplete-container { display: none; }
  .jump-to-section { font-weight: 900; font-size: 1.2em; }
}

.new-card { position: relative; background: white; text-align: left; margin=
-top: 0px; align-items: center; color: black; padding: 30px 10px; }

.new-card ol, .new-card ul { text-align: center; list-style: none; padding:=
 0px; }

.new-card li::before { content: "-"; padding-right: 5px; }

.new-card hr { margin: 20px auto; background: rgb(248, 97, 97); width: 50%;=
 border: none; height: 3px; }

.new-card h3 { text-align: center; font-family: GalaxiePolaris-Bold, serif;=
 }

.new-card p { text-align: center; font-family: GalaxiePolaris-Book, sans-se=
rif; }

.new-card:hover { background-color: rgb(238, 238, 238); cursor: pointer; }

#course-content img { max-width: 100%; display: block; margin: 0px auto; }

#course-content h1, #course-content h2, #course-content h3, #course-content=
 h4, #course-content h5, #course-content h6 { margin-top: 30px; }

#course-content .CodeRay { margin: 30px 0px; }

#course-content p, #course-content li:last-child { margin-bottom: 20px; }

#course-content li { margin-bottom: 10px; }

#course-content table { border: 1px solid rgb(204, 204, 204); margin: 0px a=
uto 10px; border-radius: 5px; }

#course-content table tbody > tr:nth-child(2n+1) { background-color: rgb(23=
8, 238, 238); }

#course-content table td, #course-content table th { padding: 10px; }

.course-unit { background-color: white; margin: 20px 0px; border-radius: 5p=
x; padding: 0px; }

.course-unit .unit-title { width: 80%; display: inline-block; }

.course-unit.locked { opacity: 0.3; }

.course-unit h4 { padding: 30px; font: 22px / 1.1 GalaxiePolaris-Bold, sans=
-serif; margin: 0px; border-radius: 5px; position: relative; }

.course-unit h4.open { border-bottom-right-radius: 0px; border-bottom-left-=
radius: 0px; }

.course-unit h4 i.fa-2x { position: absolute; right: 20px; margin: auto; bo=
ttom: 35px; height: 50%; font-size: 3em; }

.course-unit h4 i.fa-angle-down { right: 15px; }

.course-unit h4 small { display: block; font-size: 0.7em; text-align: left;=
 margin-top: 10px; color: rgb(243, 134, 134); }

.course-unit ul { list-style: none; display: none; padding-left: 0px; margi=
n-bottom: 0px; border-bottom: 1px solid rgb(225, 225, 225); }

.course-unit li { border-top: 1px solid rgb(225, 225, 225); padding: 20px 3=
0px; color: rgb(242, 125, 125); }

.course-unit li:hover { text-decoration: underline; }

.course-unit li i { margin-top: 0px; margin-right: 10px; }

.course-unit li a { font-size: medium; }

.course-unit h4:hover, .course-unit li:hover { background-color: rgb(238, 2=
38, 238); cursor: pointer; }

.course-unit i { color: rgb(242, 125, 125); }

@media (max-width: 420px) {
  .course-unit h4 i.fa-2x { position: absolute; right: 20px; font-size: 2.5=
em; margin: auto; top: 0px; bottom: 0px; height: 50%; }
}

iframe { display: block; margin: 0px auto 10px; }

#show-courses { color: rgb(255, 255, 255); background: rgb(52, 152, 219); f=
ont-size: 1em; letter-spacing: -0.1px; line-height: 1.9; width: 50px; text-=
align: center; border-radius: 0px 10px 10px 0px; padding: 6px; margin-top: =
0px; margin-left: 0px; border: none; position: fixed; left: 0px; top: 150px=
; transition: all 0.5s ease 0s; }

#show-courses:hover { background: rgb(33, 125, 187); letter-spacing: -0.1px=
; line-height: 1.9; text-align: center; border-radius: 10px; padding: 6px; =
margin-top: 0px; margin-left: 0px; text-decoration: none; }

#show-courses:hover { border-bottom-left-radius: 0px; border-top-left-radiu=
s: 0px; }

#show-courses:active, #show-courses:focus { outline: none; }

#show-courses.toggled { left: 250px; }

.nav-links { font-size: 1.2em; }
------MultipartBoundary--xuw2UVmZ3Veg0bio4EzmkENqo26lwNH9MTx2EuvV0n----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.rithmschool.com/assets/logos/rithm_logo-f188d2545d88917c033e407f4f87b02e2a3f5cf5dfb60e626787785fa9c13774.svg

<?xml version=3D"1.0" encoding=3D"UTF-8" standalone=3D"no"?>
<svg
   xmlns:dc=3D"http://purl.org/dc/elements/1.1/"
   xmlns:cc=3D"http://creativecommons.org/ns#"
   xmlns:rdf=3D"http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg=3D"http://www.w3.org/2000/svg"
   xmlns=3D"http://www.w3.org/2000/svg"
   viewBox=3D"35 30 270 105"
   xml:space=3D"preserve"
   id=3D"svg3756"
   version=3D"1.1"><metadata
     id=3D"metadata3762"><rdf:RDF><cc:Work
         rdf:about=3D""><dc:format>image/svg+xml</dc:format><dc:type
           rdf:resource=3D"http://purl.org/dc/dcmitype/StillImage" /><dc:ti=
tle></dc:title></cc:Work></rdf:RDF></metadata><defs
     id=3D"defs3760"><clipPath
       id=3D"clipPath3838"
       clipPathUnits=3D"userSpaceOnUse"><path
         id=3D"path3836"
         d=3D"M 0,120.405 H 254.118 V 0 H 0 Z" /></clipPath></defs><g
     transform=3D"matrix(1.3333333,0,0,-1.3333333,0,160.54)"
     id=3D"g3764"><g
       id=3D"g3832"><g
         clip-path=3D"url(#clipPath3838)"
         id=3D"g3834"><g
           transform=3D"translate(129.2,75.4932)"
           id=3D"g3840"><path
             id=3D"path3842"
             style=3D"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:=
none"
             d=3D"M 0,0 H 5.07 C 7.87,0 9.271,1.18 9.271,3.54 9.271,5.9 7.8=
7,7.08 5.07,7.08 H 0 Z M 4.74,-2.25 H 0 v -8.22 h -2.399 v 19.8 h 7.5 C 7.1=
2,9.33 8.74,8.81 9.96,7.771 11.18,6.73 11.79,5.32 11.79,3.54 11.79,2.14 11.=
4,0.96 10.62,0 9.84,-0.96 8.77,-1.62 7.41,-1.979 l 5.58,-8.491 h -2.85 z" /=
></g><path
           id=3D"path3844"
           style=3D"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:no=
ne"
           d=3D"m 149.45,65.023 h -2.4 v 15 h 2.4 z m -2.505,18.375 c -0.33=
,0.331 -0.495,0.765 -0.495,1.305 0,0.54 0.165,0.976 0.495,1.306 0.33,0.33 0=
.765,0.495 1.305,0.495 0.54,0 0.974,-0.165 1.304,-0.495 0.331,-0.33 0.496,-=
0.766 0.496,-1.306 0,-0.54 -0.165,-0.974 -0.496,-1.305 -0.33,-0.33 -0.764,-=
0.495 -1.304,-0.495 -0.54,0 -0.975,0.165 -1.305,0.495" /><g
           transform=3D"translate(165.1102,66.0732)"
           id=3D"g3846"><path
             id=3D"path3848"
             style=3D"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:=
none"
             d=3D"m 0,0 c -1.001,-0.899 -2.291,-1.35 -3.87,-1.35 -1.221,0 -=
2.216,0.33 -2.985,0.991 C -7.626,0.3 -8.021,1.31 -8.04,2.67 v 9.21 h -3 v 2=
.07 h 3 v 3.6 l 2.399,0.66 v -4.26 h 5.55 v -2.07 h -5.55 V 3.09 c 0,-0.72 =
0.205,-1.265 0.616,-1.635 0.409,-0.37 0.955,-0.555 1.634,-0.555 0.96,0 1.81=
,0.371 2.55,1.11 z" /></g><g
           transform=3D"translate(180.8895,78.8535)"
           id=3D"g3850"><path
             id=3D"path3852"
             style=3D"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:=
none"
             d=3D"m 0,0 c 1.101,-0.98 1.65,-2.391 1.65,-4.23 v -9.6 h -2.4 =
v 8.76 c 0,1.56 -0.335,2.689 -1.005,3.39 -0.67,0.7 -1.564,1.05 -2.684,1.05 =
-0.781,0 -1.526,-0.181 -2.236,-0.54 -0.71,-0.36 -1.29,-0.935 -1.739,-1.726 =
-0.45,-0.79 -0.676,-1.784 -0.676,-2.984 v -7.95 h -2.399 v 21.9 h 2.399 v -=
9.15 c 0.5,0.859 1.175,1.5 2.026,1.92 0.849,0.42 1.804,0.63 2.865,0.63 C -2=
.5,1.47 -1.1,0.979 0,0" /></g><g
           transform=3D"translate(209.1043,79.708)"
           id=3D"g3854"><path
             id=3D"path3856"
             style=3D"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:=
none"
             d=3D"m 0,0 c 0.87,-0.41 1.575,-1.045 2.115,-1.904 0.54,-0.861 =
0.811,-1.92 0.811,-3.181 v -9.6 H 0.525 v 9.361 c 0,1.3 -0.325,2.264 -0.974=
,2.894 -0.651,0.63 -1.506,0.946 -2.566,0.946 -0.799,0 -1.535,-0.196 -2.205,=
-0.585 -0.67,-0.391 -1.21,-0.96 -1.62,-1.71 -0.41,-0.75 -0.615,-1.646 -0.61=
5,-2.686 v -8.22 h -2.399 v 9.361 c 0,1.3 -0.326,2.264 -0.976,2.894 -0.649,=
0.63 -1.505,0.946 -2.565,0.946 -0.719,0 -1.42,-0.186 -2.1,-0.556 -0.68,-0.3=
7 -1.24,-0.944 -1.68,-1.725 -0.44,-0.78 -0.66,-1.75 -0.66,-2.91 v -8.01 h -=
2.399 v 15 h 2.099 l 0.151,-2.339 c 0.519,0.879 1.204,1.54 2.054,1.979 0.85=
,0.441 1.765,0.66 2.745,0.66 1.1,0 2.116,-0.25 3.045,-0.75 0.93,-0.5 1.635,=
-1.229 2.116,-2.189 0.439,0.96 1.159,1.689 2.16,2.189 0.999,0.5 2.019,0.75 =
3.059,0.75 1,0 1.935,-0.205 2.805,-0.615" /></g><g
           transform=3D"translate(141.8103,50.9238)"
           id=3D"g3858"><path
             id=3D"path3860"
             style=3D"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:=
none"
             d=3D"m 0,0 -2.07,-1.681 c -0.6,1.321 -1.316,2.255 -2.145,2.806=
 -0.83,0.55 -1.966,0.824 -3.405,0.824 -1.521,0 -2.715,-0.314 -3.585,-0.944 =
-0.87,-0.63 -1.305,-1.436 -1.305,-2.415 0,-0.641 0.169,-1.17 0.51,-1.59 0.3=
4,-0.42 0.904,-0.785 1.694,-1.096 0.79,-0.309 1.886,-0.585 3.285,-0.824 2.6=
21,-0.44 4.475,-1.101 5.566,-1.98 1.09,-0.88 1.635,-2.1 1.635,-3.661 0,-1.1=
2 -0.315,-2.105 -0.946,-2.955 -0.63,-0.849 -1.525,-1.509 -2.684,-1.979 -1.1=
6,-0.47 -2.5,-0.705 -4.021,-0.705 -2,0 -3.704,0.389 -5.114,1.17 -1.41,0.78 =
-2.485,1.819 -3.226,3.12 l 2.071,1.68 c 0.54,-1.181 1.335,-2.096 2.385,-2.7=
46 1.049,-0.65 2.365,-0.974 3.945,-0.974 1.559,0 2.8,0.285 3.72,0.854 0.919=
,0.571 1.379,1.375 1.379,2.415 0,0.88 -0.4,1.58 -1.199,2.101 -0.801,0.519 -=
2.22,0.96 -4.261,1.319 -2.639,0.46 -4.509,1.12 -5.609,1.981 -1.1,0.859 -1.6=
5,2.059 -1.65,3.599 0,1.061 0.3,2.04 0.9,2.941 0.6,0.899 1.459,1.614 2.58,2=
.144 1.119,0.531 2.419,0.795 3.9,0.795 C -4.11,4.199 -1.561,2.8 0,0" /></g>=
<g
           transform=3D"translate(156.7049,49.2881)"
           id=3D"g3862"><path
             id=3D"path3864"
             style=3D"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:=
none"
             d=3D"m 0,0 c 1.029,-0.689 1.834,-1.675 2.415,-2.955 l -2.28,-1=
.079 c -0.641,1.979 -1.97,2.97 -3.99,2.97 -1.5,0 -2.675,-0.506 -3.525,-1.51=
6 -0.85,-1.01 -1.275,-2.404 -1.275,-4.185 0,-1.78 0.425,-3.175 1.275,-4.184=
 0.85,-1.011 2.025,-1.516 3.525,-1.516 1.16,0 2.094,0.265 2.805,0.795 0.709=
,0.53 1.174,1.295 1.395,2.295 l 2.219,-0.779 c -0.52,-1.401 -1.319,-2.486 -=
2.399,-3.255 -1.08,-0.771 -2.4,-1.155 -3.96,-1.155 -2.261,0 -4.035,0.689 -5=
.325,2.069 -1.29,1.381 -1.936,3.29 -1.936,5.73 0,2.44 0.646,4.35 1.936,5.73=
1 1.29,1.38 3.064,2.069 5.325,2.069 C -2.295,1.035 -1.03,0.69 0,0" /></g><g
           transform=3D"translate(174.9891,48.8535)"
           id=3D"g3866"><path
             id=3D"path3868"
             style=3D"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:=
none"
             d=3D"m 0,0 c 1.101,-0.98 1.65,-2.391 1.65,-4.23 v -9.6 h -2.4 =
v 8.76 c 0,1.56 -0.335,2.689 -1.005,3.39 -0.67,0.7 -1.564,1.05 -2.684,1.05 =
-0.781,0 -1.526,-0.181 -2.236,-0.54 -0.71,-0.36 -1.29,-0.935 -1.739,-1.726 =
-0.45,-0.79 -0.676,-1.784 -0.676,-2.984 v -7.95 h -2.399 v 21.9 h 2.399 v -=
9.15 c 0.5,0.859 1.175,1.5 2.026,1.92 0.849,0.42 1.804,0.63 2.865,0.63 C -2=
.5,1.47 -1.1,0.979 0,0" /></g><g
           transform=3D"translate(184.8289,46.7236)"
           id=3D"g3870"><path
             id=3D"path3872"
             style=3D"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:=
none"
             d=3D"m 0,0 c -0.859,-1.021 -1.29,-2.42 -1.29,-4.2 0,-1.78 0.43=
1,-3.18 1.29,-4.2 0.86,-1.02 2.05,-1.531 3.57,-1.531 1.52,0 2.71,0.511 3.57=
1,1.531 0.859,1.02 1.29,2.42 1.29,4.2 C 8.431,-2.42 8,-1.021 7.141,0 6.28,1=
.02 5.09,1.53 3.57,1.53 2.05,1.53 0.86,1.02 0,0 m 8.896,1.53 c 1.29,-1.381 =
1.934,-3.291 1.934,-5.73 0,-2.441 -0.644,-4.35 -1.934,-5.731 C 7.605,-11.31=
1 5.83,-12 3.57,-12 c -2.259,0 -4.035,0.689 -5.325,2.069 -1.29,1.381 -1.934=
,3.29 -1.934,5.731 0,2.439 0.644,4.349 1.934,5.73 1.29,1.38 3.066,2.07 5.32=
5,2.07 2.26,0 4.035,-0.69 5.326,-2.07" /></g><g
           transform=3D"translate(203.0691,46.7236)"
           id=3D"g3874"><path
             id=3D"path3876"
             style=3D"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:=
none"
             d=3D"m 0,0 c -0.86,-1.021 -1.29,-2.42 -1.29,-4.2 0,-1.78 0.43,=
-3.18 1.29,-4.2 0.859,-1.02 2.05,-1.531 3.57,-1.531 1.52,0 2.71,0.511 3.57,=
1.531 C 8,-7.38 8.43,-5.98 8.43,-4.2 8.43,-2.42 8,-1.021 7.14,0 6.28,1.02 5=
.09,1.53 3.57,1.53 2.05,1.53 0.859,1.02 0,0 m 8.895,1.53 c 1.29,-1.381 1.93=
5,-3.291 1.935,-5.73 0,-2.441 -0.645,-4.35 -1.935,-5.731 C 7.604,-11.311 5.=
83,-12 3.57,-12 c -2.26,0 -4.035,0.689 -5.325,2.069 -1.29,1.381 -1.935,3.29=
 -1.935,5.731 0,2.439 0.645,4.349 1.935,5.73 1.29,1.38 3.065,2.07 5.325,2.0=
7 2.26,0 4.034,-0.69 5.325,-2.07" /></g><g
           transform=3D"translate(220.8289,39.043)"
           id=3D"g3878"><path
             id=3D"path3880"
             style=3D"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:=
none"
             d=3D"M 0,0 C 0,-0.76 0.115,-1.285 0.345,-1.574 0.574,-1.864 1,=
-2.01 1.62,-2.01 c 0.42,0 0.784,0.031 1.095,0.09 0.309,0.061 0.675,0.17 1.0=
95,0.33 L 3.42,-3.899 c -0.66,-0.281 -1.4,-0.42 -2.22,-0.42 -1.221,0 -2.126=
,0.33 -2.715,0.99 C -2.105,-2.67 -2.4,-1.66 -2.4,-0.3 V 17.881 H 0 Z" /></g=
><g
           transform=3D"translate(88.7106,26.8247)"
           id=3D"g3882"><path
             id=3D"path3884"
             style=3D"fill:none;stroke:#000000;stroke-width:2;stroke-lineca=
p:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stro=
ke-opacity:1"
             d=3D"m 0,0 h 4.87 c 9.489,0 11.673,2.687 11.673,8.649 v 16.123=
 c 0,4.871 0.756,7.726 6.466,8.734 v 0.336 c -5.71,1.008 -6.466,3.863 -6.46=
6,8.733 v 16.123 c 0,5.963 -2.184,8.65 -11.673,8.65 H 0" /></g><g
           transform=3D"translate(53.4221,94.1723)"
           id=3D"g3886"><path
             id=3D"path3888"
             style=3D"fill:none;stroke:#000000;stroke-width:2;stroke-lineca=
p:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stro=
ke-opacity:1"
             d=3D"m 0,0 h -4.87 c -9.489,0 -11.673,-2.687 -11.673,-8.649 v =
-16.123 c 0,-4.871 -0.756,-7.726 -6.466,-8.734 v -0.336 c 5.71,-1.008 6.466=
,-3.863 6.466,-8.733 v -16.123 c 0,-5.963 2.184,-8.65 11.673,-8.65 H 0" /><=
/g><g
           transform=3D"translate(61.1085,60.8589)"
           id=3D"g3890"><path
             id=3D"path3892"
             style=3D"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:=
none"
             d=3D"m 0,0 h 11.28 c 3.12,0 5.49,0.699 7.11,2.1 1.62,1.4 2.43,=
3.42 2.43,6.06 0,2.64 -0.81,4.65 -2.43,6.029 -1.62,1.381 -3.99,2.071 -7.11,=
2.071 H 0 Z M 11.28,-3.18 H 0 v -16.98 h -3.42 v 39.599 h 14.76 c 3.96,0 7.=
129,-1.009 9.51,-3.029 2.379,-2.02 3.57,-4.77 3.57,-8.25 0,-2.88 -0.82,-5.2=
8 -2.46,-7.2 -1.641,-1.92 -3.9,-3.16 -6.78,-3.72 l 8.4,-17.4 h -4.02 z" /><=
/g><g
           transform=3D"translate(93.581,25.8249)"
           id=3D"g3894"><path
             id=3D"path3896"
             style=3D"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:=
none"
             d=3D"M 0,0 H -4.87 V 2 H 0 c 9.132,0 10.673,2.36 10.673,7.649 =
v 16.123 c 0,3.841 0.381,7.198 4.4,8.902 -4.019,1.703 -4.4,5.06 -4.4,8.901 =
v 16.123 c 0,5.29 -1.541,7.65 -10.673,7.65 h -4.87 v 2 H 0 c 9.356,0 12.673=
,-2.525 12.673,-9.65 V 43.575 c 0,-4.591 0.556,-6.851 5.639,-7.749 L 19.139=
,35.68 V 33.667 L 18.312,33.521 C 13.229,32.624 12.673,30.363 12.673,25.772=
 V 9.649 C 12.673,2.525 9.356,0 0,0" /></g><g
           transform=3D"translate(53.4218,25.8249)"
           id=3D"g3898"><path
             id=3D"path3900"
             style=3D"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:=
none"
             d=3D"m 0,0 h -4.87 c -9.357,0 -12.673,2.525 -12.673,9.649 v 16=
.123 c 0,4.591 -0.557,6.852 -5.64,7.749 l -0.826,0.146 v 2.013 l 0.826,0.14=
6 c 5.083,0.898 5.64,3.159 5.64,7.749 v 16.123 c 0,7.125 3.316,9.65 12.673,=
9.65 H 0 v -2 h -4.87 c -9.132,0 -10.673,-2.36 -10.673,-7.65 V 43.575 c 0,-=
3.841 -0.38,-7.198 -4.401,-8.901 4.021,-1.704 4.401,-5.061 4.401,-8.902 V 9=
.649 C -15.543,4.36 -14.002,2 -4.87,2 H 0 Z" /></g><g
           transform=3D"translate(61.1085,60.8589)"
           id=3D"g3902"><path
             id=3D"path3904"
             style=3D"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:=
none"
             d=3D"m 0,0 h 11.28 c 3.12,0 5.49,0.699 7.11,2.1 1.62,1.4 2.43,=
3.42 2.43,6.06 0,2.64 -0.81,4.65 -2.43,6.029 -1.62,1.381 -3.99,2.071 -7.11,=
2.071 H 0 Z M 11.28,-3.18 H 0 v -16.98 h -3.42 v 39.599 h 14.76 c 3.96,0 7.=
129,-1.009 9.51,-3.029 2.379,-2.02 3.57,-4.77 3.57,-8.25 0,-2.88 -0.82,-5.2=
8 -2.46,-7.2 -1.641,-1.92 -3.9,-3.16 -6.78,-3.72 l 8.4,-17.4 h -4.02 z" /><=
/g></g></g></g></svg>
------MultipartBoundary--xuw2UVmZ3Veg0bio4EzmkENqo26lwNH9MTx2EuvV0n----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.rithmschool.com/assets/sidebar-d2287389bf5271229e2383f0a7a65ef5461aa71513ea74923fba3c92c2a7c01b.css

@charset "utf-8";

@font-face { font-family: GalaxiePolaris-Bold; src: url("/assets/Galaxie-Po=
laris-Bold-af95fbd86d308472fd53baf497a3b75801195ffc5c0ea0769c4eac58261780fa=
.otf") format("truetype"); font-weight: normal; font-style: normal; }

@font-face { font-family: GalaxiePolaris-Book; src: url("/assets/Galaxie-Po=
laris-Book-23c65746ad2a4839e3f61abcbc2cf7c9d4d9810a4f9080ab0e20f271dc0ea73f=
.otf") format("truetype"); font-weight: normal; font-style: normal; }

@font-face { font-family: RobotoMono-LightItalic; src: url("/assets/RobotoM=
ono-LightItalic-9071f1d4f5ec68ec161fc6ae378a7536d92ae9ab730ef079346749a102f=
2d657.ttf") format("truetype"); font-weight: normal; font-style: normal; }

.full-width { width: 100vw; position: relative; left: 50%; right: 50%; marg=
in-left: -50vw; margin-right: -50vw; }

body { overflow-x: hidden; }

#wrapper { padding-left: 0px; transition: all 0.5s ease 0s; }

#wrapper.toggled { padding-left: 200px; }

#sidebar-wrapper { z-index: 1000; position: fixed; left: 250px; top: 150px;=
 bottom: 0px; width: 0px; margin-left: -250px; overflow-y: scroll; transiti=
on: all 0.5s ease 0s; background-color: rgb(255, 255, 255); }

#wrapper.toggled #sidebar-wrapper { width: 250px; }

#page-content-wrapper { width: 100%; position: relative; padding: 15px; }

#wrapper.toggled #page-content-wrapper { position: relative; margin-right: =
-250px; }

.sidebar-nav { position: relative; top: 0px; width: 250px; margin: 0px; pad=
ding: 0px; list-style: none; }

.sidebar-nav li { padding: 10px; }

.sidebar-nav li a { display: block; text-decoration: none; color: rgb(248, =
97, 97); font-size: 12px; }

.sidebar-nav li a:hover { color: rgb(248, 97, 97); }

.sidebar-nav li a:active, .sidebar-nav li a:focus { text-decoration: none; =
}

.sidebar-nav > .sidebar-brand { height: 65px; font-size: 18px; line-height:=
 60px; }

.sidebar-nav > .sidebar-brand a { color: rgb(153, 153, 153); }

.sidebar-nav > .sidebar-brand a:hover { color: rgb(255, 255, 255); backgrou=
nd: none; }

@media (max-width: 768px) {
  #show-courses, #wrapper.toggled { display: none; }
}

.course-unit:last-child { border-bottom: 1px solid rgb(248, 97, 97); }

.course-unit { margin: 0px; border-top: 1px solid rgb(248, 97, 97); border-=
radius: 0px; }

.course-unit h4 { padding: 40px 10px; font-size: inherit; }

.course-unit h4 small { display: none; }

.course-unit h4 i.fa-2x { top: 0px; bottom: 0px; }

.unit-title { width: 100%; }
------MultipartBoundary--xuw2UVmZ3Veg0bio4EzmkENqo26lwNH9MTx2EuvV0n----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://i.creativecommons.org/l/by-nc-nd/4.0/80x15.png

iVBORw0KGgoAAAANSUhEUgAAAFAAAAAPCAMAAABEF7i9AAAABGdBTUEAANbY1E9YMgAAAJZQTFRF
////7u7u3d3dys7KzMzMyMzIxsrGxcbFur+6u7u7s7iyq7GqqqqqmZmZlJmTj5CPiIiIh4eHhoaG
gICAfYJ9d3d3cnZxZ2tnZmZmW15bVVVVS0xLREREQ0NDQkJCQUJBOz07OTs5MzMzMTMxLjAuJygn
JCUjIiIiISEhICAgGRkZERERDxAPDg4ODQ4NDQ0NDQ0MAAAADbeuvgAAAOJJREFUeNqtk21PAjEQ
hKdyKjpwFrGIWN8QOPE8cP7/n/PD9YolmhivmzRpJ9un090WyhwQsoYgkCRvZYPkm5IcfPzbXwss
GxsP8WtyOO0JfH47uC50R57e9wPuLIpK3nhVBfwrObiSJAAS1A7FKXAAhDYcAW90gWoB52ozHsHt
yOF5yEebFfK71W9CB5ypMLLAYgkAriEvz6LD4KPb2+FTAT869PPauDHcPnWo7zdE6vBIiDXcW4xq
zY3X8gQPq6SGKfBvNeTLNnOXy89JBD5uMrxDznQdeE/vfX9K7r+cOb4AY2+UGwcd6o0AAAAASUVO
RK5CYII=

------MultipartBoundary--xuw2UVmZ3Veg0bio4EzmkENqo26lwNH9MTx2EuvV0n------
